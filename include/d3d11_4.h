/*** Autogenerated by WIDL 5.0 from ./d3d11_4.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __d3d11_4_h__
#define __d3d11_4_h__

/* Forward declarations */

#ifndef __ID3D11Device4_FWD_DEFINED__
#define __ID3D11Device4_FWD_DEFINED__
typedef interface ID3D11Device4 ID3D11Device4;
#ifdef __cplusplus
interface ID3D11Device4;
#endif /* __cplusplus */
#endif

#ifndef __ID3D11Device5_FWD_DEFINED__
#define __ID3D11Device5_FWD_DEFINED__
typedef interface ID3D11Device5 ID3D11Device5;
#ifdef __cplusplus
interface ID3D11Device5;
#endif /* __cplusplus */
#endif

#ifndef __ID3D11Multithread_FWD_DEFINED__
#define __ID3D11Multithread_FWD_DEFINED__
typedef interface ID3D11Multithread ID3D11Multithread;
#ifdef __cplusplus
interface ID3D11Multithread;
#endif /* __cplusplus */
#endif

#ifndef __ID3D11VideoContext2_FWD_DEFINED__
#define __ID3D11VideoContext2_FWD_DEFINED__
typedef interface ID3D11VideoContext2 ID3D11VideoContext2;
#ifdef __cplusplus
interface ID3D11VideoContext2;
#endif /* __cplusplus */
#endif

#ifndef __ID3D11VideoDevice2_FWD_DEFINED__
#define __ID3D11VideoDevice2_FWD_DEFINED__
typedef interface ID3D11VideoDevice2 ID3D11VideoDevice2;
#ifdef __cplusplus
interface ID3D11VideoDevice2;
#endif /* __cplusplus */
#endif

#ifndef __ID3D11VideoContext3_FWD_DEFINED__
#define __ID3D11VideoContext3_FWD_DEFINED__
typedef interface ID3D11VideoContext3 ID3D11VideoContext3;
#ifdef __cplusplus
interface ID3D11VideoContext3;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>
#include <ocidl.h>
#include <dxgi1_5.h>
#include <d3dcommon.h>
#include <d3d11_3.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
}
#endif
#include "d3d11_3.h" //
#ifdef __cplusplus
extern "C"{
#endif
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
/*****************************************************************************
 * ID3D11Device4 interface
 */
#ifndef __ID3D11Device4_INTERFACE_DEFINED__
#define __ID3D11Device4_INTERFACE_DEFINED__

DEFINE_GUID(IID_ID3D11Device4, 0x8992ab71, 0x02e6, 0x4b8d, 0xba,0x48, 0xb0,0x56,0xdc,0xda,0x42,0xc4);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("8992ab71-02e6-4b8d-ba48-b056dcda42c4")
ID3D11Device4 : public ID3D11Device3
{
    virtual HRESULT STDMETHODCALLTYPE RegisterDeviceRemovedEvent(
        HANDLE hEvent,
        DWORD *pdwCookie) = 0;

    virtual void STDMETHODCALLTYPE UnregisterDeviceRemoved(
        DWORD dwCookie) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ID3D11Device4, 0x8992ab71, 0x02e6, 0x4b8d, 0xba,0x48, 0xb0,0x56,0xdc,0xda,0x42,0xc4)
#endif
#else
typedef struct ID3D11Device4Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ID3D11Device4 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ID3D11Device4 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ID3D11Device4 *This);

    /*** ID3D11Device methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateBuffer)(
        ID3D11Device4 *This,
        const D3D11_BUFFER_DESC *pDesc,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Buffer **ppBuffer);

    HRESULT (STDMETHODCALLTYPE *CreateTexture1D)(
        ID3D11Device4 *This,
        const D3D11_TEXTURE1D_DESC *pDesc,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture1D **ppTexture1D);

    HRESULT (STDMETHODCALLTYPE *CreateTexture2D)(
        ID3D11Device4 *This,
        const D3D11_TEXTURE2D_DESC *pDesc,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture2D **ppTexture2D);

    HRESULT (STDMETHODCALLTYPE *CreateTexture3D)(
        ID3D11Device4 *This,
        const D3D11_TEXTURE3D_DESC *pDesc,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture3D **ppTexture3D);

    HRESULT (STDMETHODCALLTYPE *CreateShaderResourceView)(
        ID3D11Device4 *This,
        ID3D11Resource *pResource,
        const D3D11_SHADER_RESOURCE_VIEW_DESC *pDesc,
        ID3D11ShaderResourceView **ppSRView);

    HRESULT (STDMETHODCALLTYPE *CreateUnorderedAccessView)(
        ID3D11Device4 *This,
        ID3D11Resource *pResource,
        const D3D11_UNORDERED_ACCESS_VIEW_DESC *pDesc,
        ID3D11UnorderedAccessView **ppUAView);

    HRESULT (STDMETHODCALLTYPE *CreateRenderTargetView)(
        ID3D11Device4 *This,
        ID3D11Resource *pResource,
        const D3D11_RENDER_TARGET_VIEW_DESC *pDesc,
        ID3D11RenderTargetView **ppRTView);

    HRESULT (STDMETHODCALLTYPE *CreateDepthStencilView)(
        ID3D11Device4 *This,
        ID3D11Resource *pResource,
        const D3D11_DEPTH_STENCIL_VIEW_DESC *pDesc,
        ID3D11DepthStencilView **ppDepthStencilView);

    HRESULT (STDMETHODCALLTYPE *CreateInputLayout)(
        ID3D11Device4 *This,
        const D3D11_INPUT_ELEMENT_DESC *pInputElementDescs,
        UINT NumElements,
        const void *pShaderBytecodeWithInputSignature,
        SIZE_T BytecodeLength,
        ID3D11InputLayout **ppInputLayout);

    HRESULT (STDMETHODCALLTYPE *CreateVertexShader)(
        ID3D11Device4 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11VertexShader **ppVertexShader);

    HRESULT (STDMETHODCALLTYPE *CreateGeometryShader)(
        ID3D11Device4 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11GeometryShader **ppGeometryShader);

    HRESULT (STDMETHODCALLTYPE *CreateGeometryShaderWithStreamOutput)(
        ID3D11Device4 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        const D3D11_SO_DECLARATION_ENTRY *pSODeclaration,
        UINT NumEntries,
        const UINT *pBufferStrides,
        UINT NumStrides,
        UINT RasterizedStream,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11GeometryShader **ppGeometryShader);

    HRESULT (STDMETHODCALLTYPE *CreatePixelShader)(
        ID3D11Device4 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11PixelShader **ppPixelShader);

    HRESULT (STDMETHODCALLTYPE *CreateHullShader)(
        ID3D11Device4 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11HullShader **ppHullShader);

    HRESULT (STDMETHODCALLTYPE *CreateDomainShader)(
        ID3D11Device4 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11DomainShader **ppDomainShader);

    HRESULT (STDMETHODCALLTYPE *CreateComputeShader)(
        ID3D11Device4 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11ComputeShader **ppComputeShader);

    HRESULT (STDMETHODCALLTYPE *CreateClassLinkage)(
        ID3D11Device4 *This,
        ID3D11ClassLinkage **ppLinkage);

    HRESULT (STDMETHODCALLTYPE *CreateBlendState)(
        ID3D11Device4 *This,
        const D3D11_BLEND_DESC *pBlendStateDesc,
        ID3D11BlendState **ppBlendState);

    HRESULT (STDMETHODCALLTYPE *CreateDepthStencilState)(
        ID3D11Device4 *This,
        const D3D11_DEPTH_STENCIL_DESC *pDepthStencilDesc,
        ID3D11DepthStencilState **ppDepthStencilState);

    HRESULT (STDMETHODCALLTYPE *CreateRasterizerState)(
        ID3D11Device4 *This,
        const D3D11_RASTERIZER_DESC *pRasterizerDesc,
        ID3D11RasterizerState **ppRasterizerState);

    HRESULT (STDMETHODCALLTYPE *CreateSamplerState)(
        ID3D11Device4 *This,
        const D3D11_SAMPLER_DESC *pSamplerDesc,
        ID3D11SamplerState **ppSamplerState);

    HRESULT (STDMETHODCALLTYPE *CreateQuery)(
        ID3D11Device4 *This,
        const D3D11_QUERY_DESC *pQueryDesc,
        ID3D11Query **ppQuery);

    HRESULT (STDMETHODCALLTYPE *CreatePredicate)(
        ID3D11Device4 *This,
        const D3D11_QUERY_DESC *pPredicateDesc,
        ID3D11Predicate **ppPredicate);

    HRESULT (STDMETHODCALLTYPE *CreateCounter)(
        ID3D11Device4 *This,
        const D3D11_COUNTER_DESC *pCounterDesc,
        ID3D11Counter **ppCounter);

    HRESULT (STDMETHODCALLTYPE *CreateDeferredContext)(
        ID3D11Device4 *This,
        UINT ContextFlags,
        ID3D11DeviceContext **ppDeferredContext);

    HRESULT (STDMETHODCALLTYPE *OpenSharedResource)(
        ID3D11Device4 *This,
        HANDLE hResource,
        REFIID ReturnedInterface,
        void **ppResource);

    HRESULT (STDMETHODCALLTYPE *CheckFormatSupport)(
        ID3D11Device4 *This,
        DXGI_FORMAT Format,
        UINT *pFormatSupport);

    HRESULT (STDMETHODCALLTYPE *CheckMultisampleQualityLevels)(
        ID3D11Device4 *This,
        DXGI_FORMAT Format,
        UINT SampleCount,
        UINT *pNumQualityLevels);

    void (STDMETHODCALLTYPE *CheckCounterInfo)(
        ID3D11Device4 *This,
        D3D11_COUNTER_INFO *pCounterInfo);

    HRESULT (STDMETHODCALLTYPE *CheckCounter)(
        ID3D11Device4 *This,
        const D3D11_COUNTER_DESC *pDesc,
        D3D11_COUNTER_TYPE *pType,
        UINT *pActiveCounters,
        LPSTR szName,
        UINT *pNameLength,
        LPSTR szUnits,
        UINT *pUnitsLength,
        LPSTR szDescription,
        UINT *pDescriptionLength);

    HRESULT (STDMETHODCALLTYPE *CheckFeatureSupport)(
        ID3D11Device4 *This,
        D3D11_FEATURE Feature,
        void *pFeatureSupportData,
        UINT FeatureSupportDataSize);

    HRESULT (STDMETHODCALLTYPE *GetPrivateData)(
        ID3D11Device4 *This,
        REFGUID guid,
        UINT *pDataSize,
        void *pData);

    HRESULT (STDMETHODCALLTYPE *SetPrivateData)(
        ID3D11Device4 *This,
        REFGUID guid,
        UINT DataSize,
        const void *pData);

    HRESULT (STDMETHODCALLTYPE *SetPrivateDataInterface)(
        ID3D11Device4 *This,
        REFGUID guid,
        const IUnknown *pData);

    D3D_FEATURE_LEVEL (STDMETHODCALLTYPE *GetFeatureLevel)(
        ID3D11Device4 *This);

    UINT (STDMETHODCALLTYPE *GetCreationFlags)(
        ID3D11Device4 *This);

    HRESULT (STDMETHODCALLTYPE *GetDeviceRemovedReason)(
        ID3D11Device4 *This);

    void (STDMETHODCALLTYPE *GetImmediateContext)(
        ID3D11Device4 *This,
        ID3D11DeviceContext **ppImmediateContext);

    HRESULT (STDMETHODCALLTYPE *SetExceptionMode)(
        ID3D11Device4 *This,
        UINT RaiseFlags);

    UINT (STDMETHODCALLTYPE *GetExceptionMode)(
        ID3D11Device4 *This);

    /*** ID3D11Device1 methods ***/
    void (STDMETHODCALLTYPE *GetImmediateContext1)(
        ID3D11Device4 *This,
        ID3D11DeviceContext1 **ppImmediateContext);

    HRESULT (STDMETHODCALLTYPE *CreateDeferredContext1)(
        ID3D11Device4 *This,
        UINT ContextFlags,
        ID3D11DeviceContext1 **ppDeferredContext);

    HRESULT (STDMETHODCALLTYPE *CreateBlendState1)(
        ID3D11Device4 *This,
        const D3D11_BLEND_DESC1 *pBlendStateDesc,
        ID3D11BlendState1 **ppBlendState);

    HRESULT (STDMETHODCALLTYPE *CreateRasterizerState1)(
        ID3D11Device4 *This,
        const D3D11_RASTERIZER_DESC1 *pRasterizerDesc,
        ID3D11RasterizerState1 **ppRasterizerState);

    HRESULT (STDMETHODCALLTYPE *CreateDeviceContextState)(
        ID3D11Device4 *This,
        UINT Flags,
        const D3D_FEATURE_LEVEL *pFeatureLevels,
        UINT FeatureLevels,
        UINT SDKVersion,
        REFIID EmulatedInterface,
        D3D_FEATURE_LEVEL *pChosenFeatureLevel,
        ID3DDeviceContextState **ppContextState);

    HRESULT (STDMETHODCALLTYPE *OpenSharedResource1)(
        ID3D11Device4 *This,
        HANDLE hResource,
        REFIID returnedInterface,
        void **ppResource);

    HRESULT (STDMETHODCALLTYPE *OpenSharedResourceByName)(
        ID3D11Device4 *This,
        LPCWSTR lpName,
        DWORD dwDesiredAccess,
        REFIID returnedInterface,
        void **ppResource);

    /*** ID3D11Device2 methods ***/
    void (STDMETHODCALLTYPE *GetImmediateContext2)(
        ID3D11Device4 *This,
        ID3D11DeviceContext2 **ppImmediateContext);

    HRESULT (STDMETHODCALLTYPE *CreateDeferredContext2)(
        ID3D11Device4 *This,
        UINT ContextFlags,
        ID3D11DeviceContext2 **ppDeferredContext);

    void (STDMETHODCALLTYPE *GetResourceTiling)(
        ID3D11Device4 *This,
        ID3D11Resource *pTiledResource,
        UINT *pNumTilesForEntireResource,
        D3D11_PACKED_MIP_DESC *pPackedMipDesc,
        D3D11_TILE_SHAPE *pStandardTileShapeForNonPackedMips,
        UINT *pNumSubresourceTilings,
        UINT FirstSubresourceTilingToGet,
        D3D11_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);

    HRESULT (STDMETHODCALLTYPE *CheckMultisampleQualityLevels1)(
        ID3D11Device4 *This,
        DXGI_FORMAT Format,
        UINT SampleCount,
        UINT Flags,
        UINT *pNumQualityLevels);

    /*** ID3D11Device3 methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateTexture2D1)(
        ID3D11Device4 *This,
        const D3D11_TEXTURE2D_DESC1 *pDesc1,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture2D1 **ppTexture2D);

    HRESULT (STDMETHODCALLTYPE *CreateTexture3D1)(
        ID3D11Device4 *This,
        const D3D11_TEXTURE3D_DESC1 *pDesc1,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture3D1 **ppTexture3D);

    HRESULT (STDMETHODCALLTYPE *CreateRasterizerState2)(
        ID3D11Device4 *This,
        const D3D11_RASTERIZER_DESC2 *pRasterizerDesc,
        ID3D11RasterizerState2 **ppRasterizerState);

    HRESULT (STDMETHODCALLTYPE *CreateShaderResourceView1)(
        ID3D11Device4 *This,
        ID3D11Resource *pResource,
        const D3D11_SHADER_RESOURCE_VIEW_DESC1 *pDesc1,
        ID3D11ShaderResourceView1 **ppSRView1);

    HRESULT (STDMETHODCALLTYPE *CreateUnorderedAccessView1)(
        ID3D11Device4 *This,
        ID3D11Resource *pResource,
        const D3D11_UNORDERED_ACCESS_VIEW_DESC1 *pDesc1,
        ID3D11UnorderedAccessView1 **ppUAView1);

    HRESULT (STDMETHODCALLTYPE *CreateRenderTargetView1)(
        ID3D11Device4 *This,
        ID3D11Resource *pResource,
        const D3D11_RENDER_TARGET_VIEW_DESC1 *pDesc1,
        ID3D11RenderTargetView1 **ppRTView1);

    HRESULT (STDMETHODCALLTYPE *CreateQuery1)(
        ID3D11Device4 *This,
        const D3D11_QUERY_DESC1 *pQueryDesc1,
        ID3D11Query1 **ppQuery1);

    void (STDMETHODCALLTYPE *GetImmediateContext3)(
        ID3D11Device4 *This,
        ID3D11DeviceContext3 **ppImmediateContext);

    HRESULT (STDMETHODCALLTYPE *CreateDeferredContext3)(
        ID3D11Device4 *This,
        UINT ContextFlags,
        ID3D11DeviceContext3 **ppDeferredContext);

    void (STDMETHODCALLTYPE *WriteToSubresource)(
        ID3D11Device4 *This,
        ID3D11Resource *pDstResource,
        UINT DstSubresource,
        const D3D11_BOX *pDstBox,
        const void *pSrcData,
        UINT SrcRowPitch,
        UINT SrcDepthPitch);

    void (STDMETHODCALLTYPE *ReadFromSubresource)(
        ID3D11Device4 *This,
        void *pDstData,
        UINT DstRowPitch,
        UINT DstDepthPitch,
        ID3D11Resource *pSrcResource,
        UINT SrcSubresource,
        const D3D11_BOX *pSrcBox);

    /*** ID3D11Device4 methods ***/
    HRESULT (STDMETHODCALLTYPE *RegisterDeviceRemovedEvent)(
        ID3D11Device4 *This,
        HANDLE hEvent,
        DWORD *pdwCookie);

    void (STDMETHODCALLTYPE *UnregisterDeviceRemoved)(
        ID3D11Device4 *This,
        DWORD dwCookie);

    END_INTERFACE
} ID3D11Device4Vtbl;

interface ID3D11Device4 {
    CONST_VTBL ID3D11Device4Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ID3D11Device4_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ID3D11Device4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ID3D11Device4_Release(This) (This)->lpVtbl->Release(This)
/*** ID3D11Device methods ***/
#define ID3D11Device4_CreateBuffer(This,pDesc,pInitialData,ppBuffer) (This)->lpVtbl->CreateBuffer(This,pDesc,pInitialData,ppBuffer)
#define ID3D11Device4_CreateTexture1D(This,pDesc,pInitialData,ppTexture1D) (This)->lpVtbl->CreateTexture1D(This,pDesc,pInitialData,ppTexture1D)
#define ID3D11Device4_CreateTexture2D(This,pDesc,pInitialData,ppTexture2D) (This)->lpVtbl->CreateTexture2D(This,pDesc,pInitialData,ppTexture2D)
#define ID3D11Device4_CreateTexture3D(This,pDesc,pInitialData,ppTexture3D) (This)->lpVtbl->CreateTexture3D(This,pDesc,pInitialData,ppTexture3D)
#define ID3D11Device4_CreateShaderResourceView(This,pResource,pDesc,ppSRView) (This)->lpVtbl->CreateShaderResourceView(This,pResource,pDesc,ppSRView)
#define ID3D11Device4_CreateUnorderedAccessView(This,pResource,pDesc,ppUAView) (This)->lpVtbl->CreateUnorderedAccessView(This,pResource,pDesc,ppUAView)
#define ID3D11Device4_CreateRenderTargetView(This,pResource,pDesc,ppRTView) (This)->lpVtbl->CreateRenderTargetView(This,pResource,pDesc,ppRTView)
#define ID3D11Device4_CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView) (This)->lpVtbl->CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView)
#define ID3D11Device4_CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout) (This)->lpVtbl->CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout)
#define ID3D11Device4_CreateVertexShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppVertexShader) (This)->lpVtbl->CreateVertexShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppVertexShader)
#define ID3D11Device4_CreateGeometryShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppGeometryShader) (This)->lpVtbl->CreateGeometryShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppGeometryShader)
#define ID3D11Device4_CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,pBufferStrides,NumStrides,RasterizedStream,pClassLinkage,ppGeometryShader) (This)->lpVtbl->CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,pBufferStrides,NumStrides,RasterizedStream,pClassLinkage,ppGeometryShader)
#define ID3D11Device4_CreatePixelShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppPixelShader) (This)->lpVtbl->CreatePixelShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppPixelShader)
#define ID3D11Device4_CreateHullShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppHullShader) (This)->lpVtbl->CreateHullShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppHullShader)
#define ID3D11Device4_CreateDomainShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppDomainShader) (This)->lpVtbl->CreateDomainShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppDomainShader)
#define ID3D11Device4_CreateComputeShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppComputeShader) (This)->lpVtbl->CreateComputeShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppComputeShader)
#define ID3D11Device4_CreateClassLinkage(This,ppLinkage) (This)->lpVtbl->CreateClassLinkage(This,ppLinkage)
#define ID3D11Device4_CreateBlendState(This,pBlendStateDesc,ppBlendState) (This)->lpVtbl->CreateBlendState(This,pBlendStateDesc,ppBlendState)
#define ID3D11Device4_CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState) (This)->lpVtbl->CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState)
#define ID3D11Device4_CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState) (This)->lpVtbl->CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState)
#define ID3D11Device4_CreateSamplerState(This,pSamplerDesc,ppSamplerState) (This)->lpVtbl->CreateSamplerState(This,pSamplerDesc,ppSamplerState)
#define ID3D11Device4_CreateQuery(This,pQueryDesc,ppQuery) (This)->lpVtbl->CreateQuery(This,pQueryDesc,ppQuery)
#define ID3D11Device4_CreatePredicate(This,pPredicateDesc,ppPredicate) (This)->lpVtbl->CreatePredicate(This,pPredicateDesc,ppPredicate)
#define ID3D11Device4_CreateCounter(This,pCounterDesc,ppCounter) (This)->lpVtbl->CreateCounter(This,pCounterDesc,ppCounter)
#define ID3D11Device4_CreateDeferredContext(This,ContextFlags,ppDeferredContext) (This)->lpVtbl->CreateDeferredContext(This,ContextFlags,ppDeferredContext)
#define ID3D11Device4_OpenSharedResource(This,hResource,ReturnedInterface,ppResource) (This)->lpVtbl->OpenSharedResource(This,hResource,ReturnedInterface,ppResource)
#define ID3D11Device4_CheckFormatSupport(This,Format,pFormatSupport) (This)->lpVtbl->CheckFormatSupport(This,Format,pFormatSupport)
#define ID3D11Device4_CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels) (This)->lpVtbl->CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels)
#define ID3D11Device4_CheckCounterInfo(This,pCounterInfo) (This)->lpVtbl->CheckCounterInfo(This,pCounterInfo)
#define ID3D11Device4_CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength) (This)->lpVtbl->CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength)
#define ID3D11Device4_CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize) (This)->lpVtbl->CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize)
#define ID3D11Device4_GetPrivateData(This,guid,pDataSize,pData) (This)->lpVtbl->GetPrivateData(This,guid,pDataSize,pData)
#define ID3D11Device4_SetPrivateData(This,guid,DataSize,pData) (This)->lpVtbl->SetPrivateData(This,guid,DataSize,pData)
#define ID3D11Device4_SetPrivateDataInterface(This,guid,pData) (This)->lpVtbl->SetPrivateDataInterface(This,guid,pData)
#define ID3D11Device4_GetFeatureLevel(This) (This)->lpVtbl->GetFeatureLevel(This)
#define ID3D11Device4_GetCreationFlags(This) (This)->lpVtbl->GetCreationFlags(This)
#define ID3D11Device4_GetDeviceRemovedReason(This) (This)->lpVtbl->GetDeviceRemovedReason(This)
#define ID3D11Device4_GetImmediateContext(This,ppImmediateContext) (This)->lpVtbl->GetImmediateContext(This,ppImmediateContext)
#define ID3D11Device4_SetExceptionMode(This,RaiseFlags) (This)->lpVtbl->SetExceptionMode(This,RaiseFlags)
#define ID3D11Device4_GetExceptionMode(This) (This)->lpVtbl->GetExceptionMode(This)
/*** ID3D11Device1 methods ***/
#define ID3D11Device4_GetImmediateContext1(This,ppImmediateContext) (This)->lpVtbl->GetImmediateContext1(This,ppImmediateContext)
#define ID3D11Device4_CreateDeferredContext1(This,ContextFlags,ppDeferredContext) (This)->lpVtbl->CreateDeferredContext1(This,ContextFlags,ppDeferredContext)
#define ID3D11Device4_CreateBlendState1(This,pBlendStateDesc,ppBlendState) (This)->lpVtbl->CreateBlendState1(This,pBlendStateDesc,ppBlendState)
#define ID3D11Device4_CreateRasterizerState1(This,pRasterizerDesc,ppRasterizerState) (This)->lpVtbl->CreateRasterizerState1(This,pRasterizerDesc,ppRasterizerState)
#define ID3D11Device4_CreateDeviceContextState(This,Flags,pFeatureLevels,FeatureLevels,SDKVersion,EmulatedInterface,pChosenFeatureLevel,ppContextState) (This)->lpVtbl->CreateDeviceContextState(This,Flags,pFeatureLevels,FeatureLevels,SDKVersion,EmulatedInterface,pChosenFeatureLevel,ppContextState)
#define ID3D11Device4_OpenSharedResource1(This,hResource,returnedInterface,ppResource) (This)->lpVtbl->OpenSharedResource1(This,hResource,returnedInterface,ppResource)
#define ID3D11Device4_OpenSharedResourceByName(This,lpName,dwDesiredAccess,returnedInterface,ppResource) (This)->lpVtbl->OpenSharedResourceByName(This,lpName,dwDesiredAccess,returnedInterface,ppResource)
/*** ID3D11Device2 methods ***/
#define ID3D11Device4_GetImmediateContext2(This,ppImmediateContext) (This)->lpVtbl->GetImmediateContext2(This,ppImmediateContext)
#define ID3D11Device4_CreateDeferredContext2(This,ContextFlags,ppDeferredContext) (This)->lpVtbl->CreateDeferredContext2(This,ContextFlags,ppDeferredContext)
#define ID3D11Device4_GetResourceTiling(This,pTiledResource,pNumTilesForEntireResource,pPackedMipDesc,pStandardTileShapeForNonPackedMips,pNumSubresourceTilings,FirstSubresourceTilingToGet,pSubresourceTilingsForNonPackedMips) (This)->lpVtbl->GetResourceTiling(This,pTiledResource,pNumTilesForEntireResource,pPackedMipDesc,pStandardTileShapeForNonPackedMips,pNumSubresourceTilings,FirstSubresourceTilingToGet,pSubresourceTilingsForNonPackedMips)
#define ID3D11Device4_CheckMultisampleQualityLevels1(This,Format,SampleCount,Flags,pNumQualityLevels) (This)->lpVtbl->CheckMultisampleQualityLevels1(This,Format,SampleCount,Flags,pNumQualityLevels)
/*** ID3D11Device3 methods ***/
#define ID3D11Device4_CreateTexture2D1(This,pDesc1,pInitialData,ppTexture2D) (This)->lpVtbl->CreateTexture2D1(This,pDesc1,pInitialData,ppTexture2D)
#define ID3D11Device4_CreateTexture3D1(This,pDesc1,pInitialData,ppTexture3D) (This)->lpVtbl->CreateTexture3D1(This,pDesc1,pInitialData,ppTexture3D)
#define ID3D11Device4_CreateRasterizerState2(This,pRasterizerDesc,ppRasterizerState) (This)->lpVtbl->CreateRasterizerState2(This,pRasterizerDesc,ppRasterizerState)
#define ID3D11Device4_CreateShaderResourceView1(This,pResource,pDesc1,ppSRView1) (This)->lpVtbl->CreateShaderResourceView1(This,pResource,pDesc1,ppSRView1)
#define ID3D11Device4_CreateUnorderedAccessView1(This,pResource,pDesc1,ppUAView1) (This)->lpVtbl->CreateUnorderedAccessView1(This,pResource,pDesc1,ppUAView1)
#define ID3D11Device4_CreateRenderTargetView1(This,pResource,pDesc1,ppRTView1) (This)->lpVtbl->CreateRenderTargetView1(This,pResource,pDesc1,ppRTView1)
#define ID3D11Device4_CreateQuery1(This,pQueryDesc1,ppQuery1) (This)->lpVtbl->CreateQuery1(This,pQueryDesc1,ppQuery1)
#define ID3D11Device4_GetImmediateContext3(This,ppImmediateContext) (This)->lpVtbl->GetImmediateContext3(This,ppImmediateContext)
#define ID3D11Device4_CreateDeferredContext3(This,ContextFlags,ppDeferredContext) (This)->lpVtbl->CreateDeferredContext3(This,ContextFlags,ppDeferredContext)
#define ID3D11Device4_WriteToSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch) (This)->lpVtbl->WriteToSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch)
#define ID3D11Device4_ReadFromSubresource(This,pDstData,DstRowPitch,DstDepthPitch,pSrcResource,SrcSubresource,pSrcBox) (This)->lpVtbl->ReadFromSubresource(This,pDstData,DstRowPitch,DstDepthPitch,pSrcResource,SrcSubresource,pSrcBox)
/*** ID3D11Device4 methods ***/
#define ID3D11Device4_RegisterDeviceRemovedEvent(This,hEvent,pdwCookie) (This)->lpVtbl->RegisterDeviceRemovedEvent(This,hEvent,pdwCookie)
#define ID3D11Device4_UnregisterDeviceRemoved(This,dwCookie) (This)->lpVtbl->UnregisterDeviceRemoved(This,dwCookie)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ID3D11Device4_QueryInterface(ID3D11Device4* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ID3D11Device4_AddRef(ID3D11Device4* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ID3D11Device4_Release(ID3D11Device4* This) {
    return This->lpVtbl->Release(This);
}
/*** ID3D11Device methods ***/
static FORCEINLINE HRESULT ID3D11Device4_CreateBuffer(ID3D11Device4* This,const D3D11_BUFFER_DESC *pDesc,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Buffer **ppBuffer) {
    return This->lpVtbl->CreateBuffer(This,pDesc,pInitialData,ppBuffer);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateTexture1D(ID3D11Device4* This,const D3D11_TEXTURE1D_DESC *pDesc,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture1D **ppTexture1D) {
    return This->lpVtbl->CreateTexture1D(This,pDesc,pInitialData,ppTexture1D);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateTexture2D(ID3D11Device4* This,const D3D11_TEXTURE2D_DESC *pDesc,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture2D **ppTexture2D) {
    return This->lpVtbl->CreateTexture2D(This,pDesc,pInitialData,ppTexture2D);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateTexture3D(ID3D11Device4* This,const D3D11_TEXTURE3D_DESC *pDesc,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture3D **ppTexture3D) {
    return This->lpVtbl->CreateTexture3D(This,pDesc,pInitialData,ppTexture3D);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateShaderResourceView(ID3D11Device4* This,ID3D11Resource *pResource,const D3D11_SHADER_RESOURCE_VIEW_DESC *pDesc,ID3D11ShaderResourceView **ppSRView) {
    return This->lpVtbl->CreateShaderResourceView(This,pResource,pDesc,ppSRView);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateUnorderedAccessView(ID3D11Device4* This,ID3D11Resource *pResource,const D3D11_UNORDERED_ACCESS_VIEW_DESC *pDesc,ID3D11UnorderedAccessView **ppUAView) {
    return This->lpVtbl->CreateUnorderedAccessView(This,pResource,pDesc,ppUAView);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateRenderTargetView(ID3D11Device4* This,ID3D11Resource *pResource,const D3D11_RENDER_TARGET_VIEW_DESC *pDesc,ID3D11RenderTargetView **ppRTView) {
    return This->lpVtbl->CreateRenderTargetView(This,pResource,pDesc,ppRTView);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateDepthStencilView(ID3D11Device4* This,ID3D11Resource *pResource,const D3D11_DEPTH_STENCIL_VIEW_DESC *pDesc,ID3D11DepthStencilView **ppDepthStencilView) {
    return This->lpVtbl->CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateInputLayout(ID3D11Device4* This,const D3D11_INPUT_ELEMENT_DESC *pInputElementDescs,UINT NumElements,const void *pShaderBytecodeWithInputSignature,SIZE_T BytecodeLength,ID3D11InputLayout **ppInputLayout) {
    return This->lpVtbl->CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateVertexShader(ID3D11Device4* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11VertexShader **ppVertexShader) {
    return This->lpVtbl->CreateVertexShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppVertexShader);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateGeometryShader(ID3D11Device4* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11GeometryShader **ppGeometryShader) {
    return This->lpVtbl->CreateGeometryShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppGeometryShader);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateGeometryShaderWithStreamOutput(ID3D11Device4* This,const void *pShaderBytecode,SIZE_T BytecodeLength,const D3D11_SO_DECLARATION_ENTRY *pSODeclaration,UINT NumEntries,const UINT *pBufferStrides,UINT NumStrides,UINT RasterizedStream,ID3D11ClassLinkage *pClassLinkage,ID3D11GeometryShader **ppGeometryShader) {
    return This->lpVtbl->CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,pBufferStrides,NumStrides,RasterizedStream,pClassLinkage,ppGeometryShader);
}
static FORCEINLINE HRESULT ID3D11Device4_CreatePixelShader(ID3D11Device4* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11PixelShader **ppPixelShader) {
    return This->lpVtbl->CreatePixelShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppPixelShader);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateHullShader(ID3D11Device4* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11HullShader **ppHullShader) {
    return This->lpVtbl->CreateHullShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppHullShader);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateDomainShader(ID3D11Device4* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11DomainShader **ppDomainShader) {
    return This->lpVtbl->CreateDomainShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppDomainShader);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateComputeShader(ID3D11Device4* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11ComputeShader **ppComputeShader) {
    return This->lpVtbl->CreateComputeShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppComputeShader);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateClassLinkage(ID3D11Device4* This,ID3D11ClassLinkage **ppLinkage) {
    return This->lpVtbl->CreateClassLinkage(This,ppLinkage);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateBlendState(ID3D11Device4* This,const D3D11_BLEND_DESC *pBlendStateDesc,ID3D11BlendState **ppBlendState) {
    return This->lpVtbl->CreateBlendState(This,pBlendStateDesc,ppBlendState);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateDepthStencilState(ID3D11Device4* This,const D3D11_DEPTH_STENCIL_DESC *pDepthStencilDesc,ID3D11DepthStencilState **ppDepthStencilState) {
    return This->lpVtbl->CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateRasterizerState(ID3D11Device4* This,const D3D11_RASTERIZER_DESC *pRasterizerDesc,ID3D11RasterizerState **ppRasterizerState) {
    return This->lpVtbl->CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateSamplerState(ID3D11Device4* This,const D3D11_SAMPLER_DESC *pSamplerDesc,ID3D11SamplerState **ppSamplerState) {
    return This->lpVtbl->CreateSamplerState(This,pSamplerDesc,ppSamplerState);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateQuery(ID3D11Device4* This,const D3D11_QUERY_DESC *pQueryDesc,ID3D11Query **ppQuery) {
    return This->lpVtbl->CreateQuery(This,pQueryDesc,ppQuery);
}
static FORCEINLINE HRESULT ID3D11Device4_CreatePredicate(ID3D11Device4* This,const D3D11_QUERY_DESC *pPredicateDesc,ID3D11Predicate **ppPredicate) {
    return This->lpVtbl->CreatePredicate(This,pPredicateDesc,ppPredicate);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateCounter(ID3D11Device4* This,const D3D11_COUNTER_DESC *pCounterDesc,ID3D11Counter **ppCounter) {
    return This->lpVtbl->CreateCounter(This,pCounterDesc,ppCounter);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateDeferredContext(ID3D11Device4* This,UINT ContextFlags,ID3D11DeviceContext **ppDeferredContext) {
    return This->lpVtbl->CreateDeferredContext(This,ContextFlags,ppDeferredContext);
}
static FORCEINLINE HRESULT ID3D11Device4_OpenSharedResource(ID3D11Device4* This,HANDLE hResource,REFIID ReturnedInterface,void **ppResource) {
    return This->lpVtbl->OpenSharedResource(This,hResource,ReturnedInterface,ppResource);
}
static FORCEINLINE HRESULT ID3D11Device4_CheckFormatSupport(ID3D11Device4* This,DXGI_FORMAT Format,UINT *pFormatSupport) {
    return This->lpVtbl->CheckFormatSupport(This,Format,pFormatSupport);
}
static FORCEINLINE HRESULT ID3D11Device4_CheckMultisampleQualityLevels(ID3D11Device4* This,DXGI_FORMAT Format,UINT SampleCount,UINT *pNumQualityLevels) {
    return This->lpVtbl->CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels);
}
static FORCEINLINE void ID3D11Device4_CheckCounterInfo(ID3D11Device4* This,D3D11_COUNTER_INFO *pCounterInfo) {
    This->lpVtbl->CheckCounterInfo(This,pCounterInfo);
}
static FORCEINLINE HRESULT ID3D11Device4_CheckCounter(ID3D11Device4* This,const D3D11_COUNTER_DESC *pDesc,D3D11_COUNTER_TYPE *pType,UINT *pActiveCounters,LPSTR szName,UINT *pNameLength,LPSTR szUnits,UINT *pUnitsLength,LPSTR szDescription,UINT *pDescriptionLength) {
    return This->lpVtbl->CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength);
}
static FORCEINLINE HRESULT ID3D11Device4_CheckFeatureSupport(ID3D11Device4* This,D3D11_FEATURE Feature,void *pFeatureSupportData,UINT FeatureSupportDataSize) {
    return This->lpVtbl->CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize);
}
static FORCEINLINE HRESULT ID3D11Device4_GetPrivateData(ID3D11Device4* This,REFGUID guid,UINT *pDataSize,void *pData) {
    return This->lpVtbl->GetPrivateData(This,guid,pDataSize,pData);
}
static FORCEINLINE HRESULT ID3D11Device4_SetPrivateData(ID3D11Device4* This,REFGUID guid,UINT DataSize,const void *pData) {
    return This->lpVtbl->SetPrivateData(This,guid,DataSize,pData);
}
static FORCEINLINE HRESULT ID3D11Device4_SetPrivateDataInterface(ID3D11Device4* This,REFGUID guid,const IUnknown *pData) {
    return This->lpVtbl->SetPrivateDataInterface(This,guid,pData);
}
static FORCEINLINE D3D_FEATURE_LEVEL ID3D11Device4_GetFeatureLevel(ID3D11Device4* This) {
    return This->lpVtbl->GetFeatureLevel(This);
}
static FORCEINLINE UINT ID3D11Device4_GetCreationFlags(ID3D11Device4* This) {
    return This->lpVtbl->GetCreationFlags(This);
}
static FORCEINLINE HRESULT ID3D11Device4_GetDeviceRemovedReason(ID3D11Device4* This) {
    return This->lpVtbl->GetDeviceRemovedReason(This);
}
static FORCEINLINE void ID3D11Device4_GetImmediateContext(ID3D11Device4* This,ID3D11DeviceContext **ppImmediateContext) {
    This->lpVtbl->GetImmediateContext(This,ppImmediateContext);
}
static FORCEINLINE HRESULT ID3D11Device4_SetExceptionMode(ID3D11Device4* This,UINT RaiseFlags) {
    return This->lpVtbl->SetExceptionMode(This,RaiseFlags);
}
static FORCEINLINE UINT ID3D11Device4_GetExceptionMode(ID3D11Device4* This) {
    return This->lpVtbl->GetExceptionMode(This);
}
/*** ID3D11Device1 methods ***/
static FORCEINLINE void ID3D11Device4_GetImmediateContext1(ID3D11Device4* This,ID3D11DeviceContext1 **ppImmediateContext) {
    This->lpVtbl->GetImmediateContext1(This,ppImmediateContext);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateDeferredContext1(ID3D11Device4* This,UINT ContextFlags,ID3D11DeviceContext1 **ppDeferredContext) {
    return This->lpVtbl->CreateDeferredContext1(This,ContextFlags,ppDeferredContext);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateBlendState1(ID3D11Device4* This,const D3D11_BLEND_DESC1 *pBlendStateDesc,ID3D11BlendState1 **ppBlendState) {
    return This->lpVtbl->CreateBlendState1(This,pBlendStateDesc,ppBlendState);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateRasterizerState1(ID3D11Device4* This,const D3D11_RASTERIZER_DESC1 *pRasterizerDesc,ID3D11RasterizerState1 **ppRasterizerState) {
    return This->lpVtbl->CreateRasterizerState1(This,pRasterizerDesc,ppRasterizerState);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateDeviceContextState(ID3D11Device4* This,UINT Flags,const D3D_FEATURE_LEVEL *pFeatureLevels,UINT FeatureLevels,UINT SDKVersion,REFIID EmulatedInterface,D3D_FEATURE_LEVEL *pChosenFeatureLevel,ID3DDeviceContextState **ppContextState) {
    return This->lpVtbl->CreateDeviceContextState(This,Flags,pFeatureLevels,FeatureLevels,SDKVersion,EmulatedInterface,pChosenFeatureLevel,ppContextState);
}
static FORCEINLINE HRESULT ID3D11Device4_OpenSharedResource1(ID3D11Device4* This,HANDLE hResource,REFIID returnedInterface,void **ppResource) {
    return This->lpVtbl->OpenSharedResource1(This,hResource,returnedInterface,ppResource);
}
static FORCEINLINE HRESULT ID3D11Device4_OpenSharedResourceByName(ID3D11Device4* This,LPCWSTR lpName,DWORD dwDesiredAccess,REFIID returnedInterface,void **ppResource) {
    return This->lpVtbl->OpenSharedResourceByName(This,lpName,dwDesiredAccess,returnedInterface,ppResource);
}
/*** ID3D11Device2 methods ***/
static FORCEINLINE void ID3D11Device4_GetImmediateContext2(ID3D11Device4* This,ID3D11DeviceContext2 **ppImmediateContext) {
    This->lpVtbl->GetImmediateContext2(This,ppImmediateContext);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateDeferredContext2(ID3D11Device4* This,UINT ContextFlags,ID3D11DeviceContext2 **ppDeferredContext) {
    return This->lpVtbl->CreateDeferredContext2(This,ContextFlags,ppDeferredContext);
}
static FORCEINLINE void ID3D11Device4_GetResourceTiling(ID3D11Device4* This,ID3D11Resource *pTiledResource,UINT *pNumTilesForEntireResource,D3D11_PACKED_MIP_DESC *pPackedMipDesc,D3D11_TILE_SHAPE *pStandardTileShapeForNonPackedMips,UINT *pNumSubresourceTilings,UINT FirstSubresourceTilingToGet,D3D11_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips) {
    This->lpVtbl->GetResourceTiling(This,pTiledResource,pNumTilesForEntireResource,pPackedMipDesc,pStandardTileShapeForNonPackedMips,pNumSubresourceTilings,FirstSubresourceTilingToGet,pSubresourceTilingsForNonPackedMips);
}
static FORCEINLINE HRESULT ID3D11Device4_CheckMultisampleQualityLevels1(ID3D11Device4* This,DXGI_FORMAT Format,UINT SampleCount,UINT Flags,UINT *pNumQualityLevels) {
    return This->lpVtbl->CheckMultisampleQualityLevels1(This,Format,SampleCount,Flags,pNumQualityLevels);
}
/*** ID3D11Device3 methods ***/
static FORCEINLINE HRESULT ID3D11Device4_CreateTexture2D1(ID3D11Device4* This,const D3D11_TEXTURE2D_DESC1 *pDesc1,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture2D1 **ppTexture2D) {
    return This->lpVtbl->CreateTexture2D1(This,pDesc1,pInitialData,ppTexture2D);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateTexture3D1(ID3D11Device4* This,const D3D11_TEXTURE3D_DESC1 *pDesc1,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture3D1 **ppTexture3D) {
    return This->lpVtbl->CreateTexture3D1(This,pDesc1,pInitialData,ppTexture3D);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateRasterizerState2(ID3D11Device4* This,const D3D11_RASTERIZER_DESC2 *pRasterizerDesc,ID3D11RasterizerState2 **ppRasterizerState) {
    return This->lpVtbl->CreateRasterizerState2(This,pRasterizerDesc,ppRasterizerState);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateShaderResourceView1(ID3D11Device4* This,ID3D11Resource *pResource,const D3D11_SHADER_RESOURCE_VIEW_DESC1 *pDesc1,ID3D11ShaderResourceView1 **ppSRView1) {
    return This->lpVtbl->CreateShaderResourceView1(This,pResource,pDesc1,ppSRView1);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateUnorderedAccessView1(ID3D11Device4* This,ID3D11Resource *pResource,const D3D11_UNORDERED_ACCESS_VIEW_DESC1 *pDesc1,ID3D11UnorderedAccessView1 **ppUAView1) {
    return This->lpVtbl->CreateUnorderedAccessView1(This,pResource,pDesc1,ppUAView1);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateRenderTargetView1(ID3D11Device4* This,ID3D11Resource *pResource,const D3D11_RENDER_TARGET_VIEW_DESC1 *pDesc1,ID3D11RenderTargetView1 **ppRTView1) {
    return This->lpVtbl->CreateRenderTargetView1(This,pResource,pDesc1,ppRTView1);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateQuery1(ID3D11Device4* This,const D3D11_QUERY_DESC1 *pQueryDesc1,ID3D11Query1 **ppQuery1) {
    return This->lpVtbl->CreateQuery1(This,pQueryDesc1,ppQuery1);
}
static FORCEINLINE void ID3D11Device4_GetImmediateContext3(ID3D11Device4* This,ID3D11DeviceContext3 **ppImmediateContext) {
    This->lpVtbl->GetImmediateContext3(This,ppImmediateContext);
}
static FORCEINLINE HRESULT ID3D11Device4_CreateDeferredContext3(ID3D11Device4* This,UINT ContextFlags,ID3D11DeviceContext3 **ppDeferredContext) {
    return This->lpVtbl->CreateDeferredContext3(This,ContextFlags,ppDeferredContext);
}
static FORCEINLINE void ID3D11Device4_WriteToSubresource(ID3D11Device4* This,ID3D11Resource *pDstResource,UINT DstSubresource,const D3D11_BOX *pDstBox,const void *pSrcData,UINT SrcRowPitch,UINT SrcDepthPitch) {
    This->lpVtbl->WriteToSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch);
}
static FORCEINLINE void ID3D11Device4_ReadFromSubresource(ID3D11Device4* This,void *pDstData,UINT DstRowPitch,UINT DstDepthPitch,ID3D11Resource *pSrcResource,UINT SrcSubresource,const D3D11_BOX *pSrcBox) {
    This->lpVtbl->ReadFromSubresource(This,pDstData,DstRowPitch,DstDepthPitch,pSrcResource,SrcSubresource,pSrcBox);
}
/*** ID3D11Device4 methods ***/
static FORCEINLINE HRESULT ID3D11Device4_RegisterDeviceRemovedEvent(ID3D11Device4* This,HANDLE hEvent,DWORD *pdwCookie) {
    return This->lpVtbl->RegisterDeviceRemovedEvent(This,hEvent,pdwCookie);
}
static FORCEINLINE void ID3D11Device4_UnregisterDeviceRemoved(ID3D11Device4* This,DWORD dwCookie) {
    This->lpVtbl->UnregisterDeviceRemoved(This,dwCookie);
}
#endif
#endif

#endif


#endif  /* __ID3D11Device4_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ID3D11Device5 interface
 */
#ifndef __ID3D11Device5_INTERFACE_DEFINED__
#define __ID3D11Device5_INTERFACE_DEFINED__

DEFINE_GUID(IID_ID3D11Device5, 0x8ffde202, 0xa0e7, 0x45df, 0x9e,0x01, 0xe8,0x37,0x80,0x1b,0x5e,0xa0);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("8ffde202-a0e7-45df-9e01-e837801b5ea0")
ID3D11Device5 : public ID3D11Device4
{
    virtual HRESULT STDMETHODCALLTYPE OpenSharedFence(
        HANDLE hFence,
        REFIID ReturnedInterface,
        void **ppFence) = 0;

    virtual HRESULT STDMETHODCALLTYPE CreateFence(
        UINT64 InitialValue,
        D3D11_FENCE_FLAG Flags,
        REFIID ReturnedInterface,
        void **ppFence) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ID3D11Device5, 0x8ffde202, 0xa0e7, 0x45df, 0x9e,0x01, 0xe8,0x37,0x80,0x1b,0x5e,0xa0)
#endif
#else
typedef struct ID3D11Device5Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ID3D11Device5 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ID3D11Device5 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ID3D11Device5 *This);

    /*** ID3D11Device methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateBuffer)(
        ID3D11Device5 *This,
        const D3D11_BUFFER_DESC *pDesc,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Buffer **ppBuffer);

    HRESULT (STDMETHODCALLTYPE *CreateTexture1D)(
        ID3D11Device5 *This,
        const D3D11_TEXTURE1D_DESC *pDesc,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture1D **ppTexture1D);

    HRESULT (STDMETHODCALLTYPE *CreateTexture2D)(
        ID3D11Device5 *This,
        const D3D11_TEXTURE2D_DESC *pDesc,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture2D **ppTexture2D);

    HRESULT (STDMETHODCALLTYPE *CreateTexture3D)(
        ID3D11Device5 *This,
        const D3D11_TEXTURE3D_DESC *pDesc,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture3D **ppTexture3D);

    HRESULT (STDMETHODCALLTYPE *CreateShaderResourceView)(
        ID3D11Device5 *This,
        ID3D11Resource *pResource,
        const D3D11_SHADER_RESOURCE_VIEW_DESC *pDesc,
        ID3D11ShaderResourceView **ppSRView);

    HRESULT (STDMETHODCALLTYPE *CreateUnorderedAccessView)(
        ID3D11Device5 *This,
        ID3D11Resource *pResource,
        const D3D11_UNORDERED_ACCESS_VIEW_DESC *pDesc,
        ID3D11UnorderedAccessView **ppUAView);

    HRESULT (STDMETHODCALLTYPE *CreateRenderTargetView)(
        ID3D11Device5 *This,
        ID3D11Resource *pResource,
        const D3D11_RENDER_TARGET_VIEW_DESC *pDesc,
        ID3D11RenderTargetView **ppRTView);

    HRESULT (STDMETHODCALLTYPE *CreateDepthStencilView)(
        ID3D11Device5 *This,
        ID3D11Resource *pResource,
        const D3D11_DEPTH_STENCIL_VIEW_DESC *pDesc,
        ID3D11DepthStencilView **ppDepthStencilView);

    HRESULT (STDMETHODCALLTYPE *CreateInputLayout)(
        ID3D11Device5 *This,
        const D3D11_INPUT_ELEMENT_DESC *pInputElementDescs,
        UINT NumElements,
        const void *pShaderBytecodeWithInputSignature,
        SIZE_T BytecodeLength,
        ID3D11InputLayout **ppInputLayout);

    HRESULT (STDMETHODCALLTYPE *CreateVertexShader)(
        ID3D11Device5 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11VertexShader **ppVertexShader);

    HRESULT (STDMETHODCALLTYPE *CreateGeometryShader)(
        ID3D11Device5 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11GeometryShader **ppGeometryShader);

    HRESULT (STDMETHODCALLTYPE *CreateGeometryShaderWithStreamOutput)(
        ID3D11Device5 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        const D3D11_SO_DECLARATION_ENTRY *pSODeclaration,
        UINT NumEntries,
        const UINT *pBufferStrides,
        UINT NumStrides,
        UINT RasterizedStream,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11GeometryShader **ppGeometryShader);

    HRESULT (STDMETHODCALLTYPE *CreatePixelShader)(
        ID3D11Device5 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11PixelShader **ppPixelShader);

    HRESULT (STDMETHODCALLTYPE *CreateHullShader)(
        ID3D11Device5 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11HullShader **ppHullShader);

    HRESULT (STDMETHODCALLTYPE *CreateDomainShader)(
        ID3D11Device5 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11DomainShader **ppDomainShader);

    HRESULT (STDMETHODCALLTYPE *CreateComputeShader)(
        ID3D11Device5 *This,
        const void *pShaderBytecode,
        SIZE_T BytecodeLength,
        ID3D11ClassLinkage *pClassLinkage,
        ID3D11ComputeShader **ppComputeShader);

    HRESULT (STDMETHODCALLTYPE *CreateClassLinkage)(
        ID3D11Device5 *This,
        ID3D11ClassLinkage **ppLinkage);

    HRESULT (STDMETHODCALLTYPE *CreateBlendState)(
        ID3D11Device5 *This,
        const D3D11_BLEND_DESC *pBlendStateDesc,
        ID3D11BlendState **ppBlendState);

    HRESULT (STDMETHODCALLTYPE *CreateDepthStencilState)(
        ID3D11Device5 *This,
        const D3D11_DEPTH_STENCIL_DESC *pDepthStencilDesc,
        ID3D11DepthStencilState **ppDepthStencilState);

    HRESULT (STDMETHODCALLTYPE *CreateRasterizerState)(
        ID3D11Device5 *This,
        const D3D11_RASTERIZER_DESC *pRasterizerDesc,
        ID3D11RasterizerState **ppRasterizerState);

    HRESULT (STDMETHODCALLTYPE *CreateSamplerState)(
        ID3D11Device5 *This,
        const D3D11_SAMPLER_DESC *pSamplerDesc,
        ID3D11SamplerState **ppSamplerState);

    HRESULT (STDMETHODCALLTYPE *CreateQuery)(
        ID3D11Device5 *This,
        const D3D11_QUERY_DESC *pQueryDesc,
        ID3D11Query **ppQuery);

    HRESULT (STDMETHODCALLTYPE *CreatePredicate)(
        ID3D11Device5 *This,
        const D3D11_QUERY_DESC *pPredicateDesc,
        ID3D11Predicate **ppPredicate);

    HRESULT (STDMETHODCALLTYPE *CreateCounter)(
        ID3D11Device5 *This,
        const D3D11_COUNTER_DESC *pCounterDesc,
        ID3D11Counter **ppCounter);

    HRESULT (STDMETHODCALLTYPE *CreateDeferredContext)(
        ID3D11Device5 *This,
        UINT ContextFlags,
        ID3D11DeviceContext **ppDeferredContext);

    HRESULT (STDMETHODCALLTYPE *OpenSharedResource)(
        ID3D11Device5 *This,
        HANDLE hResource,
        REFIID ReturnedInterface,
        void **ppResource);

    HRESULT (STDMETHODCALLTYPE *CheckFormatSupport)(
        ID3D11Device5 *This,
        DXGI_FORMAT Format,
        UINT *pFormatSupport);

    HRESULT (STDMETHODCALLTYPE *CheckMultisampleQualityLevels)(
        ID3D11Device5 *This,
        DXGI_FORMAT Format,
        UINT SampleCount,
        UINT *pNumQualityLevels);

    void (STDMETHODCALLTYPE *CheckCounterInfo)(
        ID3D11Device5 *This,
        D3D11_COUNTER_INFO *pCounterInfo);

    HRESULT (STDMETHODCALLTYPE *CheckCounter)(
        ID3D11Device5 *This,
        const D3D11_COUNTER_DESC *pDesc,
        D3D11_COUNTER_TYPE *pType,
        UINT *pActiveCounters,
        LPSTR szName,
        UINT *pNameLength,
        LPSTR szUnits,
        UINT *pUnitsLength,
        LPSTR szDescription,
        UINT *pDescriptionLength);

    HRESULT (STDMETHODCALLTYPE *CheckFeatureSupport)(
        ID3D11Device5 *This,
        D3D11_FEATURE Feature,
        void *pFeatureSupportData,
        UINT FeatureSupportDataSize);

    HRESULT (STDMETHODCALLTYPE *GetPrivateData)(
        ID3D11Device5 *This,
        REFGUID guid,
        UINT *pDataSize,
        void *pData);

    HRESULT (STDMETHODCALLTYPE *SetPrivateData)(
        ID3D11Device5 *This,
        REFGUID guid,
        UINT DataSize,
        const void *pData);

    HRESULT (STDMETHODCALLTYPE *SetPrivateDataInterface)(
        ID3D11Device5 *This,
        REFGUID guid,
        const IUnknown *pData);

    D3D_FEATURE_LEVEL (STDMETHODCALLTYPE *GetFeatureLevel)(
        ID3D11Device5 *This);

    UINT (STDMETHODCALLTYPE *GetCreationFlags)(
        ID3D11Device5 *This);

    HRESULT (STDMETHODCALLTYPE *GetDeviceRemovedReason)(
        ID3D11Device5 *This);

    void (STDMETHODCALLTYPE *GetImmediateContext)(
        ID3D11Device5 *This,
        ID3D11DeviceContext **ppImmediateContext);

    HRESULT (STDMETHODCALLTYPE *SetExceptionMode)(
        ID3D11Device5 *This,
        UINT RaiseFlags);

    UINT (STDMETHODCALLTYPE *GetExceptionMode)(
        ID3D11Device5 *This);

    /*** ID3D11Device1 methods ***/
    void (STDMETHODCALLTYPE *GetImmediateContext1)(
        ID3D11Device5 *This,
        ID3D11DeviceContext1 **ppImmediateContext);

    HRESULT (STDMETHODCALLTYPE *CreateDeferredContext1)(
        ID3D11Device5 *This,
        UINT ContextFlags,
        ID3D11DeviceContext1 **ppDeferredContext);

    HRESULT (STDMETHODCALLTYPE *CreateBlendState1)(
        ID3D11Device5 *This,
        const D3D11_BLEND_DESC1 *pBlendStateDesc,
        ID3D11BlendState1 **ppBlendState);

    HRESULT (STDMETHODCALLTYPE *CreateRasterizerState1)(
        ID3D11Device5 *This,
        const D3D11_RASTERIZER_DESC1 *pRasterizerDesc,
        ID3D11RasterizerState1 **ppRasterizerState);

    HRESULT (STDMETHODCALLTYPE *CreateDeviceContextState)(
        ID3D11Device5 *This,
        UINT Flags,
        const D3D_FEATURE_LEVEL *pFeatureLevels,
        UINT FeatureLevels,
        UINT SDKVersion,
        REFIID EmulatedInterface,
        D3D_FEATURE_LEVEL *pChosenFeatureLevel,
        ID3DDeviceContextState **ppContextState);

    HRESULT (STDMETHODCALLTYPE *OpenSharedResource1)(
        ID3D11Device5 *This,
        HANDLE hResource,
        REFIID returnedInterface,
        void **ppResource);

    HRESULT (STDMETHODCALLTYPE *OpenSharedResourceByName)(
        ID3D11Device5 *This,
        LPCWSTR lpName,
        DWORD dwDesiredAccess,
        REFIID returnedInterface,
        void **ppResource);

    /*** ID3D11Device2 methods ***/
    void (STDMETHODCALLTYPE *GetImmediateContext2)(
        ID3D11Device5 *This,
        ID3D11DeviceContext2 **ppImmediateContext);

    HRESULT (STDMETHODCALLTYPE *CreateDeferredContext2)(
        ID3D11Device5 *This,
        UINT ContextFlags,
        ID3D11DeviceContext2 **ppDeferredContext);

    void (STDMETHODCALLTYPE *GetResourceTiling)(
        ID3D11Device5 *This,
        ID3D11Resource *pTiledResource,
        UINT *pNumTilesForEntireResource,
        D3D11_PACKED_MIP_DESC *pPackedMipDesc,
        D3D11_TILE_SHAPE *pStandardTileShapeForNonPackedMips,
        UINT *pNumSubresourceTilings,
        UINT FirstSubresourceTilingToGet,
        D3D11_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);

    HRESULT (STDMETHODCALLTYPE *CheckMultisampleQualityLevels1)(
        ID3D11Device5 *This,
        DXGI_FORMAT Format,
        UINT SampleCount,
        UINT Flags,
        UINT *pNumQualityLevels);

    /*** ID3D11Device3 methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateTexture2D1)(
        ID3D11Device5 *This,
        const D3D11_TEXTURE2D_DESC1 *pDesc1,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture2D1 **ppTexture2D);

    HRESULT (STDMETHODCALLTYPE *CreateTexture3D1)(
        ID3D11Device5 *This,
        const D3D11_TEXTURE3D_DESC1 *pDesc1,
        const D3D11_SUBRESOURCE_DATA *pInitialData,
        ID3D11Texture3D1 **ppTexture3D);

    HRESULT (STDMETHODCALLTYPE *CreateRasterizerState2)(
        ID3D11Device5 *This,
        const D3D11_RASTERIZER_DESC2 *pRasterizerDesc,
        ID3D11RasterizerState2 **ppRasterizerState);

    HRESULT (STDMETHODCALLTYPE *CreateShaderResourceView1)(
        ID3D11Device5 *This,
        ID3D11Resource *pResource,
        const D3D11_SHADER_RESOURCE_VIEW_DESC1 *pDesc1,
        ID3D11ShaderResourceView1 **ppSRView1);

    HRESULT (STDMETHODCALLTYPE *CreateUnorderedAccessView1)(
        ID3D11Device5 *This,
        ID3D11Resource *pResource,
        const D3D11_UNORDERED_ACCESS_VIEW_DESC1 *pDesc1,
        ID3D11UnorderedAccessView1 **ppUAView1);

    HRESULT (STDMETHODCALLTYPE *CreateRenderTargetView1)(
        ID3D11Device5 *This,
        ID3D11Resource *pResource,
        const D3D11_RENDER_TARGET_VIEW_DESC1 *pDesc1,
        ID3D11RenderTargetView1 **ppRTView1);

    HRESULT (STDMETHODCALLTYPE *CreateQuery1)(
        ID3D11Device5 *This,
        const D3D11_QUERY_DESC1 *pQueryDesc1,
        ID3D11Query1 **ppQuery1);

    void (STDMETHODCALLTYPE *GetImmediateContext3)(
        ID3D11Device5 *This,
        ID3D11DeviceContext3 **ppImmediateContext);

    HRESULT (STDMETHODCALLTYPE *CreateDeferredContext3)(
        ID3D11Device5 *This,
        UINT ContextFlags,
        ID3D11DeviceContext3 **ppDeferredContext);

    void (STDMETHODCALLTYPE *WriteToSubresource)(
        ID3D11Device5 *This,
        ID3D11Resource *pDstResource,
        UINT DstSubresource,
        const D3D11_BOX *pDstBox,
        const void *pSrcData,
        UINT SrcRowPitch,
        UINT SrcDepthPitch);

    void (STDMETHODCALLTYPE *ReadFromSubresource)(
        ID3D11Device5 *This,
        void *pDstData,
        UINT DstRowPitch,
        UINT DstDepthPitch,
        ID3D11Resource *pSrcResource,
        UINT SrcSubresource,
        const D3D11_BOX *pSrcBox);

    /*** ID3D11Device4 methods ***/
    HRESULT (STDMETHODCALLTYPE *RegisterDeviceRemovedEvent)(
        ID3D11Device5 *This,
        HANDLE hEvent,
        DWORD *pdwCookie);

    void (STDMETHODCALLTYPE *UnregisterDeviceRemoved)(
        ID3D11Device5 *This,
        DWORD dwCookie);

    /*** ID3D11Device5 methods ***/
    HRESULT (STDMETHODCALLTYPE *OpenSharedFence)(
        ID3D11Device5 *This,
        HANDLE hFence,
        REFIID ReturnedInterface,
        void **ppFence);

    HRESULT (STDMETHODCALLTYPE *CreateFence)(
        ID3D11Device5 *This,
        UINT64 InitialValue,
        D3D11_FENCE_FLAG Flags,
        REFIID ReturnedInterface,
        void **ppFence);

    END_INTERFACE
} ID3D11Device5Vtbl;

interface ID3D11Device5 {
    CONST_VTBL ID3D11Device5Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ID3D11Device5_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ID3D11Device5_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ID3D11Device5_Release(This) (This)->lpVtbl->Release(This)
/*** ID3D11Device methods ***/
#define ID3D11Device5_CreateBuffer(This,pDesc,pInitialData,ppBuffer) (This)->lpVtbl->CreateBuffer(This,pDesc,pInitialData,ppBuffer)
#define ID3D11Device5_CreateTexture1D(This,pDesc,pInitialData,ppTexture1D) (This)->lpVtbl->CreateTexture1D(This,pDesc,pInitialData,ppTexture1D)
#define ID3D11Device5_CreateTexture2D(This,pDesc,pInitialData,ppTexture2D) (This)->lpVtbl->CreateTexture2D(This,pDesc,pInitialData,ppTexture2D)
#define ID3D11Device5_CreateTexture3D(This,pDesc,pInitialData,ppTexture3D) (This)->lpVtbl->CreateTexture3D(This,pDesc,pInitialData,ppTexture3D)
#define ID3D11Device5_CreateShaderResourceView(This,pResource,pDesc,ppSRView) (This)->lpVtbl->CreateShaderResourceView(This,pResource,pDesc,ppSRView)
#define ID3D11Device5_CreateUnorderedAccessView(This,pResource,pDesc,ppUAView) (This)->lpVtbl->CreateUnorderedAccessView(This,pResource,pDesc,ppUAView)
#define ID3D11Device5_CreateRenderTargetView(This,pResource,pDesc,ppRTView) (This)->lpVtbl->CreateRenderTargetView(This,pResource,pDesc,ppRTView)
#define ID3D11Device5_CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView) (This)->lpVtbl->CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView)
#define ID3D11Device5_CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout) (This)->lpVtbl->CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout)
#define ID3D11Device5_CreateVertexShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppVertexShader) (This)->lpVtbl->CreateVertexShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppVertexShader)
#define ID3D11Device5_CreateGeometryShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppGeometryShader) (This)->lpVtbl->CreateGeometryShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppGeometryShader)
#define ID3D11Device5_CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,pBufferStrides,NumStrides,RasterizedStream,pClassLinkage,ppGeometryShader) (This)->lpVtbl->CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,pBufferStrides,NumStrides,RasterizedStream,pClassLinkage,ppGeometryShader)
#define ID3D11Device5_CreatePixelShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppPixelShader) (This)->lpVtbl->CreatePixelShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppPixelShader)
#define ID3D11Device5_CreateHullShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppHullShader) (This)->lpVtbl->CreateHullShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppHullShader)
#define ID3D11Device5_CreateDomainShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppDomainShader) (This)->lpVtbl->CreateDomainShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppDomainShader)
#define ID3D11Device5_CreateComputeShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppComputeShader) (This)->lpVtbl->CreateComputeShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppComputeShader)
#define ID3D11Device5_CreateClassLinkage(This,ppLinkage) (This)->lpVtbl->CreateClassLinkage(This,ppLinkage)
#define ID3D11Device5_CreateBlendState(This,pBlendStateDesc,ppBlendState) (This)->lpVtbl->CreateBlendState(This,pBlendStateDesc,ppBlendState)
#define ID3D11Device5_CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState) (This)->lpVtbl->CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState)
#define ID3D11Device5_CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState) (This)->lpVtbl->CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState)
#define ID3D11Device5_CreateSamplerState(This,pSamplerDesc,ppSamplerState) (This)->lpVtbl->CreateSamplerState(This,pSamplerDesc,ppSamplerState)
#define ID3D11Device5_CreateQuery(This,pQueryDesc,ppQuery) (This)->lpVtbl->CreateQuery(This,pQueryDesc,ppQuery)
#define ID3D11Device5_CreatePredicate(This,pPredicateDesc,ppPredicate) (This)->lpVtbl->CreatePredicate(This,pPredicateDesc,ppPredicate)
#define ID3D11Device5_CreateCounter(This,pCounterDesc,ppCounter) (This)->lpVtbl->CreateCounter(This,pCounterDesc,ppCounter)
#define ID3D11Device5_CreateDeferredContext(This,ContextFlags,ppDeferredContext) (This)->lpVtbl->CreateDeferredContext(This,ContextFlags,ppDeferredContext)
#define ID3D11Device5_OpenSharedResource(This,hResource,ReturnedInterface,ppResource) (This)->lpVtbl->OpenSharedResource(This,hResource,ReturnedInterface,ppResource)
#define ID3D11Device5_CheckFormatSupport(This,Format,pFormatSupport) (This)->lpVtbl->CheckFormatSupport(This,Format,pFormatSupport)
#define ID3D11Device5_CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels) (This)->lpVtbl->CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels)
#define ID3D11Device5_CheckCounterInfo(This,pCounterInfo) (This)->lpVtbl->CheckCounterInfo(This,pCounterInfo)
#define ID3D11Device5_CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength) (This)->lpVtbl->CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength)
#define ID3D11Device5_CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize) (This)->lpVtbl->CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize)
#define ID3D11Device5_GetPrivateData(This,guid,pDataSize,pData) (This)->lpVtbl->GetPrivateData(This,guid,pDataSize,pData)
#define ID3D11Device5_SetPrivateData(This,guid,DataSize,pData) (This)->lpVtbl->SetPrivateData(This,guid,DataSize,pData)
#define ID3D11Device5_SetPrivateDataInterface(This,guid,pData) (This)->lpVtbl->SetPrivateDataInterface(This,guid,pData)
#define ID3D11Device5_GetFeatureLevel(This) (This)->lpVtbl->GetFeatureLevel(This)
#define ID3D11Device5_GetCreationFlags(This) (This)->lpVtbl->GetCreationFlags(This)
#define ID3D11Device5_GetDeviceRemovedReason(This) (This)->lpVtbl->GetDeviceRemovedReason(This)
#define ID3D11Device5_GetImmediateContext(This,ppImmediateContext) (This)->lpVtbl->GetImmediateContext(This,ppImmediateContext)
#define ID3D11Device5_SetExceptionMode(This,RaiseFlags) (This)->lpVtbl->SetExceptionMode(This,RaiseFlags)
#define ID3D11Device5_GetExceptionMode(This) (This)->lpVtbl->GetExceptionMode(This)
/*** ID3D11Device1 methods ***/
#define ID3D11Device5_GetImmediateContext1(This,ppImmediateContext) (This)->lpVtbl->GetImmediateContext1(This,ppImmediateContext)
#define ID3D11Device5_CreateDeferredContext1(This,ContextFlags,ppDeferredContext) (This)->lpVtbl->CreateDeferredContext1(This,ContextFlags,ppDeferredContext)
#define ID3D11Device5_CreateBlendState1(This,pBlendStateDesc,ppBlendState) (This)->lpVtbl->CreateBlendState1(This,pBlendStateDesc,ppBlendState)
#define ID3D11Device5_CreateRasterizerState1(This,pRasterizerDesc,ppRasterizerState) (This)->lpVtbl->CreateRasterizerState1(This,pRasterizerDesc,ppRasterizerState)
#define ID3D11Device5_CreateDeviceContextState(This,Flags,pFeatureLevels,FeatureLevels,SDKVersion,EmulatedInterface,pChosenFeatureLevel,ppContextState) (This)->lpVtbl->CreateDeviceContextState(This,Flags,pFeatureLevels,FeatureLevels,SDKVersion,EmulatedInterface,pChosenFeatureLevel,ppContextState)
#define ID3D11Device5_OpenSharedResource1(This,hResource,returnedInterface,ppResource) (This)->lpVtbl->OpenSharedResource1(This,hResource,returnedInterface,ppResource)
#define ID3D11Device5_OpenSharedResourceByName(This,lpName,dwDesiredAccess,returnedInterface,ppResource) (This)->lpVtbl->OpenSharedResourceByName(This,lpName,dwDesiredAccess,returnedInterface,ppResource)
/*** ID3D11Device2 methods ***/
#define ID3D11Device5_GetImmediateContext2(This,ppImmediateContext) (This)->lpVtbl->GetImmediateContext2(This,ppImmediateContext)
#define ID3D11Device5_CreateDeferredContext2(This,ContextFlags,ppDeferredContext) (This)->lpVtbl->CreateDeferredContext2(This,ContextFlags,ppDeferredContext)
#define ID3D11Device5_GetResourceTiling(This,pTiledResource,pNumTilesForEntireResource,pPackedMipDesc,pStandardTileShapeForNonPackedMips,pNumSubresourceTilings,FirstSubresourceTilingToGet,pSubresourceTilingsForNonPackedMips) (This)->lpVtbl->GetResourceTiling(This,pTiledResource,pNumTilesForEntireResource,pPackedMipDesc,pStandardTileShapeForNonPackedMips,pNumSubresourceTilings,FirstSubresourceTilingToGet,pSubresourceTilingsForNonPackedMips)
#define ID3D11Device5_CheckMultisampleQualityLevels1(This,Format,SampleCount,Flags,pNumQualityLevels) (This)->lpVtbl->CheckMultisampleQualityLevels1(This,Format,SampleCount,Flags,pNumQualityLevels)
/*** ID3D11Device3 methods ***/
#define ID3D11Device5_CreateTexture2D1(This,pDesc1,pInitialData,ppTexture2D) (This)->lpVtbl->CreateTexture2D1(This,pDesc1,pInitialData,ppTexture2D)
#define ID3D11Device5_CreateTexture3D1(This,pDesc1,pInitialData,ppTexture3D) (This)->lpVtbl->CreateTexture3D1(This,pDesc1,pInitialData,ppTexture3D)
#define ID3D11Device5_CreateRasterizerState2(This,pRasterizerDesc,ppRasterizerState) (This)->lpVtbl->CreateRasterizerState2(This,pRasterizerDesc,ppRasterizerState)
#define ID3D11Device5_CreateShaderResourceView1(This,pResource,pDesc1,ppSRView1) (This)->lpVtbl->CreateShaderResourceView1(This,pResource,pDesc1,ppSRView1)
#define ID3D11Device5_CreateUnorderedAccessView1(This,pResource,pDesc1,ppUAView1) (This)->lpVtbl->CreateUnorderedAccessView1(This,pResource,pDesc1,ppUAView1)
#define ID3D11Device5_CreateRenderTargetView1(This,pResource,pDesc1,ppRTView1) (This)->lpVtbl->CreateRenderTargetView1(This,pResource,pDesc1,ppRTView1)
#define ID3D11Device5_CreateQuery1(This,pQueryDesc1,ppQuery1) (This)->lpVtbl->CreateQuery1(This,pQueryDesc1,ppQuery1)
#define ID3D11Device5_GetImmediateContext3(This,ppImmediateContext) (This)->lpVtbl->GetImmediateContext3(This,ppImmediateContext)
#define ID3D11Device5_CreateDeferredContext3(This,ContextFlags,ppDeferredContext) (This)->lpVtbl->CreateDeferredContext3(This,ContextFlags,ppDeferredContext)
#define ID3D11Device5_WriteToSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch) (This)->lpVtbl->WriteToSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch)
#define ID3D11Device5_ReadFromSubresource(This,pDstData,DstRowPitch,DstDepthPitch,pSrcResource,SrcSubresource,pSrcBox) (This)->lpVtbl->ReadFromSubresource(This,pDstData,DstRowPitch,DstDepthPitch,pSrcResource,SrcSubresource,pSrcBox)
/*** ID3D11Device4 methods ***/
#define ID3D11Device5_RegisterDeviceRemovedEvent(This,hEvent,pdwCookie) (This)->lpVtbl->RegisterDeviceRemovedEvent(This,hEvent,pdwCookie)
#define ID3D11Device5_UnregisterDeviceRemoved(This,dwCookie) (This)->lpVtbl->UnregisterDeviceRemoved(This,dwCookie)
/*** ID3D11Device5 methods ***/
#define ID3D11Device5_OpenSharedFence(This,hFence,ReturnedInterface,ppFence) (This)->lpVtbl->OpenSharedFence(This,hFence,ReturnedInterface,ppFence)
#define ID3D11Device5_CreateFence(This,InitialValue,Flags,ReturnedInterface,ppFence) (This)->lpVtbl->CreateFence(This,InitialValue,Flags,ReturnedInterface,ppFence)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ID3D11Device5_QueryInterface(ID3D11Device5* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ID3D11Device5_AddRef(ID3D11Device5* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ID3D11Device5_Release(ID3D11Device5* This) {
    return This->lpVtbl->Release(This);
}
/*** ID3D11Device methods ***/
static FORCEINLINE HRESULT ID3D11Device5_CreateBuffer(ID3D11Device5* This,const D3D11_BUFFER_DESC *pDesc,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Buffer **ppBuffer) {
    return This->lpVtbl->CreateBuffer(This,pDesc,pInitialData,ppBuffer);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateTexture1D(ID3D11Device5* This,const D3D11_TEXTURE1D_DESC *pDesc,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture1D **ppTexture1D) {
    return This->lpVtbl->CreateTexture1D(This,pDesc,pInitialData,ppTexture1D);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateTexture2D(ID3D11Device5* This,const D3D11_TEXTURE2D_DESC *pDesc,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture2D **ppTexture2D) {
    return This->lpVtbl->CreateTexture2D(This,pDesc,pInitialData,ppTexture2D);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateTexture3D(ID3D11Device5* This,const D3D11_TEXTURE3D_DESC *pDesc,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture3D **ppTexture3D) {
    return This->lpVtbl->CreateTexture3D(This,pDesc,pInitialData,ppTexture3D);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateShaderResourceView(ID3D11Device5* This,ID3D11Resource *pResource,const D3D11_SHADER_RESOURCE_VIEW_DESC *pDesc,ID3D11ShaderResourceView **ppSRView) {
    return This->lpVtbl->CreateShaderResourceView(This,pResource,pDesc,ppSRView);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateUnorderedAccessView(ID3D11Device5* This,ID3D11Resource *pResource,const D3D11_UNORDERED_ACCESS_VIEW_DESC *pDesc,ID3D11UnorderedAccessView **ppUAView) {
    return This->lpVtbl->CreateUnorderedAccessView(This,pResource,pDesc,ppUAView);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateRenderTargetView(ID3D11Device5* This,ID3D11Resource *pResource,const D3D11_RENDER_TARGET_VIEW_DESC *pDesc,ID3D11RenderTargetView **ppRTView) {
    return This->lpVtbl->CreateRenderTargetView(This,pResource,pDesc,ppRTView);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateDepthStencilView(ID3D11Device5* This,ID3D11Resource *pResource,const D3D11_DEPTH_STENCIL_VIEW_DESC *pDesc,ID3D11DepthStencilView **ppDepthStencilView) {
    return This->lpVtbl->CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateInputLayout(ID3D11Device5* This,const D3D11_INPUT_ELEMENT_DESC *pInputElementDescs,UINT NumElements,const void *pShaderBytecodeWithInputSignature,SIZE_T BytecodeLength,ID3D11InputLayout **ppInputLayout) {
    return This->lpVtbl->CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateVertexShader(ID3D11Device5* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11VertexShader **ppVertexShader) {
    return This->lpVtbl->CreateVertexShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppVertexShader);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateGeometryShader(ID3D11Device5* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11GeometryShader **ppGeometryShader) {
    return This->lpVtbl->CreateGeometryShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppGeometryShader);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateGeometryShaderWithStreamOutput(ID3D11Device5* This,const void *pShaderBytecode,SIZE_T BytecodeLength,const D3D11_SO_DECLARATION_ENTRY *pSODeclaration,UINT NumEntries,const UINT *pBufferStrides,UINT NumStrides,UINT RasterizedStream,ID3D11ClassLinkage *pClassLinkage,ID3D11GeometryShader **ppGeometryShader) {
    return This->lpVtbl->CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,pBufferStrides,NumStrides,RasterizedStream,pClassLinkage,ppGeometryShader);
}
static FORCEINLINE HRESULT ID3D11Device5_CreatePixelShader(ID3D11Device5* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11PixelShader **ppPixelShader) {
    return This->lpVtbl->CreatePixelShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppPixelShader);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateHullShader(ID3D11Device5* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11HullShader **ppHullShader) {
    return This->lpVtbl->CreateHullShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppHullShader);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateDomainShader(ID3D11Device5* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11DomainShader **ppDomainShader) {
    return This->lpVtbl->CreateDomainShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppDomainShader);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateComputeShader(ID3D11Device5* This,const void *pShaderBytecode,SIZE_T BytecodeLength,ID3D11ClassLinkage *pClassLinkage,ID3D11ComputeShader **ppComputeShader) {
    return This->lpVtbl->CreateComputeShader(This,pShaderBytecode,BytecodeLength,pClassLinkage,ppComputeShader);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateClassLinkage(ID3D11Device5* This,ID3D11ClassLinkage **ppLinkage) {
    return This->lpVtbl->CreateClassLinkage(This,ppLinkage);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateBlendState(ID3D11Device5* This,const D3D11_BLEND_DESC *pBlendStateDesc,ID3D11BlendState **ppBlendState) {
    return This->lpVtbl->CreateBlendState(This,pBlendStateDesc,ppBlendState);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateDepthStencilState(ID3D11Device5* This,const D3D11_DEPTH_STENCIL_DESC *pDepthStencilDesc,ID3D11DepthStencilState **ppDepthStencilState) {
    return This->lpVtbl->CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateRasterizerState(ID3D11Device5* This,const D3D11_RASTERIZER_DESC *pRasterizerDesc,ID3D11RasterizerState **ppRasterizerState) {
    return This->lpVtbl->CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateSamplerState(ID3D11Device5* This,const D3D11_SAMPLER_DESC *pSamplerDesc,ID3D11SamplerState **ppSamplerState) {
    return This->lpVtbl->CreateSamplerState(This,pSamplerDesc,ppSamplerState);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateQuery(ID3D11Device5* This,const D3D11_QUERY_DESC *pQueryDesc,ID3D11Query **ppQuery) {
    return This->lpVtbl->CreateQuery(This,pQueryDesc,ppQuery);
}
static FORCEINLINE HRESULT ID3D11Device5_CreatePredicate(ID3D11Device5* This,const D3D11_QUERY_DESC *pPredicateDesc,ID3D11Predicate **ppPredicate) {
    return This->lpVtbl->CreatePredicate(This,pPredicateDesc,ppPredicate);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateCounter(ID3D11Device5* This,const D3D11_COUNTER_DESC *pCounterDesc,ID3D11Counter **ppCounter) {
    return This->lpVtbl->CreateCounter(This,pCounterDesc,ppCounter);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateDeferredContext(ID3D11Device5* This,UINT ContextFlags,ID3D11DeviceContext **ppDeferredContext) {
    return This->lpVtbl->CreateDeferredContext(This,ContextFlags,ppDeferredContext);
}
static FORCEINLINE HRESULT ID3D11Device5_OpenSharedResource(ID3D11Device5* This,HANDLE hResource,REFIID ReturnedInterface,void **ppResource) {
    return This->lpVtbl->OpenSharedResource(This,hResource,ReturnedInterface,ppResource);
}
static FORCEINLINE HRESULT ID3D11Device5_CheckFormatSupport(ID3D11Device5* This,DXGI_FORMAT Format,UINT *pFormatSupport) {
    return This->lpVtbl->CheckFormatSupport(This,Format,pFormatSupport);
}
static FORCEINLINE HRESULT ID3D11Device5_CheckMultisampleQualityLevels(ID3D11Device5* This,DXGI_FORMAT Format,UINT SampleCount,UINT *pNumQualityLevels) {
    return This->lpVtbl->CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels);
}
static FORCEINLINE void ID3D11Device5_CheckCounterInfo(ID3D11Device5* This,D3D11_COUNTER_INFO *pCounterInfo) {
    This->lpVtbl->CheckCounterInfo(This,pCounterInfo);
}
static FORCEINLINE HRESULT ID3D11Device5_CheckCounter(ID3D11Device5* This,const D3D11_COUNTER_DESC *pDesc,D3D11_COUNTER_TYPE *pType,UINT *pActiveCounters,LPSTR szName,UINT *pNameLength,LPSTR szUnits,UINT *pUnitsLength,LPSTR szDescription,UINT *pDescriptionLength) {
    return This->lpVtbl->CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength);
}
static FORCEINLINE HRESULT ID3D11Device5_CheckFeatureSupport(ID3D11Device5* This,D3D11_FEATURE Feature,void *pFeatureSupportData,UINT FeatureSupportDataSize) {
    return This->lpVtbl->CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize);
}
static FORCEINLINE HRESULT ID3D11Device5_GetPrivateData(ID3D11Device5* This,REFGUID guid,UINT *pDataSize,void *pData) {
    return This->lpVtbl->GetPrivateData(This,guid,pDataSize,pData);
}
static FORCEINLINE HRESULT ID3D11Device5_SetPrivateData(ID3D11Device5* This,REFGUID guid,UINT DataSize,const void *pData) {
    return This->lpVtbl->SetPrivateData(This,guid,DataSize,pData);
}
static FORCEINLINE HRESULT ID3D11Device5_SetPrivateDataInterface(ID3D11Device5* This,REFGUID guid,const IUnknown *pData) {
    return This->lpVtbl->SetPrivateDataInterface(This,guid,pData);
}
static FORCEINLINE D3D_FEATURE_LEVEL ID3D11Device5_GetFeatureLevel(ID3D11Device5* This) {
    return This->lpVtbl->GetFeatureLevel(This);
}
static FORCEINLINE UINT ID3D11Device5_GetCreationFlags(ID3D11Device5* This) {
    return This->lpVtbl->GetCreationFlags(This);
}
static FORCEINLINE HRESULT ID3D11Device5_GetDeviceRemovedReason(ID3D11Device5* This) {
    return This->lpVtbl->GetDeviceRemovedReason(This);
}
static FORCEINLINE void ID3D11Device5_GetImmediateContext(ID3D11Device5* This,ID3D11DeviceContext **ppImmediateContext) {
    This->lpVtbl->GetImmediateContext(This,ppImmediateContext);
}
static FORCEINLINE HRESULT ID3D11Device5_SetExceptionMode(ID3D11Device5* This,UINT RaiseFlags) {
    return This->lpVtbl->SetExceptionMode(This,RaiseFlags);
}
static FORCEINLINE UINT ID3D11Device5_GetExceptionMode(ID3D11Device5* This) {
    return This->lpVtbl->GetExceptionMode(This);
}
/*** ID3D11Device1 methods ***/
static FORCEINLINE void ID3D11Device5_GetImmediateContext1(ID3D11Device5* This,ID3D11DeviceContext1 **ppImmediateContext) {
    This->lpVtbl->GetImmediateContext1(This,ppImmediateContext);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateDeferredContext1(ID3D11Device5* This,UINT ContextFlags,ID3D11DeviceContext1 **ppDeferredContext) {
    return This->lpVtbl->CreateDeferredContext1(This,ContextFlags,ppDeferredContext);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateBlendState1(ID3D11Device5* This,const D3D11_BLEND_DESC1 *pBlendStateDesc,ID3D11BlendState1 **ppBlendState) {
    return This->lpVtbl->CreateBlendState1(This,pBlendStateDesc,ppBlendState);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateRasterizerState1(ID3D11Device5* This,const D3D11_RASTERIZER_DESC1 *pRasterizerDesc,ID3D11RasterizerState1 **ppRasterizerState) {
    return This->lpVtbl->CreateRasterizerState1(This,pRasterizerDesc,ppRasterizerState);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateDeviceContextState(ID3D11Device5* This,UINT Flags,const D3D_FEATURE_LEVEL *pFeatureLevels,UINT FeatureLevels,UINT SDKVersion,REFIID EmulatedInterface,D3D_FEATURE_LEVEL *pChosenFeatureLevel,ID3DDeviceContextState **ppContextState) {
    return This->lpVtbl->CreateDeviceContextState(This,Flags,pFeatureLevels,FeatureLevels,SDKVersion,EmulatedInterface,pChosenFeatureLevel,ppContextState);
}
static FORCEINLINE HRESULT ID3D11Device5_OpenSharedResource1(ID3D11Device5* This,HANDLE hResource,REFIID returnedInterface,void **ppResource) {
    return This->lpVtbl->OpenSharedResource1(This,hResource,returnedInterface,ppResource);
}
static FORCEINLINE HRESULT ID3D11Device5_OpenSharedResourceByName(ID3D11Device5* This,LPCWSTR lpName,DWORD dwDesiredAccess,REFIID returnedInterface,void **ppResource) {
    return This->lpVtbl->OpenSharedResourceByName(This,lpName,dwDesiredAccess,returnedInterface,ppResource);
}
/*** ID3D11Device2 methods ***/
static FORCEINLINE void ID3D11Device5_GetImmediateContext2(ID3D11Device5* This,ID3D11DeviceContext2 **ppImmediateContext) {
    This->lpVtbl->GetImmediateContext2(This,ppImmediateContext);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateDeferredContext2(ID3D11Device5* This,UINT ContextFlags,ID3D11DeviceContext2 **ppDeferredContext) {
    return This->lpVtbl->CreateDeferredContext2(This,ContextFlags,ppDeferredContext);
}
static FORCEINLINE void ID3D11Device5_GetResourceTiling(ID3D11Device5* This,ID3D11Resource *pTiledResource,UINT *pNumTilesForEntireResource,D3D11_PACKED_MIP_DESC *pPackedMipDesc,D3D11_TILE_SHAPE *pStandardTileShapeForNonPackedMips,UINT *pNumSubresourceTilings,UINT FirstSubresourceTilingToGet,D3D11_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips) {
    This->lpVtbl->GetResourceTiling(This,pTiledResource,pNumTilesForEntireResource,pPackedMipDesc,pStandardTileShapeForNonPackedMips,pNumSubresourceTilings,FirstSubresourceTilingToGet,pSubresourceTilingsForNonPackedMips);
}
static FORCEINLINE HRESULT ID3D11Device5_CheckMultisampleQualityLevels1(ID3D11Device5* This,DXGI_FORMAT Format,UINT SampleCount,UINT Flags,UINT *pNumQualityLevels) {
    return This->lpVtbl->CheckMultisampleQualityLevels1(This,Format,SampleCount,Flags,pNumQualityLevels);
}
/*** ID3D11Device3 methods ***/
static FORCEINLINE HRESULT ID3D11Device5_CreateTexture2D1(ID3D11Device5* This,const D3D11_TEXTURE2D_DESC1 *pDesc1,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture2D1 **ppTexture2D) {
    return This->lpVtbl->CreateTexture2D1(This,pDesc1,pInitialData,ppTexture2D);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateTexture3D1(ID3D11Device5* This,const D3D11_TEXTURE3D_DESC1 *pDesc1,const D3D11_SUBRESOURCE_DATA *pInitialData,ID3D11Texture3D1 **ppTexture3D) {
    return This->lpVtbl->CreateTexture3D1(This,pDesc1,pInitialData,ppTexture3D);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateRasterizerState2(ID3D11Device5* This,const D3D11_RASTERIZER_DESC2 *pRasterizerDesc,ID3D11RasterizerState2 **ppRasterizerState) {
    return This->lpVtbl->CreateRasterizerState2(This,pRasterizerDesc,ppRasterizerState);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateShaderResourceView1(ID3D11Device5* This,ID3D11Resource *pResource,const D3D11_SHADER_RESOURCE_VIEW_DESC1 *pDesc1,ID3D11ShaderResourceView1 **ppSRView1) {
    return This->lpVtbl->CreateShaderResourceView1(This,pResource,pDesc1,ppSRView1);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateUnorderedAccessView1(ID3D11Device5* This,ID3D11Resource *pResource,const D3D11_UNORDERED_ACCESS_VIEW_DESC1 *pDesc1,ID3D11UnorderedAccessView1 **ppUAView1) {
    return This->lpVtbl->CreateUnorderedAccessView1(This,pResource,pDesc1,ppUAView1);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateRenderTargetView1(ID3D11Device5* This,ID3D11Resource *pResource,const D3D11_RENDER_TARGET_VIEW_DESC1 *pDesc1,ID3D11RenderTargetView1 **ppRTView1) {
    return This->lpVtbl->CreateRenderTargetView1(This,pResource,pDesc1,ppRTView1);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateQuery1(ID3D11Device5* This,const D3D11_QUERY_DESC1 *pQueryDesc1,ID3D11Query1 **ppQuery1) {
    return This->lpVtbl->CreateQuery1(This,pQueryDesc1,ppQuery1);
}
static FORCEINLINE void ID3D11Device5_GetImmediateContext3(ID3D11Device5* This,ID3D11DeviceContext3 **ppImmediateContext) {
    This->lpVtbl->GetImmediateContext3(This,ppImmediateContext);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateDeferredContext3(ID3D11Device5* This,UINT ContextFlags,ID3D11DeviceContext3 **ppDeferredContext) {
    return This->lpVtbl->CreateDeferredContext3(This,ContextFlags,ppDeferredContext);
}
static FORCEINLINE void ID3D11Device5_WriteToSubresource(ID3D11Device5* This,ID3D11Resource *pDstResource,UINT DstSubresource,const D3D11_BOX *pDstBox,const void *pSrcData,UINT SrcRowPitch,UINT SrcDepthPitch) {
    This->lpVtbl->WriteToSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch);
}
static FORCEINLINE void ID3D11Device5_ReadFromSubresource(ID3D11Device5* This,void *pDstData,UINT DstRowPitch,UINT DstDepthPitch,ID3D11Resource *pSrcResource,UINT SrcSubresource,const D3D11_BOX *pSrcBox) {
    This->lpVtbl->ReadFromSubresource(This,pDstData,DstRowPitch,DstDepthPitch,pSrcResource,SrcSubresource,pSrcBox);
}
/*** ID3D11Device4 methods ***/
static FORCEINLINE HRESULT ID3D11Device5_RegisterDeviceRemovedEvent(ID3D11Device5* This,HANDLE hEvent,DWORD *pdwCookie) {
    return This->lpVtbl->RegisterDeviceRemovedEvent(This,hEvent,pdwCookie);
}
static FORCEINLINE void ID3D11Device5_UnregisterDeviceRemoved(ID3D11Device5* This,DWORD dwCookie) {
    This->lpVtbl->UnregisterDeviceRemoved(This,dwCookie);
}
/*** ID3D11Device5 methods ***/
static FORCEINLINE HRESULT ID3D11Device5_OpenSharedFence(ID3D11Device5* This,HANDLE hFence,REFIID ReturnedInterface,void **ppFence) {
    return This->lpVtbl->OpenSharedFence(This,hFence,ReturnedInterface,ppFence);
}
static FORCEINLINE HRESULT ID3D11Device5_CreateFence(ID3D11Device5* This,UINT64 InitialValue,D3D11_FENCE_FLAG Flags,REFIID ReturnedInterface,void **ppFence) {
    return This->lpVtbl->CreateFence(This,InitialValue,Flags,ReturnedInterface,ppFence);
}
#endif
#endif

#endif


#endif  /* __ID3D11Device5_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ID3D11Multithread interface
 */
#ifndef __ID3D11Multithread_INTERFACE_DEFINED__
#define __ID3D11Multithread_INTERFACE_DEFINED__

DEFINE_GUID(IID_ID3D11Multithread, 0x9b7e4e00, 0x342c, 0x4106, 0xa1,0x9f, 0x4f,0x27,0x04,0xf6,0x89,0xf0);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("9b7e4e00-342c-4106-a19f-4f2704f689f0")
ID3D11Multithread : public IUnknown
{
    virtual void STDMETHODCALLTYPE Enter(
        ) = 0;

    virtual void STDMETHODCALLTYPE Leave(
        ) = 0;

    virtual BOOL STDMETHODCALLTYPE SetMultithreadProtected(
        BOOL bMTProtect) = 0;

    virtual BOOL STDMETHODCALLTYPE GetMultithreadProtected(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ID3D11Multithread, 0x9b7e4e00, 0x342c, 0x4106, 0xa1,0x9f, 0x4f,0x27,0x04,0xf6,0x89,0xf0)
#endif
#else
typedef struct ID3D11MultithreadVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ID3D11Multithread *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ID3D11Multithread *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ID3D11Multithread *This);

    /*** ID3D11Multithread methods ***/
    void (STDMETHODCALLTYPE *Enter)(
        ID3D11Multithread *This);

    void (STDMETHODCALLTYPE *Leave)(
        ID3D11Multithread *This);

    BOOL (STDMETHODCALLTYPE *SetMultithreadProtected)(
        ID3D11Multithread *This,
        BOOL bMTProtect);

    BOOL (STDMETHODCALLTYPE *GetMultithreadProtected)(
        ID3D11Multithread *This);

    END_INTERFACE
} ID3D11MultithreadVtbl;

interface ID3D11Multithread {
    CONST_VTBL ID3D11MultithreadVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ID3D11Multithread_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ID3D11Multithread_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ID3D11Multithread_Release(This) (This)->lpVtbl->Release(This)
/*** ID3D11Multithread methods ***/
#define ID3D11Multithread_Enter(This) (This)->lpVtbl->Enter(This)
#define ID3D11Multithread_Leave(This) (This)->lpVtbl->Leave(This)
#define ID3D11Multithread_SetMultithreadProtected(This,bMTProtect) (This)->lpVtbl->SetMultithreadProtected(This,bMTProtect)
#define ID3D11Multithread_GetMultithreadProtected(This) (This)->lpVtbl->GetMultithreadProtected(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ID3D11Multithread_QueryInterface(ID3D11Multithread* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ID3D11Multithread_AddRef(ID3D11Multithread* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ID3D11Multithread_Release(ID3D11Multithread* This) {
    return This->lpVtbl->Release(This);
}
/*** ID3D11Multithread methods ***/
static FORCEINLINE void ID3D11Multithread_Enter(ID3D11Multithread* This) {
    This->lpVtbl->Enter(This);
}
static FORCEINLINE void ID3D11Multithread_Leave(ID3D11Multithread* This) {
    This->lpVtbl->Leave(This);
}
static FORCEINLINE BOOL ID3D11Multithread_SetMultithreadProtected(ID3D11Multithread* This,BOOL bMTProtect) {
    return This->lpVtbl->SetMultithreadProtected(This,bMTProtect);
}
static FORCEINLINE BOOL ID3D11Multithread_GetMultithreadProtected(ID3D11Multithread* This) {
    return This->lpVtbl->GetMultithreadProtected(This);
}
#endif
#endif

#endif


#endif  /* __ID3D11Multithread_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ID3D11VideoContext2 interface
 */
#ifndef __ID3D11VideoContext2_INTERFACE_DEFINED__
#define __ID3D11VideoContext2_INTERFACE_DEFINED__

DEFINE_GUID(IID_ID3D11VideoContext2, 0xc4e7374c, 0x6243, 0x4d1b, 0xae,0x87, 0x52,0xb4,0xf7,0x40,0xe2,0x61);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("c4e7374c-6243-4d1b-ae87-52b4f740e261")
ID3D11VideoContext2 : public ID3D11VideoContext1
{
    virtual void STDMETHODCALLTYPE VideoProcessorSetOutputHDRMetaData(
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_HDR_METADATA_TYPE Type,
        UINT Size,
        const void *pHDRMetaData) = 0;

    virtual void STDMETHODCALLTYPE VideoProcessorGetOutputHDRMetaData(
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_HDR_METADATA_TYPE *pType,
        UINT Size,
        void *pMetaData) = 0;

    virtual void STDMETHODCALLTYPE VideoProcessorSetStreamHDRMetaData(
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_HDR_METADATA_TYPE Type,
        UINT Size,
        const void *pHDRMetaData) = 0;

    virtual void STDMETHODCALLTYPE VideoProcessorGetStreamHDRMetaData(
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_HDR_METADATA_TYPE *pType,
        UINT Size,
        void *pMetaData) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ID3D11VideoContext2, 0xc4e7374c, 0x6243, 0x4d1b, 0xae,0x87, 0x52,0xb4,0xf7,0x40,0xe2,0x61)
#endif
#else
typedef struct ID3D11VideoContext2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ID3D11VideoContext2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ID3D11VideoContext2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ID3D11VideoContext2 *This);

    /*** ID3D11DeviceChild methods ***/
    void (STDMETHODCALLTYPE *GetDevice)(
        ID3D11VideoContext2 *This,
        ID3D11Device **ppDevice);

    HRESULT (STDMETHODCALLTYPE *GetPrivateData)(
        ID3D11VideoContext2 *This,
        REFGUID guid,
        UINT *pDataSize,
        void *pData);

    HRESULT (STDMETHODCALLTYPE *SetPrivateData)(
        ID3D11VideoContext2 *This,
        REFGUID guid,
        UINT DataSize,
        const void *pData);

    HRESULT (STDMETHODCALLTYPE *SetPrivateDataInterface)(
        ID3D11VideoContext2 *This,
        REFGUID guid,
        const IUnknown *pData);

    /*** ID3D11VideoContext methods ***/
    HRESULT (STDMETHODCALLTYPE *GetDecoderBuffer)(
        ID3D11VideoContext2 *This,
        ID3D11VideoDecoder *pDecoder,
        D3D11_VIDEO_DECODER_BUFFER_TYPE Type,
        UINT *pBufferSize,
        void **ppBuffer);

    HRESULT (STDMETHODCALLTYPE *ReleaseDecoderBuffer)(
        ID3D11VideoContext2 *This,
        ID3D11VideoDecoder *pDecoder,
        D3D11_VIDEO_DECODER_BUFFER_TYPE Type);

    HRESULT (STDMETHODCALLTYPE *DecoderBeginFrame)(
        ID3D11VideoContext2 *This,
        ID3D11VideoDecoder *pDecoder,
        ID3D11VideoDecoderOutputView *pView,
        UINT ContentKeySize,
        const void *pContentKey);

    HRESULT (STDMETHODCALLTYPE *DecoderEndFrame)(
        ID3D11VideoContext2 *This,
        ID3D11VideoDecoder *pDecoder);

    HRESULT (STDMETHODCALLTYPE *SubmitDecoderBuffers)(
        ID3D11VideoContext2 *This,
        ID3D11VideoDecoder *pDecoder,
        UINT NumBuffers,
        const D3D11_VIDEO_DECODER_BUFFER_DESC *pBufferDesc);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *DecoderExtension)(
        ID3D11VideoContext2 *This,
        ID3D11VideoDecoder *pDecoder,
        const D3D11_VIDEO_DECODER_EXTENSION *pExtensionData);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputTargetRect)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL Enable,
        const RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputBackgroundColor)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL YCbCr,
        const D3D11_VIDEO_COLOR *pColor);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputColorSpace)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputAlphaFillMode)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE AlphaFillMode,
        UINT StreamIndex);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputConstriction)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL Enable,
        SIZE Size);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputStereoMode)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL Enable);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *VideoProcessorSetOutputExtension)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        const GUID *pExtensionGuid,
        UINT DataSize,
        void *pData);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputTargetRect)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *Enabled,
        RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputBackgroundColor)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *pYCbCr,
        D3D11_VIDEO_COLOR *pColor);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputColorSpace)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputAlphaFillMode)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE *pAlphaFillMode,
        UINT *pStreamIndex);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputConstriction)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *pEnabled,
        SIZE *pSize);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputStereoMode)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *pEnabled);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *VideoProcessorGetOutputExtension)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        const GUID *pExtensionGuid,
        UINT DataSize,
        void *pData);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamFrameFormat)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_FRAME_FORMAT FrameFormat);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamColorSpace)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamOutputRate)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_OUTPUT_RATE OutputRate,
        BOOL RepeatFrame,
        const DXGI_RATIONAL *pCustomRate);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamSourceRect)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        const RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamDestRect)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        const RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamAlpha)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        FLOAT Alpha);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamPalette)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        UINT Count,
        const UINT *pEntries);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamPixelAspectRatio)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        const DXGI_RATIONAL *pSourceAspectRatio,
        const DXGI_RATIONAL *pDestinationAspectRatio);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamLumaKey)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        FLOAT Lower,
        FLOAT Upper);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamStereoFormat)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT Format,
        BOOL LeftViewFrame0,
        BOOL BaseViewFrame0,
        D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE FlipMode,
        int MonoOffset);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamAutoProcessingMode)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamFilter)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_FILTER Filter,
        BOOL Enable,
        int Level);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *VideoProcessorSetStreamExtension)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        const GUID *pExtensionGuid,
        UINT DataSize,
        void *pData);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamFrameFormat)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_FRAME_FORMAT *pFrameFormat);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamColorSpace)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamOutputRate)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_OUTPUT_RATE *pOutputRate,
        BOOL *pRepeatFrame,
        DXGI_RATIONAL *pCustomRate);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamSourceRect)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamDestRect)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamAlpha)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        FLOAT *pAlpha);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamPalette)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        UINT Count,
        UINT *pEntries);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamPixelAspectRatio)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        DXGI_RATIONAL *pSourceAspectRatio,
        DXGI_RATIONAL *pDestinationAspectRatio);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamLumaKey)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        FLOAT *pLower,
        FLOAT *pUpper);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamStereoFormat)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnable,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT *pFormat,
        BOOL *pLeftViewFrame0,
        BOOL *pBaseViewFrame0,
        D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE *pFlipMode,
        int *MonoOffset);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamAutoProcessingMode)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamFilter)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_FILTER Filter,
        BOOL *pEnabled,
        int *pLevel);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *VideoProcessorGetStreamExtension)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        const GUID *pExtensionGuid,
        UINT DataSize,
        void *pData);

    HRESULT (STDMETHODCALLTYPE *VideoProcessorBlt)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        ID3D11VideoProcessorOutputView *pView,
        UINT OutputFrame,
        UINT StreamCount,
        const D3D11_VIDEO_PROCESSOR_STREAM *pStreams);

    HRESULT (STDMETHODCALLTYPE *NegotiateCryptoSessionKeyExchange)(
        ID3D11VideoContext2 *This,
        ID3D11CryptoSession *pCryptoSession,
        UINT DataSize,
        void *pData);

    void (STDMETHODCALLTYPE *EncryptionBlt)(
        ID3D11VideoContext2 *This,
        ID3D11CryptoSession *pCryptoSession,
        ID3D11Texture2D *pSrcSurface,
        ID3D11Texture2D *pDstSurface,
        UINT IVSize,
        void *pIV);

    void (STDMETHODCALLTYPE *DecryptionBlt)(
        ID3D11VideoContext2 *This,
        ID3D11CryptoSession *pCryptoSession,
        ID3D11Texture2D *pSrcSurface,
        ID3D11Texture2D *pDstSurface,
        D3D11_ENCRYPTED_BLOCK_INFO *pEncryptedBlockInfo,
        UINT ContentKeySize,
        const void *pContentKey,
        UINT IVSize,
        void *pIV);

    void (STDMETHODCALLTYPE *StartSessionKeyRefresh)(
        ID3D11VideoContext2 *This,
        ID3D11CryptoSession *pCryptoSession,
        UINT RandomNumberSize,
        void *pRandomNumber);

    void (STDMETHODCALLTYPE *FinishSessionKeyRefresh)(
        ID3D11VideoContext2 *This,
        ID3D11CryptoSession *pCryptoSession);

    HRESULT (STDMETHODCALLTYPE *GetEncryptionBltKey)(
        ID3D11VideoContext2 *This,
        ID3D11CryptoSession *pCryptoSession,
        UINT KeySize,
        void *pReadbackKey);

    HRESULT (STDMETHODCALLTYPE *NegotiateAuthenticatedChannelKeyExchange)(
        ID3D11VideoContext2 *This,
        ID3D11AuthenticatedChannel *pChannel,
        UINT DataSize,
        void *pData);

    HRESULT (STDMETHODCALLTYPE *QueryAuthenticatedChannel)(
        ID3D11VideoContext2 *This,
        ID3D11AuthenticatedChannel *pChannel,
        UINT InputSize,
        const void *pInput,
        UINT OutputSize,
        void *pOutput);

    HRESULT (STDMETHODCALLTYPE *ConfigureAuthenticatedChannel)(
        ID3D11VideoContext2 *This,
        ID3D11AuthenticatedChannel *pChannel,
        UINT InputSize,
        const void *pInput,
        D3D11_AUTHENTICATED_CONFIGURE_OUTPUT *pOutput);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamRotation)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        D3D11_VIDEO_PROCESSOR_ROTATION Rotation);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamRotation)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnable,
        D3D11_VIDEO_PROCESSOR_ROTATION *pRotation);

    /*** ID3D11VideoContext1 methods ***/
    HRESULT (STDMETHODCALLTYPE *SubmitDecoderBuffers1)(
        ID3D11VideoContext2 *This,
        ID3D11VideoDecoder *pDecoder,
        UINT NumBuffers,
        const D3D11_VIDEO_DECODER_BUFFER_DESC1 *pBufferDesc);

    HRESULT (STDMETHODCALLTYPE *GetDataForNewHardwareKey)(
        ID3D11VideoContext2 *This,
        ID3D11CryptoSession *pCryptoSession,
        UINT PrivateInputSize,
        const void *pPrivatInputData,
        UINT64 *pPrivateOutputData);

    HRESULT (STDMETHODCALLTYPE *CheckCryptoSessionStatus)(
        ID3D11VideoContext2 *This,
        ID3D11CryptoSession *pCryptoSession,
        D3D11_CRYPTO_SESSION_STATUS *pStatus);

    HRESULT (STDMETHODCALLTYPE *DecoderEnableDownsampling)(
        ID3D11VideoContext2 *This,
        ID3D11VideoDecoder *pDecoder,
        DXGI_COLOR_SPACE_TYPE InputColorSpace,
        const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc,
        UINT ReferenceFrameCount);

    HRESULT (STDMETHODCALLTYPE *DecoderUpdateDownsampling)(
        ID3D11VideoContext2 *This,
        ID3D11VideoDecoder *pDecoder,
        const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputColorSpace1)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_COLOR_SPACE_TYPE ColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputShaderUsage)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL ShaderUsage);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputColorSpace1)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_COLOR_SPACE_TYPE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputShaderUsage)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *pShaderUsage);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamColorSpace1)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_COLOR_SPACE_TYPE ColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamMirror)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        BOOL FlipHorizontal,
        BOOL FlipVertical);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamColorSpace1)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_COLOR_SPACE_TYPE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamMirror)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnable,
        BOOL *pFlipHorizontal,
        BOOL *pFlipVertical);

    HRESULT (STDMETHODCALLTYPE *VideoProcessorGetBehaviorHints)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT OutputWidth,
        UINT OutputHeight,
        DXGI_FORMAT OutputFormat,
        UINT StreamCount,
        const D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT *pStreams,
        UINT *pBehaviorHints);

    /*** ID3D11VideoContext2 methods ***/
    void (STDMETHODCALLTYPE *VideoProcessorSetOutputHDRMetaData)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_HDR_METADATA_TYPE Type,
        UINT Size,
        const void *pHDRMetaData);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputHDRMetaData)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_HDR_METADATA_TYPE *pType,
        UINT Size,
        void *pMetaData);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamHDRMetaData)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_HDR_METADATA_TYPE Type,
        UINT Size,
        const void *pHDRMetaData);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamHDRMetaData)(
        ID3D11VideoContext2 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_HDR_METADATA_TYPE *pType,
        UINT Size,
        void *pMetaData);

    END_INTERFACE
} ID3D11VideoContext2Vtbl;

interface ID3D11VideoContext2 {
    CONST_VTBL ID3D11VideoContext2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ID3D11VideoContext2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ID3D11VideoContext2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ID3D11VideoContext2_Release(This) (This)->lpVtbl->Release(This)
/*** ID3D11DeviceChild methods ***/
#define ID3D11VideoContext2_GetDevice(This,ppDevice) (This)->lpVtbl->GetDevice(This,ppDevice)
#define ID3D11VideoContext2_GetPrivateData(This,guid,pDataSize,pData) (This)->lpVtbl->GetPrivateData(This,guid,pDataSize,pData)
#define ID3D11VideoContext2_SetPrivateData(This,guid,DataSize,pData) (This)->lpVtbl->SetPrivateData(This,guid,DataSize,pData)
#define ID3D11VideoContext2_SetPrivateDataInterface(This,guid,pData) (This)->lpVtbl->SetPrivateDataInterface(This,guid,pData)
/*** ID3D11VideoContext methods ***/
#define ID3D11VideoContext2_GetDecoderBuffer(This,pDecoder,Type,pBufferSize,ppBuffer) (This)->lpVtbl->GetDecoderBuffer(This,pDecoder,Type,pBufferSize,ppBuffer)
#define ID3D11VideoContext2_ReleaseDecoderBuffer(This,pDecoder,Type) (This)->lpVtbl->ReleaseDecoderBuffer(This,pDecoder,Type)
#define ID3D11VideoContext2_DecoderBeginFrame(This,pDecoder,pView,ContentKeySize,pContentKey) (This)->lpVtbl->DecoderBeginFrame(This,pDecoder,pView,ContentKeySize,pContentKey)
#define ID3D11VideoContext2_DecoderEndFrame(This,pDecoder) (This)->lpVtbl->DecoderEndFrame(This,pDecoder)
#define ID3D11VideoContext2_SubmitDecoderBuffers(This,pDecoder,NumBuffers,pBufferDesc) (This)->lpVtbl->SubmitDecoderBuffers(This,pDecoder,NumBuffers,pBufferDesc)
#define ID3D11VideoContext2_DecoderExtension(This,pDecoder,pExtensionData) (This)->lpVtbl->DecoderExtension(This,pDecoder,pExtensionData)
#define ID3D11VideoContext2_VideoProcessorSetOutputTargetRect(This,pVideoProcessor,Enable,pRect) (This)->lpVtbl->VideoProcessorSetOutputTargetRect(This,pVideoProcessor,Enable,pRect)
#define ID3D11VideoContext2_VideoProcessorSetOutputBackgroundColor(This,pVideoProcessor,YCbCr,pColor) (This)->lpVtbl->VideoProcessorSetOutputBackgroundColor(This,pVideoProcessor,YCbCr,pColor)
#define ID3D11VideoContext2_VideoProcessorSetOutputColorSpace(This,pVideoProcessor,pColorSpace) (This)->lpVtbl->VideoProcessorSetOutputColorSpace(This,pVideoProcessor,pColorSpace)
#define ID3D11VideoContext2_VideoProcessorSetOutputAlphaFillMode(This,pVideoProcessor,AlphaFillMode,StreamIndex) (This)->lpVtbl->VideoProcessorSetOutputAlphaFillMode(This,pVideoProcessor,AlphaFillMode,StreamIndex)
#define ID3D11VideoContext2_VideoProcessorSetOutputConstriction(This,pVideoProcessor,Enable,Size) (This)->lpVtbl->VideoProcessorSetOutputConstriction(This,pVideoProcessor,Enable,Size)
#define ID3D11VideoContext2_VideoProcessorSetOutputStereoMode(This,pVideoProcessor,Enable) (This)->lpVtbl->VideoProcessorSetOutputStereoMode(This,pVideoProcessor,Enable)
#define ID3D11VideoContext2_VideoProcessorSetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData) (This)->lpVtbl->VideoProcessorSetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData)
#define ID3D11VideoContext2_VideoProcessorGetOutputTargetRect(This,pVideoProcessor,Enabled,pRect) (This)->lpVtbl->VideoProcessorGetOutputTargetRect(This,pVideoProcessor,Enabled,pRect)
#define ID3D11VideoContext2_VideoProcessorGetOutputBackgroundColor(This,pVideoProcessor,pYCbCr,pColor) (This)->lpVtbl->VideoProcessorGetOutputBackgroundColor(This,pVideoProcessor,pYCbCr,pColor)
#define ID3D11VideoContext2_VideoProcessorGetOutputColorSpace(This,pVideoProcessor,pColorSpace) (This)->lpVtbl->VideoProcessorGetOutputColorSpace(This,pVideoProcessor,pColorSpace)
#define ID3D11VideoContext2_VideoProcessorGetOutputAlphaFillMode(This,pVideoProcessor,pAlphaFillMode,pStreamIndex) (This)->lpVtbl->VideoProcessorGetOutputAlphaFillMode(This,pVideoProcessor,pAlphaFillMode,pStreamIndex)
#define ID3D11VideoContext2_VideoProcessorGetOutputConstriction(This,pVideoProcessor,pEnabled,pSize) (This)->lpVtbl->VideoProcessorGetOutputConstriction(This,pVideoProcessor,pEnabled,pSize)
#define ID3D11VideoContext2_VideoProcessorGetOutputStereoMode(This,pVideoProcessor,pEnabled) (This)->lpVtbl->VideoProcessorGetOutputStereoMode(This,pVideoProcessor,pEnabled)
#define ID3D11VideoContext2_VideoProcessorGetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData) (This)->lpVtbl->VideoProcessorGetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData)
#define ID3D11VideoContext2_VideoProcessorSetStreamFrameFormat(This,pVideoProcessor,StreamIndex,FrameFormat) (This)->lpVtbl->VideoProcessorSetStreamFrameFormat(This,pVideoProcessor,StreamIndex,FrameFormat)
#define ID3D11VideoContext2_VideoProcessorSetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace) (This)->lpVtbl->VideoProcessorSetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace)
#define ID3D11VideoContext2_VideoProcessorSetStreamOutputRate(This,pVideoProcessor,StreamIndex,OutputRate,RepeatFrame,pCustomRate) (This)->lpVtbl->VideoProcessorSetStreamOutputRate(This,pVideoProcessor,StreamIndex,OutputRate,RepeatFrame,pCustomRate)
#define ID3D11VideoContext2_VideoProcessorSetStreamSourceRect(This,pVideoProcessor,StreamIndex,Enable,pRect) (This)->lpVtbl->VideoProcessorSetStreamSourceRect(This,pVideoProcessor,StreamIndex,Enable,pRect)
#define ID3D11VideoContext2_VideoProcessorSetStreamDestRect(This,pVideoProcessor,StreamIndex,Enable,pRect) (This)->lpVtbl->VideoProcessorSetStreamDestRect(This,pVideoProcessor,StreamIndex,Enable,pRect)
#define ID3D11VideoContext2_VideoProcessorSetStreamAlpha(This,pVideoProcessor,StreamIndex,Enable,Alpha) (This)->lpVtbl->VideoProcessorSetStreamAlpha(This,pVideoProcessor,StreamIndex,Enable,Alpha)
#define ID3D11VideoContext2_VideoProcessorSetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries) (This)->lpVtbl->VideoProcessorSetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries)
#define ID3D11VideoContext2_VideoProcessorSetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,Enable,pSourceAspectRatio,pDestinationAspectRatio) (This)->lpVtbl->VideoProcessorSetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,Enable,pSourceAspectRatio,pDestinationAspectRatio)
#define ID3D11VideoContext2_VideoProcessorSetStreamLumaKey(This,pVideoProcessor,StreamIndex,Enable,Lower,Upper) (This)->lpVtbl->VideoProcessorSetStreamLumaKey(This,pVideoProcessor,StreamIndex,Enable,Lower,Upper)
#define ID3D11VideoContext2_VideoProcessorSetStreamStereoFormat(This,pVideoProcessor,StreamIndex,Enable,Format,LeftViewFrame0,BaseViewFrame0,FlipMode,MonoOffset) (This)->lpVtbl->VideoProcessorSetStreamStereoFormat(This,pVideoProcessor,StreamIndex,Enable,Format,LeftViewFrame0,BaseViewFrame0,FlipMode,MonoOffset)
#define ID3D11VideoContext2_VideoProcessorSetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,Enable) (This)->lpVtbl->VideoProcessorSetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,Enable)
#define ID3D11VideoContext2_VideoProcessorSetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,Enable,Level) (This)->lpVtbl->VideoProcessorSetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,Enable,Level)
#define ID3D11VideoContext2_VideoProcessorSetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData) (This)->lpVtbl->VideoProcessorSetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData)
#define ID3D11VideoContext2_VideoProcessorGetStreamFrameFormat(This,pVideoProcessor,StreamIndex,pFrameFormat) (This)->lpVtbl->VideoProcessorGetStreamFrameFormat(This,pVideoProcessor,StreamIndex,pFrameFormat)
#define ID3D11VideoContext2_VideoProcessorGetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace) (This)->lpVtbl->VideoProcessorGetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace)
#define ID3D11VideoContext2_VideoProcessorGetStreamOutputRate(This,pVideoProcessor,StreamIndex,pOutputRate,pRepeatFrame,pCustomRate) (This)->lpVtbl->VideoProcessorGetStreamOutputRate(This,pVideoProcessor,StreamIndex,pOutputRate,pRepeatFrame,pCustomRate)
#define ID3D11VideoContext2_VideoProcessorGetStreamSourceRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect) (This)->lpVtbl->VideoProcessorGetStreamSourceRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect)
#define ID3D11VideoContext2_VideoProcessorGetStreamDestRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect) (This)->lpVtbl->VideoProcessorGetStreamDestRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect)
#define ID3D11VideoContext2_VideoProcessorGetStreamAlpha(This,pVideoProcessor,StreamIndex,pEnabled,pAlpha) (This)->lpVtbl->VideoProcessorGetStreamAlpha(This,pVideoProcessor,StreamIndex,pEnabled,pAlpha)
#define ID3D11VideoContext2_VideoProcessorGetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries) (This)->lpVtbl->VideoProcessorGetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries)
#define ID3D11VideoContext2_VideoProcessorGetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,pEnabled,pSourceAspectRatio,pDestinationAspectRatio) (This)->lpVtbl->VideoProcessorGetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,pEnabled,pSourceAspectRatio,pDestinationAspectRatio)
#define ID3D11VideoContext2_VideoProcessorGetStreamLumaKey(This,pVideoProcessor,StreamIndex,pEnabled,pLower,pUpper) (This)->lpVtbl->VideoProcessorGetStreamLumaKey(This,pVideoProcessor,StreamIndex,pEnabled,pLower,pUpper)
#define ID3D11VideoContext2_VideoProcessorGetStreamStereoFormat(This,pVideoProcessor,StreamIndex,pEnable,pFormat,pLeftViewFrame0,pBaseViewFrame0,pFlipMode,MonoOffset) (This)->lpVtbl->VideoProcessorGetStreamStereoFormat(This,pVideoProcessor,StreamIndex,pEnable,pFormat,pLeftViewFrame0,pBaseViewFrame0,pFlipMode,MonoOffset)
#define ID3D11VideoContext2_VideoProcessorGetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,pEnabled) (This)->lpVtbl->VideoProcessorGetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,pEnabled)
#define ID3D11VideoContext2_VideoProcessorGetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,pEnabled,pLevel) (This)->lpVtbl->VideoProcessorGetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,pEnabled,pLevel)
#define ID3D11VideoContext2_VideoProcessorGetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData) (This)->lpVtbl->VideoProcessorGetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData)
#define ID3D11VideoContext2_VideoProcessorBlt(This,pVideoProcessor,pView,OutputFrame,StreamCount,pStreams) (This)->lpVtbl->VideoProcessorBlt(This,pVideoProcessor,pView,OutputFrame,StreamCount,pStreams)
#define ID3D11VideoContext2_NegotiateCryptoSessionKeyExchange(This,pCryptoSession,DataSize,pData) (This)->lpVtbl->NegotiateCryptoSessionKeyExchange(This,pCryptoSession,DataSize,pData)
#define ID3D11VideoContext2_EncryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,IVSize,pIV) (This)->lpVtbl->EncryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,IVSize,pIV)
#define ID3D11VideoContext2_DecryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,pEncryptedBlockInfo,ContentKeySize,pContentKey,IVSize,pIV) (This)->lpVtbl->DecryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,pEncryptedBlockInfo,ContentKeySize,pContentKey,IVSize,pIV)
#define ID3D11VideoContext2_StartSessionKeyRefresh(This,pCryptoSession,RandomNumberSize,pRandomNumber) (This)->lpVtbl->StartSessionKeyRefresh(This,pCryptoSession,RandomNumberSize,pRandomNumber)
#define ID3D11VideoContext2_FinishSessionKeyRefresh(This,pCryptoSession) (This)->lpVtbl->FinishSessionKeyRefresh(This,pCryptoSession)
#define ID3D11VideoContext2_GetEncryptionBltKey(This,pCryptoSession,KeySize,pReadbackKey) (This)->lpVtbl->GetEncryptionBltKey(This,pCryptoSession,KeySize,pReadbackKey)
#define ID3D11VideoContext2_NegotiateAuthenticatedChannelKeyExchange(This,pChannel,DataSize,pData) (This)->lpVtbl->NegotiateAuthenticatedChannelKeyExchange(This,pChannel,DataSize,pData)
#define ID3D11VideoContext2_QueryAuthenticatedChannel(This,pChannel,InputSize,pInput,OutputSize,pOutput) (This)->lpVtbl->QueryAuthenticatedChannel(This,pChannel,InputSize,pInput,OutputSize,pOutput)
#define ID3D11VideoContext2_ConfigureAuthenticatedChannel(This,pChannel,InputSize,pInput,pOutput) (This)->lpVtbl->ConfigureAuthenticatedChannel(This,pChannel,InputSize,pInput,pOutput)
#define ID3D11VideoContext2_VideoProcessorSetStreamRotation(This,pVideoProcessor,StreamIndex,Enable,Rotation) (This)->lpVtbl->VideoProcessorSetStreamRotation(This,pVideoProcessor,StreamIndex,Enable,Rotation)
#define ID3D11VideoContext2_VideoProcessorGetStreamRotation(This,pVideoProcessor,StreamIndex,pEnable,pRotation) (This)->lpVtbl->VideoProcessorGetStreamRotation(This,pVideoProcessor,StreamIndex,pEnable,pRotation)
/*** ID3D11VideoContext1 methods ***/
#define ID3D11VideoContext2_SubmitDecoderBuffers1(This,pDecoder,NumBuffers,pBufferDesc) (This)->lpVtbl->SubmitDecoderBuffers1(This,pDecoder,NumBuffers,pBufferDesc)
#define ID3D11VideoContext2_GetDataForNewHardwareKey(This,pCryptoSession,PrivateInputSize,pPrivatInputData,pPrivateOutputData) (This)->lpVtbl->GetDataForNewHardwareKey(This,pCryptoSession,PrivateInputSize,pPrivatInputData,pPrivateOutputData)
#define ID3D11VideoContext2_CheckCryptoSessionStatus(This,pCryptoSession,pStatus) (This)->lpVtbl->CheckCryptoSessionStatus(This,pCryptoSession,pStatus)
#define ID3D11VideoContext2_DecoderEnableDownsampling(This,pDecoder,InputColorSpace,pOutputDesc,ReferenceFrameCount) (This)->lpVtbl->DecoderEnableDownsampling(This,pDecoder,InputColorSpace,pOutputDesc,ReferenceFrameCount)
#define ID3D11VideoContext2_DecoderUpdateDownsampling(This,pDecoder,pOutputDesc) (This)->lpVtbl->DecoderUpdateDownsampling(This,pDecoder,pOutputDesc)
#define ID3D11VideoContext2_VideoProcessorSetOutputColorSpace1(This,pVideoProcessor,ColorSpace) (This)->lpVtbl->VideoProcessorSetOutputColorSpace1(This,pVideoProcessor,ColorSpace)
#define ID3D11VideoContext2_VideoProcessorSetOutputShaderUsage(This,pVideoProcessor,ShaderUsage) (This)->lpVtbl->VideoProcessorSetOutputShaderUsage(This,pVideoProcessor,ShaderUsage)
#define ID3D11VideoContext2_VideoProcessorGetOutputColorSpace1(This,pVideoProcessor,pColorSpace) (This)->lpVtbl->VideoProcessorGetOutputColorSpace1(This,pVideoProcessor,pColorSpace)
#define ID3D11VideoContext2_VideoProcessorGetOutputShaderUsage(This,pVideoProcessor,pShaderUsage) (This)->lpVtbl->VideoProcessorGetOutputShaderUsage(This,pVideoProcessor,pShaderUsage)
#define ID3D11VideoContext2_VideoProcessorSetStreamColorSpace1(This,pVideoProcessor,StreamIndex,ColorSpace) (This)->lpVtbl->VideoProcessorSetStreamColorSpace1(This,pVideoProcessor,StreamIndex,ColorSpace)
#define ID3D11VideoContext2_VideoProcessorSetStreamMirror(This,pVideoProcessor,StreamIndex,Enable,FlipHorizontal,FlipVertical) (This)->lpVtbl->VideoProcessorSetStreamMirror(This,pVideoProcessor,StreamIndex,Enable,FlipHorizontal,FlipVertical)
#define ID3D11VideoContext2_VideoProcessorGetStreamColorSpace1(This,pVideoProcessor,StreamIndex,pColorSpace) (This)->lpVtbl->VideoProcessorGetStreamColorSpace1(This,pVideoProcessor,StreamIndex,pColorSpace)
#define ID3D11VideoContext2_VideoProcessorGetStreamMirror(This,pVideoProcessor,StreamIndex,pEnable,pFlipHorizontal,pFlipVertical) (This)->lpVtbl->VideoProcessorGetStreamMirror(This,pVideoProcessor,StreamIndex,pEnable,pFlipHorizontal,pFlipVertical)
#define ID3D11VideoContext2_VideoProcessorGetBehaviorHints(This,pVideoProcessor,OutputWidth,OutputHeight,OutputFormat,StreamCount,pStreams,pBehaviorHints) (This)->lpVtbl->VideoProcessorGetBehaviorHints(This,pVideoProcessor,OutputWidth,OutputHeight,OutputFormat,StreamCount,pStreams,pBehaviorHints)
/*** ID3D11VideoContext2 methods ***/
#define ID3D11VideoContext2_VideoProcessorSetOutputHDRMetaData(This,pVideoProcessor,Type,Size,pHDRMetaData) (This)->lpVtbl->VideoProcessorSetOutputHDRMetaData(This,pVideoProcessor,Type,Size,pHDRMetaData)
#define ID3D11VideoContext2_VideoProcessorGetOutputHDRMetaData(This,pVideoProcessor,pType,Size,pMetaData) (This)->lpVtbl->VideoProcessorGetOutputHDRMetaData(This,pVideoProcessor,pType,Size,pMetaData)
#define ID3D11VideoContext2_VideoProcessorSetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,Type,Size,pHDRMetaData) (This)->lpVtbl->VideoProcessorSetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,Type,Size,pHDRMetaData)
#define ID3D11VideoContext2_VideoProcessorGetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,pType,Size,pMetaData) (This)->lpVtbl->VideoProcessorGetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,pType,Size,pMetaData)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ID3D11VideoContext2_QueryInterface(ID3D11VideoContext2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ID3D11VideoContext2_AddRef(ID3D11VideoContext2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ID3D11VideoContext2_Release(ID3D11VideoContext2* This) {
    return This->lpVtbl->Release(This);
}
/*** ID3D11DeviceChild methods ***/
static FORCEINLINE void ID3D11VideoContext2_GetDevice(ID3D11VideoContext2* This,ID3D11Device **ppDevice) {
    This->lpVtbl->GetDevice(This,ppDevice);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_GetPrivateData(ID3D11VideoContext2* This,REFGUID guid,UINT *pDataSize,void *pData) {
    return This->lpVtbl->GetPrivateData(This,guid,pDataSize,pData);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_SetPrivateData(ID3D11VideoContext2* This,REFGUID guid,UINT DataSize,const void *pData) {
    return This->lpVtbl->SetPrivateData(This,guid,DataSize,pData);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_SetPrivateDataInterface(ID3D11VideoContext2* This,REFGUID guid,const IUnknown *pData) {
    return This->lpVtbl->SetPrivateDataInterface(This,guid,pData);
}
/*** ID3D11VideoContext methods ***/
static FORCEINLINE HRESULT ID3D11VideoContext2_GetDecoderBuffer(ID3D11VideoContext2* This,ID3D11VideoDecoder *pDecoder,D3D11_VIDEO_DECODER_BUFFER_TYPE Type,UINT *pBufferSize,void **ppBuffer) {
    return This->lpVtbl->GetDecoderBuffer(This,pDecoder,Type,pBufferSize,ppBuffer);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_ReleaseDecoderBuffer(ID3D11VideoContext2* This,ID3D11VideoDecoder *pDecoder,D3D11_VIDEO_DECODER_BUFFER_TYPE Type) {
    return This->lpVtbl->ReleaseDecoderBuffer(This,pDecoder,Type);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_DecoderBeginFrame(ID3D11VideoContext2* This,ID3D11VideoDecoder *pDecoder,ID3D11VideoDecoderOutputView *pView,UINT ContentKeySize,const void *pContentKey) {
    return This->lpVtbl->DecoderBeginFrame(This,pDecoder,pView,ContentKeySize,pContentKey);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_DecoderEndFrame(ID3D11VideoContext2* This,ID3D11VideoDecoder *pDecoder) {
    return This->lpVtbl->DecoderEndFrame(This,pDecoder);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_SubmitDecoderBuffers(ID3D11VideoContext2* This,ID3D11VideoDecoder *pDecoder,UINT NumBuffers,const D3D11_VIDEO_DECODER_BUFFER_DESC *pBufferDesc) {
    return This->lpVtbl->SubmitDecoderBuffers(This,pDecoder,NumBuffers,pBufferDesc);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext2_DecoderExtension(ID3D11VideoContext2* This,ID3D11VideoDecoder *pDecoder,const D3D11_VIDEO_DECODER_EXTENSION *pExtensionData) {
    return This->lpVtbl->DecoderExtension(This,pDecoder,pExtensionData);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetOutputTargetRect(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL Enable,const RECT *pRect) {
    This->lpVtbl->VideoProcessorSetOutputTargetRect(This,pVideoProcessor,Enable,pRect);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetOutputBackgroundColor(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL YCbCr,const D3D11_VIDEO_COLOR *pColor) {
    This->lpVtbl->VideoProcessorSetOutputBackgroundColor(This,pVideoProcessor,YCbCr,pColor);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetOutputColorSpace(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace) {
    This->lpVtbl->VideoProcessorSetOutputColorSpace(This,pVideoProcessor,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetOutputAlphaFillMode(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE AlphaFillMode,UINT StreamIndex) {
    This->lpVtbl->VideoProcessorSetOutputAlphaFillMode(This,pVideoProcessor,AlphaFillMode,StreamIndex);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetOutputConstriction(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL Enable,SIZE Size) {
    This->lpVtbl->VideoProcessorSetOutputConstriction(This,pVideoProcessor,Enable,Size);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetOutputStereoMode(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL Enable) {
    This->lpVtbl->VideoProcessorSetOutputStereoMode(This,pVideoProcessor,Enable);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext2_VideoProcessorSetOutputExtension(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,const GUID *pExtensionGuid,UINT DataSize,void *pData) {
    return This->lpVtbl->VideoProcessorSetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetOutputTargetRect(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *Enabled,RECT *pRect) {
    This->lpVtbl->VideoProcessorGetOutputTargetRect(This,pVideoProcessor,Enabled,pRect);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetOutputBackgroundColor(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *pYCbCr,D3D11_VIDEO_COLOR *pColor) {
    This->lpVtbl->VideoProcessorGetOutputBackgroundColor(This,pVideoProcessor,pYCbCr,pColor);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetOutputColorSpace(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace) {
    This->lpVtbl->VideoProcessorGetOutputColorSpace(This,pVideoProcessor,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetOutputAlphaFillMode(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE *pAlphaFillMode,UINT *pStreamIndex) {
    This->lpVtbl->VideoProcessorGetOutputAlphaFillMode(This,pVideoProcessor,pAlphaFillMode,pStreamIndex);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetOutputConstriction(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *pEnabled,SIZE *pSize) {
    This->lpVtbl->VideoProcessorGetOutputConstriction(This,pVideoProcessor,pEnabled,pSize);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetOutputStereoMode(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *pEnabled) {
    This->lpVtbl->VideoProcessorGetOutputStereoMode(This,pVideoProcessor,pEnabled);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext2_VideoProcessorGetOutputExtension(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,const GUID *pExtensionGuid,UINT DataSize,void *pData) {
    return This->lpVtbl->VideoProcessorGetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamFrameFormat(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_FRAME_FORMAT FrameFormat) {
    This->lpVtbl->VideoProcessorSetStreamFrameFormat(This,pVideoProcessor,StreamIndex,FrameFormat);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamColorSpace(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace) {
    This->lpVtbl->VideoProcessorSetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamOutputRate(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_OUTPUT_RATE OutputRate,BOOL RepeatFrame,const DXGI_RATIONAL *pCustomRate) {
    This->lpVtbl->VideoProcessorSetStreamOutputRate(This,pVideoProcessor,StreamIndex,OutputRate,RepeatFrame,pCustomRate);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamSourceRect(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,const RECT *pRect) {
    This->lpVtbl->VideoProcessorSetStreamSourceRect(This,pVideoProcessor,StreamIndex,Enable,pRect);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamDestRect(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,const RECT *pRect) {
    This->lpVtbl->VideoProcessorSetStreamDestRect(This,pVideoProcessor,StreamIndex,Enable,pRect);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamAlpha(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,FLOAT Alpha) {
    This->lpVtbl->VideoProcessorSetStreamAlpha(This,pVideoProcessor,StreamIndex,Enable,Alpha);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamPalette(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,UINT Count,const UINT *pEntries) {
    This->lpVtbl->VideoProcessorSetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamPixelAspectRatio(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,const DXGI_RATIONAL *pSourceAspectRatio,const DXGI_RATIONAL *pDestinationAspectRatio) {
    This->lpVtbl->VideoProcessorSetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,Enable,pSourceAspectRatio,pDestinationAspectRatio);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamLumaKey(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,FLOAT Lower,FLOAT Upper) {
    This->lpVtbl->VideoProcessorSetStreamLumaKey(This,pVideoProcessor,StreamIndex,Enable,Lower,Upper);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamStereoFormat(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,D3D11_VIDEO_PROCESSOR_STEREO_FORMAT Format,BOOL LeftViewFrame0,BOOL BaseViewFrame0,D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE FlipMode,int MonoOffset) {
    This->lpVtbl->VideoProcessorSetStreamStereoFormat(This,pVideoProcessor,StreamIndex,Enable,Format,LeftViewFrame0,BaseViewFrame0,FlipMode,MonoOffset);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamAutoProcessingMode(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable) {
    This->lpVtbl->VideoProcessorSetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,Enable);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamFilter(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_FILTER Filter,BOOL Enable,int Level) {
    This->lpVtbl->VideoProcessorSetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,Enable,Level);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext2_VideoProcessorSetStreamExtension(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,const GUID *pExtensionGuid,UINT DataSize,void *pData) {
    return This->lpVtbl->VideoProcessorSetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamFrameFormat(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_FRAME_FORMAT *pFrameFormat) {
    This->lpVtbl->VideoProcessorGetStreamFrameFormat(This,pVideoProcessor,StreamIndex,pFrameFormat);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamColorSpace(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace) {
    This->lpVtbl->VideoProcessorGetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamOutputRate(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_OUTPUT_RATE *pOutputRate,BOOL *pRepeatFrame,DXGI_RATIONAL *pCustomRate) {
    This->lpVtbl->VideoProcessorGetStreamOutputRate(This,pVideoProcessor,StreamIndex,pOutputRate,pRepeatFrame,pCustomRate);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamSourceRect(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,RECT *pRect) {
    This->lpVtbl->VideoProcessorGetStreamSourceRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamDestRect(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,RECT *pRect) {
    This->lpVtbl->VideoProcessorGetStreamDestRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamAlpha(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,FLOAT *pAlpha) {
    This->lpVtbl->VideoProcessorGetStreamAlpha(This,pVideoProcessor,StreamIndex,pEnabled,pAlpha);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamPalette(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,UINT Count,UINT *pEntries) {
    This->lpVtbl->VideoProcessorGetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,DXGI_RATIONAL *pSourceAspectRatio,DXGI_RATIONAL *pDestinationAspectRatio) {
    This->lpVtbl->VideoProcessorGetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,pEnabled,pSourceAspectRatio,pDestinationAspectRatio);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamLumaKey(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,FLOAT *pLower,FLOAT *pUpper) {
    This->lpVtbl->VideoProcessorGetStreamLumaKey(This,pVideoProcessor,StreamIndex,pEnabled,pLower,pUpper);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamStereoFormat(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnable,D3D11_VIDEO_PROCESSOR_STEREO_FORMAT *pFormat,BOOL *pLeftViewFrame0,BOOL *pBaseViewFrame0,D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE *pFlipMode,int *MonoOffset) {
    This->lpVtbl->VideoProcessorGetStreamStereoFormat(This,pVideoProcessor,StreamIndex,pEnable,pFormat,pLeftViewFrame0,pBaseViewFrame0,pFlipMode,MonoOffset);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamAutoProcessingMode(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled) {
    This->lpVtbl->VideoProcessorGetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,pEnabled);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamFilter(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_FILTER Filter,BOOL *pEnabled,int *pLevel) {
    This->lpVtbl->VideoProcessorGetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,pEnabled,pLevel);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext2_VideoProcessorGetStreamExtension(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,const GUID *pExtensionGuid,UINT DataSize,void *pData) {
    return This->lpVtbl->VideoProcessorGetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_VideoProcessorBlt(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,ID3D11VideoProcessorOutputView *pView,UINT OutputFrame,UINT StreamCount,const D3D11_VIDEO_PROCESSOR_STREAM *pStreams) {
    return This->lpVtbl->VideoProcessorBlt(This,pVideoProcessor,pView,OutputFrame,StreamCount,pStreams);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_NegotiateCryptoSessionKeyExchange(ID3D11VideoContext2* This,ID3D11CryptoSession *pCryptoSession,UINT DataSize,void *pData) {
    return This->lpVtbl->NegotiateCryptoSessionKeyExchange(This,pCryptoSession,DataSize,pData);
}
static FORCEINLINE void ID3D11VideoContext2_EncryptionBlt(ID3D11VideoContext2* This,ID3D11CryptoSession *pCryptoSession,ID3D11Texture2D *pSrcSurface,ID3D11Texture2D *pDstSurface,UINT IVSize,void *pIV) {
    This->lpVtbl->EncryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,IVSize,pIV);
}
static FORCEINLINE void ID3D11VideoContext2_DecryptionBlt(ID3D11VideoContext2* This,ID3D11CryptoSession *pCryptoSession,ID3D11Texture2D *pSrcSurface,ID3D11Texture2D *pDstSurface,D3D11_ENCRYPTED_BLOCK_INFO *pEncryptedBlockInfo,UINT ContentKeySize,const void *pContentKey,UINT IVSize,void *pIV) {
    This->lpVtbl->DecryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,pEncryptedBlockInfo,ContentKeySize,pContentKey,IVSize,pIV);
}
static FORCEINLINE void ID3D11VideoContext2_StartSessionKeyRefresh(ID3D11VideoContext2* This,ID3D11CryptoSession *pCryptoSession,UINT RandomNumberSize,void *pRandomNumber) {
    This->lpVtbl->StartSessionKeyRefresh(This,pCryptoSession,RandomNumberSize,pRandomNumber);
}
static FORCEINLINE void ID3D11VideoContext2_FinishSessionKeyRefresh(ID3D11VideoContext2* This,ID3D11CryptoSession *pCryptoSession) {
    This->lpVtbl->FinishSessionKeyRefresh(This,pCryptoSession);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_GetEncryptionBltKey(ID3D11VideoContext2* This,ID3D11CryptoSession *pCryptoSession,UINT KeySize,void *pReadbackKey) {
    return This->lpVtbl->GetEncryptionBltKey(This,pCryptoSession,KeySize,pReadbackKey);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_NegotiateAuthenticatedChannelKeyExchange(ID3D11VideoContext2* This,ID3D11AuthenticatedChannel *pChannel,UINT DataSize,void *pData) {
    return This->lpVtbl->NegotiateAuthenticatedChannelKeyExchange(This,pChannel,DataSize,pData);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_QueryAuthenticatedChannel(ID3D11VideoContext2* This,ID3D11AuthenticatedChannel *pChannel,UINT InputSize,const void *pInput,UINT OutputSize,void *pOutput) {
    return This->lpVtbl->QueryAuthenticatedChannel(This,pChannel,InputSize,pInput,OutputSize,pOutput);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_ConfigureAuthenticatedChannel(ID3D11VideoContext2* This,ID3D11AuthenticatedChannel *pChannel,UINT InputSize,const void *pInput,D3D11_AUTHENTICATED_CONFIGURE_OUTPUT *pOutput) {
    return This->lpVtbl->ConfigureAuthenticatedChannel(This,pChannel,InputSize,pInput,pOutput);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamRotation(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,D3D11_VIDEO_PROCESSOR_ROTATION Rotation) {
    This->lpVtbl->VideoProcessorSetStreamRotation(This,pVideoProcessor,StreamIndex,Enable,Rotation);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamRotation(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnable,D3D11_VIDEO_PROCESSOR_ROTATION *pRotation) {
    This->lpVtbl->VideoProcessorGetStreamRotation(This,pVideoProcessor,StreamIndex,pEnable,pRotation);
}
/*** ID3D11VideoContext1 methods ***/
static FORCEINLINE HRESULT ID3D11VideoContext2_SubmitDecoderBuffers1(ID3D11VideoContext2* This,ID3D11VideoDecoder *pDecoder,UINT NumBuffers,const D3D11_VIDEO_DECODER_BUFFER_DESC1 *pBufferDesc) {
    return This->lpVtbl->SubmitDecoderBuffers1(This,pDecoder,NumBuffers,pBufferDesc);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_GetDataForNewHardwareKey(ID3D11VideoContext2* This,ID3D11CryptoSession *pCryptoSession,UINT PrivateInputSize,const void *pPrivatInputData,UINT64 *pPrivateOutputData) {
    return This->lpVtbl->GetDataForNewHardwareKey(This,pCryptoSession,PrivateInputSize,pPrivatInputData,pPrivateOutputData);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_CheckCryptoSessionStatus(ID3D11VideoContext2* This,ID3D11CryptoSession *pCryptoSession,D3D11_CRYPTO_SESSION_STATUS *pStatus) {
    return This->lpVtbl->CheckCryptoSessionStatus(This,pCryptoSession,pStatus);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_DecoderEnableDownsampling(ID3D11VideoContext2* This,ID3D11VideoDecoder *pDecoder,DXGI_COLOR_SPACE_TYPE InputColorSpace,const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc,UINT ReferenceFrameCount) {
    return This->lpVtbl->DecoderEnableDownsampling(This,pDecoder,InputColorSpace,pOutputDesc,ReferenceFrameCount);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_DecoderUpdateDownsampling(ID3D11VideoContext2* This,ID3D11VideoDecoder *pDecoder,const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc) {
    return This->lpVtbl->DecoderUpdateDownsampling(This,pDecoder,pOutputDesc);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetOutputColorSpace1(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,DXGI_COLOR_SPACE_TYPE ColorSpace) {
    This->lpVtbl->VideoProcessorSetOutputColorSpace1(This,pVideoProcessor,ColorSpace);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetOutputShaderUsage(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL ShaderUsage) {
    This->lpVtbl->VideoProcessorSetOutputShaderUsage(This,pVideoProcessor,ShaderUsage);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetOutputColorSpace1(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,DXGI_COLOR_SPACE_TYPE *pColorSpace) {
    This->lpVtbl->VideoProcessorGetOutputColorSpace1(This,pVideoProcessor,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetOutputShaderUsage(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *pShaderUsage) {
    This->lpVtbl->VideoProcessorGetOutputShaderUsage(This,pVideoProcessor,pShaderUsage);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamColorSpace1(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,DXGI_COLOR_SPACE_TYPE ColorSpace) {
    This->lpVtbl->VideoProcessorSetStreamColorSpace1(This,pVideoProcessor,StreamIndex,ColorSpace);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamMirror(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,BOOL FlipHorizontal,BOOL FlipVertical) {
    This->lpVtbl->VideoProcessorSetStreamMirror(This,pVideoProcessor,StreamIndex,Enable,FlipHorizontal,FlipVertical);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamColorSpace1(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,DXGI_COLOR_SPACE_TYPE *pColorSpace) {
    This->lpVtbl->VideoProcessorGetStreamColorSpace1(This,pVideoProcessor,StreamIndex,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamMirror(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnable,BOOL *pFlipHorizontal,BOOL *pFlipVertical) {
    This->lpVtbl->VideoProcessorGetStreamMirror(This,pVideoProcessor,StreamIndex,pEnable,pFlipHorizontal,pFlipVertical);
}
static FORCEINLINE HRESULT ID3D11VideoContext2_VideoProcessorGetBehaviorHints(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT OutputWidth,UINT OutputHeight,DXGI_FORMAT OutputFormat,UINT StreamCount,const D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT *pStreams,UINT *pBehaviorHints) {
    return This->lpVtbl->VideoProcessorGetBehaviorHints(This,pVideoProcessor,OutputWidth,OutputHeight,OutputFormat,StreamCount,pStreams,pBehaviorHints);
}
/*** ID3D11VideoContext2 methods ***/
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetOutputHDRMetaData(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,DXGI_HDR_METADATA_TYPE Type,UINT Size,const void *pHDRMetaData) {
    This->lpVtbl->VideoProcessorSetOutputHDRMetaData(This,pVideoProcessor,Type,Size,pHDRMetaData);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetOutputHDRMetaData(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,DXGI_HDR_METADATA_TYPE *pType,UINT Size,void *pMetaData) {
    This->lpVtbl->VideoProcessorGetOutputHDRMetaData(This,pVideoProcessor,pType,Size,pMetaData);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorSetStreamHDRMetaData(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,DXGI_HDR_METADATA_TYPE Type,UINT Size,const void *pHDRMetaData) {
    This->lpVtbl->VideoProcessorSetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,Type,Size,pHDRMetaData);
}
static FORCEINLINE void ID3D11VideoContext2_VideoProcessorGetStreamHDRMetaData(ID3D11VideoContext2* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,DXGI_HDR_METADATA_TYPE *pType,UINT Size,void *pMetaData) {
    This->lpVtbl->VideoProcessorGetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,pType,Size,pMetaData);
}
#endif
#endif

#endif


#endif  /* __ID3D11VideoContext2_INTERFACE_DEFINED__ */

typedef enum D3D11_FEATURE_VIDEO {
    D3D11_FEATURE_VIDEO_DECODER_HISTOGRAM = 0
} D3D11_FEATURE_VIDEO;
typedef enum D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT {
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_Y = 0,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_U = 1,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_V = 2,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_R = 0,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_G = 1,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_B = 2,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_A = 3
} D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT;
typedef enum D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS {
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_NONE = 0x0,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_Y = 1 << D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_Y,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_U = 1 << D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_U,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_V = 1 << D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_V,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_R = 1 << D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_R,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_G = 1 << D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_G,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_B = 1 << D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_B,
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_A = 1 << D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_A
} D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS;
DEFINE_ENUM_FLAG_OPERATORS(D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS );
typedef struct D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM {
    D3D11_VIDEO_DECODER_DESC DecoderDesc;
    D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS Components;
    UINT BinCount;
    UINT CounterBitDepth;
} D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM;
typedef enum D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS {
    D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAG_NONE = 0x0
} D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS;
DEFINE_ENUM_FLAG_OPERATORS(D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS );
/*****************************************************************************
 * ID3D11VideoDevice2 interface
 */
#ifndef __ID3D11VideoDevice2_INTERFACE_DEFINED__
#define __ID3D11VideoDevice2_INTERFACE_DEFINED__

DEFINE_GUID(IID_ID3D11VideoDevice2, 0x59c0cb01, 0x35f0, 0x4a70, 0x8f,0x67, 0x87,0x90,0x5c,0x90,0x6a,0x53);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("59c0cb01-35f0-4a70-8f67-87905c906a53")
ID3D11VideoDevice2 : public ID3D11VideoDevice1
{
    virtual HRESULT STDMETHODCALLTYPE CheckFeatureSupport(
        D3D11_FEATURE_VIDEO Feature,
        void *pFeatureSupportData,
        UINT FeatureSupportDataSize) = 0;

    virtual HRESULT STDMETHODCALLTYPE NegotiateCryptoSessionKeyExchangeMT(
        ID3D11CryptoSession *pCryptoSession,
        D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS flags,
        UINT DataSize,
        void *pData) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ID3D11VideoDevice2, 0x59c0cb01, 0x35f0, 0x4a70, 0x8f,0x67, 0x87,0x90,0x5c,0x90,0x6a,0x53)
#endif
#else
typedef struct ID3D11VideoDevice2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ID3D11VideoDevice2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ID3D11VideoDevice2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ID3D11VideoDevice2 *This);

    /*** ID3D11VideoDevice methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateVideoDecoder)(
        ID3D11VideoDevice2 *This,
        const D3D11_VIDEO_DECODER_DESC *pVideoDesc,
        const D3D11_VIDEO_DECODER_CONFIG *pConfig,
        ID3D11VideoDecoder **ppDecoder);

    HRESULT (STDMETHODCALLTYPE *CreateVideoProcessor)(
        ID3D11VideoDevice2 *This,
        ID3D11VideoProcessorEnumerator *pEnum,
        UINT RateConversionIndex,
        ID3D11VideoProcessor **ppVideoProcessor);

    HRESULT (STDMETHODCALLTYPE *CreateAuthenticatedChannel)(
        ID3D11VideoDevice2 *This,
        D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType,
        ID3D11AuthenticatedChannel **ppAuthenticatedChannel);

    HRESULT (STDMETHODCALLTYPE *CreateCryptoSession)(
        ID3D11VideoDevice2 *This,
        const GUID *pCryptoType,
        const GUID *pDecoderProfile,
        const GUID *pKeyExchangeType,
        ID3D11CryptoSession **ppCryptoSession);

    HRESULT (STDMETHODCALLTYPE *CreateVideoDecoderOutputView)(
        ID3D11VideoDevice2 *This,
        ID3D11Resource *pResource,
        const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC *pDesc,
        ID3D11VideoDecoderOutputView **ppVDOVView);

    HRESULT (STDMETHODCALLTYPE *CreateVideoProcessorInputView)(
        ID3D11VideoDevice2 *This,
        ID3D11Resource *pResource,
        ID3D11VideoProcessorEnumerator *pEnum,
        const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC *pDesc,
        ID3D11VideoProcessorInputView **ppVPIView);

    HRESULT (STDMETHODCALLTYPE *CreateVideoProcessorOutputView)(
        ID3D11VideoDevice2 *This,
        ID3D11Resource *pResource,
        ID3D11VideoProcessorEnumerator *pEnum,
        const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC *pDesc,
        ID3D11VideoProcessorOutputView **ppVPOView);

    HRESULT (STDMETHODCALLTYPE *CreateVideoProcessorEnumerator)(
        ID3D11VideoDevice2 *This,
        const D3D11_VIDEO_PROCESSOR_CONTENT_DESC *pDesc,
        ID3D11VideoProcessorEnumerator **ppEnum);

    UINT (STDMETHODCALLTYPE *GetVideoDecoderProfileCount)(
        ID3D11VideoDevice2 *This);

    HRESULT (STDMETHODCALLTYPE *GetVideoDecoderProfile)(
        ID3D11VideoDevice2 *This,
        UINT Index,
        GUID *pDecoderProfile);

    HRESULT (STDMETHODCALLTYPE *CheckVideoDecoderFormat)(
        ID3D11VideoDevice2 *This,
        const GUID *pDecoderProfile,
        DXGI_FORMAT Format,
        BOOL *pSupported);

    HRESULT (STDMETHODCALLTYPE *GetVideoDecoderConfigCount)(
        ID3D11VideoDevice2 *This,
        const D3D11_VIDEO_DECODER_DESC *pDesc,
        UINT *pCount);

    HRESULT (STDMETHODCALLTYPE *GetVideoDecoderConfig)(
        ID3D11VideoDevice2 *This,
        const D3D11_VIDEO_DECODER_DESC *pDesc,
        UINT Index,
        D3D11_VIDEO_DECODER_CONFIG *pConfig);

    HRESULT (STDMETHODCALLTYPE *GetContentProtectionCaps)(
        ID3D11VideoDevice2 *This,
        const GUID *pCryptoType,
        const GUID *pDecoderProfile,
        D3D11_VIDEO_CONTENT_PROTECTION_CAPS *pCaps);

    HRESULT (STDMETHODCALLTYPE *CheckCryptoKeyExchange)(
        ID3D11VideoDevice2 *This,
        const GUID *pCryptoType,
        const GUID *pDecoderProfile,
        UINT Index,
        GUID *pKeyExchangeType);

    HRESULT (STDMETHODCALLTYPE *SetPrivateData)(
        ID3D11VideoDevice2 *This,
        REFGUID guid,
        UINT DataSize,
        const void *pData);

    HRESULT (STDMETHODCALLTYPE *SetPrivateDataInterface)(
        ID3D11VideoDevice2 *This,
        REFGUID guid,
        const IUnknown *pData);

    /*** ID3D11VideoDevice1 methods ***/
    HRESULT (STDMETHODCALLTYPE *GetCryptoSessionPrivateDataSize)(
        ID3D11VideoDevice2 *This,
        const GUID *pCryptoType,
        const GUID *pDecoderProfile,
        const GUID *pKeyExchangeType,
        UINT *pPrivateInputSize,
        UINT *pPrivateOutputSize);

    HRESULT (STDMETHODCALLTYPE *GetVideoDecoderCaps)(
        ID3D11VideoDevice2 *This,
        const GUID *pDecoderProfile,
        UINT SampleWidth,
        UINT SampleHeight,
        const DXGI_RATIONAL *pFrameRate,
        UINT BitRate,
        const GUID *pCryptoType,
        UINT *pDecoderCaps);

    HRESULT (STDMETHODCALLTYPE *CheckVideoDecoderDownsampling)(
        ID3D11VideoDevice2 *This,
        const D3D11_VIDEO_DECODER_DESC *pInputDesc,
        DXGI_COLOR_SPACE_TYPE InputColorSpace,
        const D3D11_VIDEO_DECODER_CONFIG *pInputConfig,
        const DXGI_RATIONAL *pFrameRate,
        const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc,
        BOOL *pSupported,
        BOOL *pRealTimeHint);

    HRESULT (STDMETHODCALLTYPE *RecommendVideoDecoderDownsampleParameters)(
        ID3D11VideoDevice2 *This,
        const D3D11_VIDEO_DECODER_DESC *pInputDesc,
        DXGI_COLOR_SPACE_TYPE InputColorSpace,
        const D3D11_VIDEO_DECODER_CONFIG *pInputConfig,
        const DXGI_RATIONAL *pFrameRate,
        D3D11_VIDEO_SAMPLE_DESC *pRecommendedOutputDesc);

    /*** ID3D11VideoDevice2 methods ***/
    HRESULT (STDMETHODCALLTYPE *CheckFeatureSupport)(
        ID3D11VideoDevice2 *This,
        D3D11_FEATURE_VIDEO Feature,
        void *pFeatureSupportData,
        UINT FeatureSupportDataSize);

    HRESULT (STDMETHODCALLTYPE *NegotiateCryptoSessionKeyExchangeMT)(
        ID3D11VideoDevice2 *This,
        ID3D11CryptoSession *pCryptoSession,
        D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS flags,
        UINT DataSize,
        void *pData);

    END_INTERFACE
} ID3D11VideoDevice2Vtbl;

interface ID3D11VideoDevice2 {
    CONST_VTBL ID3D11VideoDevice2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ID3D11VideoDevice2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ID3D11VideoDevice2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ID3D11VideoDevice2_Release(This) (This)->lpVtbl->Release(This)
/*** ID3D11VideoDevice methods ***/
#define ID3D11VideoDevice2_CreateVideoDecoder(This,pVideoDesc,pConfig,ppDecoder) (This)->lpVtbl->CreateVideoDecoder(This,pVideoDesc,pConfig,ppDecoder)
#define ID3D11VideoDevice2_CreateVideoProcessor(This,pEnum,RateConversionIndex,ppVideoProcessor) (This)->lpVtbl->CreateVideoProcessor(This,pEnum,RateConversionIndex,ppVideoProcessor)
#define ID3D11VideoDevice2_CreateAuthenticatedChannel(This,ChannelType,ppAuthenticatedChannel) (This)->lpVtbl->CreateAuthenticatedChannel(This,ChannelType,ppAuthenticatedChannel)
#define ID3D11VideoDevice2_CreateCryptoSession(This,pCryptoType,pDecoderProfile,pKeyExchangeType,ppCryptoSession) (This)->lpVtbl->CreateCryptoSession(This,pCryptoType,pDecoderProfile,pKeyExchangeType,ppCryptoSession)
#define ID3D11VideoDevice2_CreateVideoDecoderOutputView(This,pResource,pDesc,ppVDOVView) (This)->lpVtbl->CreateVideoDecoderOutputView(This,pResource,pDesc,ppVDOVView)
#define ID3D11VideoDevice2_CreateVideoProcessorInputView(This,pResource,pEnum,pDesc,ppVPIView) (This)->lpVtbl->CreateVideoProcessorInputView(This,pResource,pEnum,pDesc,ppVPIView)
#define ID3D11VideoDevice2_CreateVideoProcessorOutputView(This,pResource,pEnum,pDesc,ppVPOView) (This)->lpVtbl->CreateVideoProcessorOutputView(This,pResource,pEnum,pDesc,ppVPOView)
#define ID3D11VideoDevice2_CreateVideoProcessorEnumerator(This,pDesc,ppEnum) (This)->lpVtbl->CreateVideoProcessorEnumerator(This,pDesc,ppEnum)
#define ID3D11VideoDevice2_GetVideoDecoderProfileCount(This) (This)->lpVtbl->GetVideoDecoderProfileCount(This)
#define ID3D11VideoDevice2_GetVideoDecoderProfile(This,Index,pDecoderProfile) (This)->lpVtbl->GetVideoDecoderProfile(This,Index,pDecoderProfile)
#define ID3D11VideoDevice2_CheckVideoDecoderFormat(This,pDecoderProfile,Format,pSupported) (This)->lpVtbl->CheckVideoDecoderFormat(This,pDecoderProfile,Format,pSupported)
#define ID3D11VideoDevice2_GetVideoDecoderConfigCount(This,pDesc,pCount) (This)->lpVtbl->GetVideoDecoderConfigCount(This,pDesc,pCount)
#define ID3D11VideoDevice2_GetVideoDecoderConfig(This,pDesc,Index,pConfig) (This)->lpVtbl->GetVideoDecoderConfig(This,pDesc,Index,pConfig)
#define ID3D11VideoDevice2_GetContentProtectionCaps(This,pCryptoType,pDecoderProfile,pCaps) (This)->lpVtbl->GetContentProtectionCaps(This,pCryptoType,pDecoderProfile,pCaps)
#define ID3D11VideoDevice2_CheckCryptoKeyExchange(This,pCryptoType,pDecoderProfile,Index,pKeyExchangeType) (This)->lpVtbl->CheckCryptoKeyExchange(This,pCryptoType,pDecoderProfile,Index,pKeyExchangeType)
#define ID3D11VideoDevice2_SetPrivateData(This,guid,DataSize,pData) (This)->lpVtbl->SetPrivateData(This,guid,DataSize,pData)
#define ID3D11VideoDevice2_SetPrivateDataInterface(This,guid,pData) (This)->lpVtbl->SetPrivateDataInterface(This,guid,pData)
/*** ID3D11VideoDevice1 methods ***/
#define ID3D11VideoDevice2_GetCryptoSessionPrivateDataSize(This,pCryptoType,pDecoderProfile,pKeyExchangeType,pPrivateInputSize,pPrivateOutputSize) (This)->lpVtbl->GetCryptoSessionPrivateDataSize(This,pCryptoType,pDecoderProfile,pKeyExchangeType,pPrivateInputSize,pPrivateOutputSize)
#define ID3D11VideoDevice2_GetVideoDecoderCaps(This,pDecoderProfile,SampleWidth,SampleHeight,pFrameRate,BitRate,pCryptoType,pDecoderCaps) (This)->lpVtbl->GetVideoDecoderCaps(This,pDecoderProfile,SampleWidth,SampleHeight,pFrameRate,BitRate,pCryptoType,pDecoderCaps)
#define ID3D11VideoDevice2_CheckVideoDecoderDownsampling(This,pInputDesc,InputColorSpace,pInputConfig,pFrameRate,pOutputDesc,pSupported,pRealTimeHint) (This)->lpVtbl->CheckVideoDecoderDownsampling(This,pInputDesc,InputColorSpace,pInputConfig,pFrameRate,pOutputDesc,pSupported,pRealTimeHint)
#define ID3D11VideoDevice2_RecommendVideoDecoderDownsampleParameters(This,pInputDesc,InputColorSpace,pInputConfig,pFrameRate,pRecommendedOutputDesc) (This)->lpVtbl->RecommendVideoDecoderDownsampleParameters(This,pInputDesc,InputColorSpace,pInputConfig,pFrameRate,pRecommendedOutputDesc)
/*** ID3D11VideoDevice2 methods ***/
#define ID3D11VideoDevice2_CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize) (This)->lpVtbl->CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize)
#define ID3D11VideoDevice2_NegotiateCryptoSessionKeyExchangeMT(This,pCryptoSession,flags,DataSize,pData) (This)->lpVtbl->NegotiateCryptoSessionKeyExchangeMT(This,pCryptoSession,flags,DataSize,pData)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ID3D11VideoDevice2_QueryInterface(ID3D11VideoDevice2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ID3D11VideoDevice2_AddRef(ID3D11VideoDevice2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ID3D11VideoDevice2_Release(ID3D11VideoDevice2* This) {
    return This->lpVtbl->Release(This);
}
/*** ID3D11VideoDevice methods ***/
static FORCEINLINE HRESULT ID3D11VideoDevice2_CreateVideoDecoder(ID3D11VideoDevice2* This,const D3D11_VIDEO_DECODER_DESC *pVideoDesc,const D3D11_VIDEO_DECODER_CONFIG *pConfig,ID3D11VideoDecoder **ppDecoder) {
    return This->lpVtbl->CreateVideoDecoder(This,pVideoDesc,pConfig,ppDecoder);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CreateVideoProcessor(ID3D11VideoDevice2* This,ID3D11VideoProcessorEnumerator *pEnum,UINT RateConversionIndex,ID3D11VideoProcessor **ppVideoProcessor) {
    return This->lpVtbl->CreateVideoProcessor(This,pEnum,RateConversionIndex,ppVideoProcessor);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CreateAuthenticatedChannel(ID3D11VideoDevice2* This,D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType,ID3D11AuthenticatedChannel **ppAuthenticatedChannel) {
    return This->lpVtbl->CreateAuthenticatedChannel(This,ChannelType,ppAuthenticatedChannel);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CreateCryptoSession(ID3D11VideoDevice2* This,const GUID *pCryptoType,const GUID *pDecoderProfile,const GUID *pKeyExchangeType,ID3D11CryptoSession **ppCryptoSession) {
    return This->lpVtbl->CreateCryptoSession(This,pCryptoType,pDecoderProfile,pKeyExchangeType,ppCryptoSession);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CreateVideoDecoderOutputView(ID3D11VideoDevice2* This,ID3D11Resource *pResource,const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC *pDesc,ID3D11VideoDecoderOutputView **ppVDOVView) {
    return This->lpVtbl->CreateVideoDecoderOutputView(This,pResource,pDesc,ppVDOVView);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CreateVideoProcessorInputView(ID3D11VideoDevice2* This,ID3D11Resource *pResource,ID3D11VideoProcessorEnumerator *pEnum,const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC *pDesc,ID3D11VideoProcessorInputView **ppVPIView) {
    return This->lpVtbl->CreateVideoProcessorInputView(This,pResource,pEnum,pDesc,ppVPIView);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CreateVideoProcessorOutputView(ID3D11VideoDevice2* This,ID3D11Resource *pResource,ID3D11VideoProcessorEnumerator *pEnum,const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC *pDesc,ID3D11VideoProcessorOutputView **ppVPOView) {
    return This->lpVtbl->CreateVideoProcessorOutputView(This,pResource,pEnum,pDesc,ppVPOView);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CreateVideoProcessorEnumerator(ID3D11VideoDevice2* This,const D3D11_VIDEO_PROCESSOR_CONTENT_DESC *pDesc,ID3D11VideoProcessorEnumerator **ppEnum) {
    return This->lpVtbl->CreateVideoProcessorEnumerator(This,pDesc,ppEnum);
}
static FORCEINLINE UINT ID3D11VideoDevice2_GetVideoDecoderProfileCount(ID3D11VideoDevice2* This) {
    return This->lpVtbl->GetVideoDecoderProfileCount(This);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_GetVideoDecoderProfile(ID3D11VideoDevice2* This,UINT Index,GUID *pDecoderProfile) {
    return This->lpVtbl->GetVideoDecoderProfile(This,Index,pDecoderProfile);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CheckVideoDecoderFormat(ID3D11VideoDevice2* This,const GUID *pDecoderProfile,DXGI_FORMAT Format,BOOL *pSupported) {
    return This->lpVtbl->CheckVideoDecoderFormat(This,pDecoderProfile,Format,pSupported);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_GetVideoDecoderConfigCount(ID3D11VideoDevice2* This,const D3D11_VIDEO_DECODER_DESC *pDesc,UINT *pCount) {
    return This->lpVtbl->GetVideoDecoderConfigCount(This,pDesc,pCount);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_GetVideoDecoderConfig(ID3D11VideoDevice2* This,const D3D11_VIDEO_DECODER_DESC *pDesc,UINT Index,D3D11_VIDEO_DECODER_CONFIG *pConfig) {
    return This->lpVtbl->GetVideoDecoderConfig(This,pDesc,Index,pConfig);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_GetContentProtectionCaps(ID3D11VideoDevice2* This,const GUID *pCryptoType,const GUID *pDecoderProfile,D3D11_VIDEO_CONTENT_PROTECTION_CAPS *pCaps) {
    return This->lpVtbl->GetContentProtectionCaps(This,pCryptoType,pDecoderProfile,pCaps);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CheckCryptoKeyExchange(ID3D11VideoDevice2* This,const GUID *pCryptoType,const GUID *pDecoderProfile,UINT Index,GUID *pKeyExchangeType) {
    return This->lpVtbl->CheckCryptoKeyExchange(This,pCryptoType,pDecoderProfile,Index,pKeyExchangeType);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_SetPrivateData(ID3D11VideoDevice2* This,REFGUID guid,UINT DataSize,const void *pData) {
    return This->lpVtbl->SetPrivateData(This,guid,DataSize,pData);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_SetPrivateDataInterface(ID3D11VideoDevice2* This,REFGUID guid,const IUnknown *pData) {
    return This->lpVtbl->SetPrivateDataInterface(This,guid,pData);
}
/*** ID3D11VideoDevice1 methods ***/
static FORCEINLINE HRESULT ID3D11VideoDevice2_GetCryptoSessionPrivateDataSize(ID3D11VideoDevice2* This,const GUID *pCryptoType,const GUID *pDecoderProfile,const GUID *pKeyExchangeType,UINT *pPrivateInputSize,UINT *pPrivateOutputSize) {
    return This->lpVtbl->GetCryptoSessionPrivateDataSize(This,pCryptoType,pDecoderProfile,pKeyExchangeType,pPrivateInputSize,pPrivateOutputSize);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_GetVideoDecoderCaps(ID3D11VideoDevice2* This,const GUID *pDecoderProfile,UINT SampleWidth,UINT SampleHeight,const DXGI_RATIONAL *pFrameRate,UINT BitRate,const GUID *pCryptoType,UINT *pDecoderCaps) {
    return This->lpVtbl->GetVideoDecoderCaps(This,pDecoderProfile,SampleWidth,SampleHeight,pFrameRate,BitRate,pCryptoType,pDecoderCaps);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_CheckVideoDecoderDownsampling(ID3D11VideoDevice2* This,const D3D11_VIDEO_DECODER_DESC *pInputDesc,DXGI_COLOR_SPACE_TYPE InputColorSpace,const D3D11_VIDEO_DECODER_CONFIG *pInputConfig,const DXGI_RATIONAL *pFrameRate,const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc,BOOL *pSupported,BOOL *pRealTimeHint) {
    return This->lpVtbl->CheckVideoDecoderDownsampling(This,pInputDesc,InputColorSpace,pInputConfig,pFrameRate,pOutputDesc,pSupported,pRealTimeHint);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_RecommendVideoDecoderDownsampleParameters(ID3D11VideoDevice2* This,const D3D11_VIDEO_DECODER_DESC *pInputDesc,DXGI_COLOR_SPACE_TYPE InputColorSpace,const D3D11_VIDEO_DECODER_CONFIG *pInputConfig,const DXGI_RATIONAL *pFrameRate,D3D11_VIDEO_SAMPLE_DESC *pRecommendedOutputDesc) {
    return This->lpVtbl->RecommendVideoDecoderDownsampleParameters(This,pInputDesc,InputColorSpace,pInputConfig,pFrameRate,pRecommendedOutputDesc);
}
/*** ID3D11VideoDevice2 methods ***/
static FORCEINLINE HRESULT ID3D11VideoDevice2_CheckFeatureSupport(ID3D11VideoDevice2* This,D3D11_FEATURE_VIDEO Feature,void *pFeatureSupportData,UINT FeatureSupportDataSize) {
    return This->lpVtbl->CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize);
}
static FORCEINLINE HRESULT ID3D11VideoDevice2_NegotiateCryptoSessionKeyExchangeMT(ID3D11VideoDevice2* This,ID3D11CryptoSession *pCryptoSession,D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS flags,UINT DataSize,void *pData) {
    return This->lpVtbl->NegotiateCryptoSessionKeyExchangeMT(This,pCryptoSession,flags,DataSize,pData);
}
#endif
#endif

#endif


#endif  /* __ID3D11VideoDevice2_INTERFACE_DEFINED__ */

typedef struct D3D11_VIDEO_DECODER_BUFFER_DESC2 {
    D3D11_VIDEO_DECODER_BUFFER_TYPE BufferType;
    UINT DataOffset;
    UINT DataSize;
    void *pIV;
    UINT IVSize;
    D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK *pSubSampleMappingBlock;
    UINT SubSampleMappingCount;
    UINT cBlocksStripeEncrypted;
    UINT cBlocksStripeClear;
} D3D11_VIDEO_DECODER_BUFFER_DESC2;
/*****************************************************************************
 * ID3D11VideoContext3 interface
 */
#ifndef __ID3D11VideoContext3_INTERFACE_DEFINED__
#define __ID3D11VideoContext3_INTERFACE_DEFINED__

DEFINE_GUID(IID_ID3D11VideoContext3, 0xa9e2faa0, 0xcb39, 0x418f, 0xa0,0xb7, 0xd8,0xaa,0xd4,0xde,0x67,0x2e);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("a9e2faa0-cb39-418f-a0b7-d8aad4de672e")
ID3D11VideoContext3 : public ID3D11VideoContext2
{
    virtual HRESULT STDMETHODCALLTYPE DecoderBeginFrame1(
        ID3D11VideoDecoder *pDecoder,
        ID3D11VideoDecoderOutputView *pView,
        UINT ContentKeySize,
        const void *pContentKey,
        UINT NumComponentHistograms,
        const UINT *pHistogramOffsets,
        ID3D11Buffer *const *ppHistogramBuffers) = 0;

    virtual HRESULT STDMETHODCALLTYPE SubmitDecoderBuffers2(
        ID3D11VideoDecoder *pDecoder,
        UINT NumBuffers,
        const D3D11_VIDEO_DECODER_BUFFER_DESC2 *pBufferDesc) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ID3D11VideoContext3, 0xa9e2faa0, 0xcb39, 0x418f, 0xa0,0xb7, 0xd8,0xaa,0xd4,0xde,0x67,0x2e)
#endif
#else
typedef struct ID3D11VideoContext3Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ID3D11VideoContext3 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ID3D11VideoContext3 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ID3D11VideoContext3 *This);

    /*** ID3D11DeviceChild methods ***/
    void (STDMETHODCALLTYPE *GetDevice)(
        ID3D11VideoContext3 *This,
        ID3D11Device **ppDevice);

    HRESULT (STDMETHODCALLTYPE *GetPrivateData)(
        ID3D11VideoContext3 *This,
        REFGUID guid,
        UINT *pDataSize,
        void *pData);

    HRESULT (STDMETHODCALLTYPE *SetPrivateData)(
        ID3D11VideoContext3 *This,
        REFGUID guid,
        UINT DataSize,
        const void *pData);

    HRESULT (STDMETHODCALLTYPE *SetPrivateDataInterface)(
        ID3D11VideoContext3 *This,
        REFGUID guid,
        const IUnknown *pData);

    /*** ID3D11VideoContext methods ***/
    HRESULT (STDMETHODCALLTYPE *GetDecoderBuffer)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        D3D11_VIDEO_DECODER_BUFFER_TYPE Type,
        UINT *pBufferSize,
        void **ppBuffer);

    HRESULT (STDMETHODCALLTYPE *ReleaseDecoderBuffer)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        D3D11_VIDEO_DECODER_BUFFER_TYPE Type);

    HRESULT (STDMETHODCALLTYPE *DecoderBeginFrame)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        ID3D11VideoDecoderOutputView *pView,
        UINT ContentKeySize,
        const void *pContentKey);

    HRESULT (STDMETHODCALLTYPE *DecoderEndFrame)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder);

    HRESULT (STDMETHODCALLTYPE *SubmitDecoderBuffers)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        UINT NumBuffers,
        const D3D11_VIDEO_DECODER_BUFFER_DESC *pBufferDesc);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *DecoderExtension)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        const D3D11_VIDEO_DECODER_EXTENSION *pExtensionData);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputTargetRect)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL Enable,
        const RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputBackgroundColor)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL YCbCr,
        const D3D11_VIDEO_COLOR *pColor);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputColorSpace)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputAlphaFillMode)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE AlphaFillMode,
        UINT StreamIndex);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputConstriction)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL Enable,
        SIZE Size);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputStereoMode)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL Enable);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *VideoProcessorSetOutputExtension)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        const GUID *pExtensionGuid,
        UINT DataSize,
        void *pData);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputTargetRect)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *Enabled,
        RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputBackgroundColor)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *pYCbCr,
        D3D11_VIDEO_COLOR *pColor);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputColorSpace)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputAlphaFillMode)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE *pAlphaFillMode,
        UINT *pStreamIndex);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputConstriction)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *pEnabled,
        SIZE *pSize);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputStereoMode)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *pEnabled);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *VideoProcessorGetOutputExtension)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        const GUID *pExtensionGuid,
        UINT DataSize,
        void *pData);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamFrameFormat)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_FRAME_FORMAT FrameFormat);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamColorSpace)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamOutputRate)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_OUTPUT_RATE OutputRate,
        BOOL RepeatFrame,
        const DXGI_RATIONAL *pCustomRate);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamSourceRect)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        const RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamDestRect)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        const RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamAlpha)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        FLOAT Alpha);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamPalette)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        UINT Count,
        const UINT *pEntries);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamPixelAspectRatio)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        const DXGI_RATIONAL *pSourceAspectRatio,
        const DXGI_RATIONAL *pDestinationAspectRatio);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamLumaKey)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        FLOAT Lower,
        FLOAT Upper);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamStereoFormat)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT Format,
        BOOL LeftViewFrame0,
        BOOL BaseViewFrame0,
        D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE FlipMode,
        int MonoOffset);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamAutoProcessingMode)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamFilter)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_FILTER Filter,
        BOOL Enable,
        int Level);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *VideoProcessorSetStreamExtension)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        const GUID *pExtensionGuid,
        UINT DataSize,
        void *pData);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamFrameFormat)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_FRAME_FORMAT *pFrameFormat);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamColorSpace)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamOutputRate)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_OUTPUT_RATE *pOutputRate,
        BOOL *pRepeatFrame,
        DXGI_RATIONAL *pCustomRate);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamSourceRect)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamDestRect)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        RECT *pRect);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamAlpha)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        FLOAT *pAlpha);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamPalette)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        UINT Count,
        UINT *pEntries);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamPixelAspectRatio)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        DXGI_RATIONAL *pSourceAspectRatio,
        DXGI_RATIONAL *pDestinationAspectRatio);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamLumaKey)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled,
        FLOAT *pLower,
        FLOAT *pUpper);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamStereoFormat)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnable,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT *pFormat,
        BOOL *pLeftViewFrame0,
        BOOL *pBaseViewFrame0,
        D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE *pFlipMode,
        int *MonoOffset);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamAutoProcessingMode)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnabled);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamFilter)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        D3D11_VIDEO_PROCESSOR_FILTER Filter,
        BOOL *pEnabled,
        int *pLevel);

    APP_DEPRECATED_HRESULT (STDMETHODCALLTYPE *VideoProcessorGetStreamExtension)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        const GUID *pExtensionGuid,
        UINT DataSize,
        void *pData);

    HRESULT (STDMETHODCALLTYPE *VideoProcessorBlt)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        ID3D11VideoProcessorOutputView *pView,
        UINT OutputFrame,
        UINT StreamCount,
        const D3D11_VIDEO_PROCESSOR_STREAM *pStreams);

    HRESULT (STDMETHODCALLTYPE *NegotiateCryptoSessionKeyExchange)(
        ID3D11VideoContext3 *This,
        ID3D11CryptoSession *pCryptoSession,
        UINT DataSize,
        void *pData);

    void (STDMETHODCALLTYPE *EncryptionBlt)(
        ID3D11VideoContext3 *This,
        ID3D11CryptoSession *pCryptoSession,
        ID3D11Texture2D *pSrcSurface,
        ID3D11Texture2D *pDstSurface,
        UINT IVSize,
        void *pIV);

    void (STDMETHODCALLTYPE *DecryptionBlt)(
        ID3D11VideoContext3 *This,
        ID3D11CryptoSession *pCryptoSession,
        ID3D11Texture2D *pSrcSurface,
        ID3D11Texture2D *pDstSurface,
        D3D11_ENCRYPTED_BLOCK_INFO *pEncryptedBlockInfo,
        UINT ContentKeySize,
        const void *pContentKey,
        UINT IVSize,
        void *pIV);

    void (STDMETHODCALLTYPE *StartSessionKeyRefresh)(
        ID3D11VideoContext3 *This,
        ID3D11CryptoSession *pCryptoSession,
        UINT RandomNumberSize,
        void *pRandomNumber);

    void (STDMETHODCALLTYPE *FinishSessionKeyRefresh)(
        ID3D11VideoContext3 *This,
        ID3D11CryptoSession *pCryptoSession);

    HRESULT (STDMETHODCALLTYPE *GetEncryptionBltKey)(
        ID3D11VideoContext3 *This,
        ID3D11CryptoSession *pCryptoSession,
        UINT KeySize,
        void *pReadbackKey);

    HRESULT (STDMETHODCALLTYPE *NegotiateAuthenticatedChannelKeyExchange)(
        ID3D11VideoContext3 *This,
        ID3D11AuthenticatedChannel *pChannel,
        UINT DataSize,
        void *pData);

    HRESULT (STDMETHODCALLTYPE *QueryAuthenticatedChannel)(
        ID3D11VideoContext3 *This,
        ID3D11AuthenticatedChannel *pChannel,
        UINT InputSize,
        const void *pInput,
        UINT OutputSize,
        void *pOutput);

    HRESULT (STDMETHODCALLTYPE *ConfigureAuthenticatedChannel)(
        ID3D11VideoContext3 *This,
        ID3D11AuthenticatedChannel *pChannel,
        UINT InputSize,
        const void *pInput,
        D3D11_AUTHENTICATED_CONFIGURE_OUTPUT *pOutput);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamRotation)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        D3D11_VIDEO_PROCESSOR_ROTATION Rotation);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamRotation)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnable,
        D3D11_VIDEO_PROCESSOR_ROTATION *pRotation);

    /*** ID3D11VideoContext1 methods ***/
    HRESULT (STDMETHODCALLTYPE *SubmitDecoderBuffers1)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        UINT NumBuffers,
        const D3D11_VIDEO_DECODER_BUFFER_DESC1 *pBufferDesc);

    HRESULT (STDMETHODCALLTYPE *GetDataForNewHardwareKey)(
        ID3D11VideoContext3 *This,
        ID3D11CryptoSession *pCryptoSession,
        UINT PrivateInputSize,
        const void *pPrivatInputData,
        UINT64 *pPrivateOutputData);

    HRESULT (STDMETHODCALLTYPE *CheckCryptoSessionStatus)(
        ID3D11VideoContext3 *This,
        ID3D11CryptoSession *pCryptoSession,
        D3D11_CRYPTO_SESSION_STATUS *pStatus);

    HRESULT (STDMETHODCALLTYPE *DecoderEnableDownsampling)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        DXGI_COLOR_SPACE_TYPE InputColorSpace,
        const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc,
        UINT ReferenceFrameCount);

    HRESULT (STDMETHODCALLTYPE *DecoderUpdateDownsampling)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputColorSpace1)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_COLOR_SPACE_TYPE ColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorSetOutputShaderUsage)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL ShaderUsage);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputColorSpace1)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_COLOR_SPACE_TYPE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputShaderUsage)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        BOOL *pShaderUsage);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamColorSpace1)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_COLOR_SPACE_TYPE ColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamMirror)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL Enable,
        BOOL FlipHorizontal,
        BOOL FlipVertical);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamColorSpace1)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_COLOR_SPACE_TYPE *pColorSpace);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamMirror)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        BOOL *pEnable,
        BOOL *pFlipHorizontal,
        BOOL *pFlipVertical);

    HRESULT (STDMETHODCALLTYPE *VideoProcessorGetBehaviorHints)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT OutputWidth,
        UINT OutputHeight,
        DXGI_FORMAT OutputFormat,
        UINT StreamCount,
        const D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT *pStreams,
        UINT *pBehaviorHints);

    /*** ID3D11VideoContext2 methods ***/
    void (STDMETHODCALLTYPE *VideoProcessorSetOutputHDRMetaData)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_HDR_METADATA_TYPE Type,
        UINT Size,
        const void *pHDRMetaData);

    void (STDMETHODCALLTYPE *VideoProcessorGetOutputHDRMetaData)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        DXGI_HDR_METADATA_TYPE *pType,
        UINT Size,
        void *pMetaData);

    void (STDMETHODCALLTYPE *VideoProcessorSetStreamHDRMetaData)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_HDR_METADATA_TYPE Type,
        UINT Size,
        const void *pHDRMetaData);

    void (STDMETHODCALLTYPE *VideoProcessorGetStreamHDRMetaData)(
        ID3D11VideoContext3 *This,
        ID3D11VideoProcessor *pVideoProcessor,
        UINT StreamIndex,
        DXGI_HDR_METADATA_TYPE *pType,
        UINT Size,
        void *pMetaData);

    /*** ID3D11VideoContext3 methods ***/
    HRESULT (STDMETHODCALLTYPE *DecoderBeginFrame1)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        ID3D11VideoDecoderOutputView *pView,
        UINT ContentKeySize,
        const void *pContentKey,
        UINT NumComponentHistograms,
        const UINT *pHistogramOffsets,
        ID3D11Buffer *const *ppHistogramBuffers);

    HRESULT (STDMETHODCALLTYPE *SubmitDecoderBuffers2)(
        ID3D11VideoContext3 *This,
        ID3D11VideoDecoder *pDecoder,
        UINT NumBuffers,
        const D3D11_VIDEO_DECODER_BUFFER_DESC2 *pBufferDesc);

    END_INTERFACE
} ID3D11VideoContext3Vtbl;

interface ID3D11VideoContext3 {
    CONST_VTBL ID3D11VideoContext3Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ID3D11VideoContext3_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ID3D11VideoContext3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ID3D11VideoContext3_Release(This) (This)->lpVtbl->Release(This)
/*** ID3D11DeviceChild methods ***/
#define ID3D11VideoContext3_GetDevice(This,ppDevice) (This)->lpVtbl->GetDevice(This,ppDevice)
#define ID3D11VideoContext3_GetPrivateData(This,guid,pDataSize,pData) (This)->lpVtbl->GetPrivateData(This,guid,pDataSize,pData)
#define ID3D11VideoContext3_SetPrivateData(This,guid,DataSize,pData) (This)->lpVtbl->SetPrivateData(This,guid,DataSize,pData)
#define ID3D11VideoContext3_SetPrivateDataInterface(This,guid,pData) (This)->lpVtbl->SetPrivateDataInterface(This,guid,pData)
/*** ID3D11VideoContext methods ***/
#define ID3D11VideoContext3_GetDecoderBuffer(This,pDecoder,Type,pBufferSize,ppBuffer) (This)->lpVtbl->GetDecoderBuffer(This,pDecoder,Type,pBufferSize,ppBuffer)
#define ID3D11VideoContext3_ReleaseDecoderBuffer(This,pDecoder,Type) (This)->lpVtbl->ReleaseDecoderBuffer(This,pDecoder,Type)
#define ID3D11VideoContext3_DecoderBeginFrame(This,pDecoder,pView,ContentKeySize,pContentKey) (This)->lpVtbl->DecoderBeginFrame(This,pDecoder,pView,ContentKeySize,pContentKey)
#define ID3D11VideoContext3_DecoderEndFrame(This,pDecoder) (This)->lpVtbl->DecoderEndFrame(This,pDecoder)
#define ID3D11VideoContext3_SubmitDecoderBuffers(This,pDecoder,NumBuffers,pBufferDesc) (This)->lpVtbl->SubmitDecoderBuffers(This,pDecoder,NumBuffers,pBufferDesc)
#define ID3D11VideoContext3_DecoderExtension(This,pDecoder,pExtensionData) (This)->lpVtbl->DecoderExtension(This,pDecoder,pExtensionData)
#define ID3D11VideoContext3_VideoProcessorSetOutputTargetRect(This,pVideoProcessor,Enable,pRect) (This)->lpVtbl->VideoProcessorSetOutputTargetRect(This,pVideoProcessor,Enable,pRect)
#define ID3D11VideoContext3_VideoProcessorSetOutputBackgroundColor(This,pVideoProcessor,YCbCr,pColor) (This)->lpVtbl->VideoProcessorSetOutputBackgroundColor(This,pVideoProcessor,YCbCr,pColor)
#define ID3D11VideoContext3_VideoProcessorSetOutputColorSpace(This,pVideoProcessor,pColorSpace) (This)->lpVtbl->VideoProcessorSetOutputColorSpace(This,pVideoProcessor,pColorSpace)
#define ID3D11VideoContext3_VideoProcessorSetOutputAlphaFillMode(This,pVideoProcessor,AlphaFillMode,StreamIndex) (This)->lpVtbl->VideoProcessorSetOutputAlphaFillMode(This,pVideoProcessor,AlphaFillMode,StreamIndex)
#define ID3D11VideoContext3_VideoProcessorSetOutputConstriction(This,pVideoProcessor,Enable,Size) (This)->lpVtbl->VideoProcessorSetOutputConstriction(This,pVideoProcessor,Enable,Size)
#define ID3D11VideoContext3_VideoProcessorSetOutputStereoMode(This,pVideoProcessor,Enable) (This)->lpVtbl->VideoProcessorSetOutputStereoMode(This,pVideoProcessor,Enable)
#define ID3D11VideoContext3_VideoProcessorSetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData) (This)->lpVtbl->VideoProcessorSetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData)
#define ID3D11VideoContext3_VideoProcessorGetOutputTargetRect(This,pVideoProcessor,Enabled,pRect) (This)->lpVtbl->VideoProcessorGetOutputTargetRect(This,pVideoProcessor,Enabled,pRect)
#define ID3D11VideoContext3_VideoProcessorGetOutputBackgroundColor(This,pVideoProcessor,pYCbCr,pColor) (This)->lpVtbl->VideoProcessorGetOutputBackgroundColor(This,pVideoProcessor,pYCbCr,pColor)
#define ID3D11VideoContext3_VideoProcessorGetOutputColorSpace(This,pVideoProcessor,pColorSpace) (This)->lpVtbl->VideoProcessorGetOutputColorSpace(This,pVideoProcessor,pColorSpace)
#define ID3D11VideoContext3_VideoProcessorGetOutputAlphaFillMode(This,pVideoProcessor,pAlphaFillMode,pStreamIndex) (This)->lpVtbl->VideoProcessorGetOutputAlphaFillMode(This,pVideoProcessor,pAlphaFillMode,pStreamIndex)
#define ID3D11VideoContext3_VideoProcessorGetOutputConstriction(This,pVideoProcessor,pEnabled,pSize) (This)->lpVtbl->VideoProcessorGetOutputConstriction(This,pVideoProcessor,pEnabled,pSize)
#define ID3D11VideoContext3_VideoProcessorGetOutputStereoMode(This,pVideoProcessor,pEnabled) (This)->lpVtbl->VideoProcessorGetOutputStereoMode(This,pVideoProcessor,pEnabled)
#define ID3D11VideoContext3_VideoProcessorGetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData) (This)->lpVtbl->VideoProcessorGetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData)
#define ID3D11VideoContext3_VideoProcessorSetStreamFrameFormat(This,pVideoProcessor,StreamIndex,FrameFormat) (This)->lpVtbl->VideoProcessorSetStreamFrameFormat(This,pVideoProcessor,StreamIndex,FrameFormat)
#define ID3D11VideoContext3_VideoProcessorSetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace) (This)->lpVtbl->VideoProcessorSetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace)
#define ID3D11VideoContext3_VideoProcessorSetStreamOutputRate(This,pVideoProcessor,StreamIndex,OutputRate,RepeatFrame,pCustomRate) (This)->lpVtbl->VideoProcessorSetStreamOutputRate(This,pVideoProcessor,StreamIndex,OutputRate,RepeatFrame,pCustomRate)
#define ID3D11VideoContext3_VideoProcessorSetStreamSourceRect(This,pVideoProcessor,StreamIndex,Enable,pRect) (This)->lpVtbl->VideoProcessorSetStreamSourceRect(This,pVideoProcessor,StreamIndex,Enable,pRect)
#define ID3D11VideoContext3_VideoProcessorSetStreamDestRect(This,pVideoProcessor,StreamIndex,Enable,pRect) (This)->lpVtbl->VideoProcessorSetStreamDestRect(This,pVideoProcessor,StreamIndex,Enable,pRect)
#define ID3D11VideoContext3_VideoProcessorSetStreamAlpha(This,pVideoProcessor,StreamIndex,Enable,Alpha) (This)->lpVtbl->VideoProcessorSetStreamAlpha(This,pVideoProcessor,StreamIndex,Enable,Alpha)
#define ID3D11VideoContext3_VideoProcessorSetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries) (This)->lpVtbl->VideoProcessorSetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries)
#define ID3D11VideoContext3_VideoProcessorSetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,Enable,pSourceAspectRatio,pDestinationAspectRatio) (This)->lpVtbl->VideoProcessorSetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,Enable,pSourceAspectRatio,pDestinationAspectRatio)
#define ID3D11VideoContext3_VideoProcessorSetStreamLumaKey(This,pVideoProcessor,StreamIndex,Enable,Lower,Upper) (This)->lpVtbl->VideoProcessorSetStreamLumaKey(This,pVideoProcessor,StreamIndex,Enable,Lower,Upper)
#define ID3D11VideoContext3_VideoProcessorSetStreamStereoFormat(This,pVideoProcessor,StreamIndex,Enable,Format,LeftViewFrame0,BaseViewFrame0,FlipMode,MonoOffset) (This)->lpVtbl->VideoProcessorSetStreamStereoFormat(This,pVideoProcessor,StreamIndex,Enable,Format,LeftViewFrame0,BaseViewFrame0,FlipMode,MonoOffset)
#define ID3D11VideoContext3_VideoProcessorSetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,Enable) (This)->lpVtbl->VideoProcessorSetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,Enable)
#define ID3D11VideoContext3_VideoProcessorSetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,Enable,Level) (This)->lpVtbl->VideoProcessorSetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,Enable,Level)
#define ID3D11VideoContext3_VideoProcessorSetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData) (This)->lpVtbl->VideoProcessorSetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData)
#define ID3D11VideoContext3_VideoProcessorGetStreamFrameFormat(This,pVideoProcessor,StreamIndex,pFrameFormat) (This)->lpVtbl->VideoProcessorGetStreamFrameFormat(This,pVideoProcessor,StreamIndex,pFrameFormat)
#define ID3D11VideoContext3_VideoProcessorGetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace) (This)->lpVtbl->VideoProcessorGetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace)
#define ID3D11VideoContext3_VideoProcessorGetStreamOutputRate(This,pVideoProcessor,StreamIndex,pOutputRate,pRepeatFrame,pCustomRate) (This)->lpVtbl->VideoProcessorGetStreamOutputRate(This,pVideoProcessor,StreamIndex,pOutputRate,pRepeatFrame,pCustomRate)
#define ID3D11VideoContext3_VideoProcessorGetStreamSourceRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect) (This)->lpVtbl->VideoProcessorGetStreamSourceRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect)
#define ID3D11VideoContext3_VideoProcessorGetStreamDestRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect) (This)->lpVtbl->VideoProcessorGetStreamDestRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect)
#define ID3D11VideoContext3_VideoProcessorGetStreamAlpha(This,pVideoProcessor,StreamIndex,pEnabled,pAlpha) (This)->lpVtbl->VideoProcessorGetStreamAlpha(This,pVideoProcessor,StreamIndex,pEnabled,pAlpha)
#define ID3D11VideoContext3_VideoProcessorGetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries) (This)->lpVtbl->VideoProcessorGetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries)
#define ID3D11VideoContext3_VideoProcessorGetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,pEnabled,pSourceAspectRatio,pDestinationAspectRatio) (This)->lpVtbl->VideoProcessorGetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,pEnabled,pSourceAspectRatio,pDestinationAspectRatio)
#define ID3D11VideoContext3_VideoProcessorGetStreamLumaKey(This,pVideoProcessor,StreamIndex,pEnabled,pLower,pUpper) (This)->lpVtbl->VideoProcessorGetStreamLumaKey(This,pVideoProcessor,StreamIndex,pEnabled,pLower,pUpper)
#define ID3D11VideoContext3_VideoProcessorGetStreamStereoFormat(This,pVideoProcessor,StreamIndex,pEnable,pFormat,pLeftViewFrame0,pBaseViewFrame0,pFlipMode,MonoOffset) (This)->lpVtbl->VideoProcessorGetStreamStereoFormat(This,pVideoProcessor,StreamIndex,pEnable,pFormat,pLeftViewFrame0,pBaseViewFrame0,pFlipMode,MonoOffset)
#define ID3D11VideoContext3_VideoProcessorGetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,pEnabled) (This)->lpVtbl->VideoProcessorGetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,pEnabled)
#define ID3D11VideoContext3_VideoProcessorGetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,pEnabled,pLevel) (This)->lpVtbl->VideoProcessorGetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,pEnabled,pLevel)
#define ID3D11VideoContext3_VideoProcessorGetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData) (This)->lpVtbl->VideoProcessorGetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData)
#define ID3D11VideoContext3_VideoProcessorBlt(This,pVideoProcessor,pView,OutputFrame,StreamCount,pStreams) (This)->lpVtbl->VideoProcessorBlt(This,pVideoProcessor,pView,OutputFrame,StreamCount,pStreams)
#define ID3D11VideoContext3_NegotiateCryptoSessionKeyExchange(This,pCryptoSession,DataSize,pData) (This)->lpVtbl->NegotiateCryptoSessionKeyExchange(This,pCryptoSession,DataSize,pData)
#define ID3D11VideoContext3_EncryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,IVSize,pIV) (This)->lpVtbl->EncryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,IVSize,pIV)
#define ID3D11VideoContext3_DecryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,pEncryptedBlockInfo,ContentKeySize,pContentKey,IVSize,pIV) (This)->lpVtbl->DecryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,pEncryptedBlockInfo,ContentKeySize,pContentKey,IVSize,pIV)
#define ID3D11VideoContext3_StartSessionKeyRefresh(This,pCryptoSession,RandomNumberSize,pRandomNumber) (This)->lpVtbl->StartSessionKeyRefresh(This,pCryptoSession,RandomNumberSize,pRandomNumber)
#define ID3D11VideoContext3_FinishSessionKeyRefresh(This,pCryptoSession) (This)->lpVtbl->FinishSessionKeyRefresh(This,pCryptoSession)
#define ID3D11VideoContext3_GetEncryptionBltKey(This,pCryptoSession,KeySize,pReadbackKey) (This)->lpVtbl->GetEncryptionBltKey(This,pCryptoSession,KeySize,pReadbackKey)
#define ID3D11VideoContext3_NegotiateAuthenticatedChannelKeyExchange(This,pChannel,DataSize,pData) (This)->lpVtbl->NegotiateAuthenticatedChannelKeyExchange(This,pChannel,DataSize,pData)
#define ID3D11VideoContext3_QueryAuthenticatedChannel(This,pChannel,InputSize,pInput,OutputSize,pOutput) (This)->lpVtbl->QueryAuthenticatedChannel(This,pChannel,InputSize,pInput,OutputSize,pOutput)
#define ID3D11VideoContext3_ConfigureAuthenticatedChannel(This,pChannel,InputSize,pInput,pOutput) (This)->lpVtbl->ConfigureAuthenticatedChannel(This,pChannel,InputSize,pInput,pOutput)
#define ID3D11VideoContext3_VideoProcessorSetStreamRotation(This,pVideoProcessor,StreamIndex,Enable,Rotation) (This)->lpVtbl->VideoProcessorSetStreamRotation(This,pVideoProcessor,StreamIndex,Enable,Rotation)
#define ID3D11VideoContext3_VideoProcessorGetStreamRotation(This,pVideoProcessor,StreamIndex,pEnable,pRotation) (This)->lpVtbl->VideoProcessorGetStreamRotation(This,pVideoProcessor,StreamIndex,pEnable,pRotation)
/*** ID3D11VideoContext1 methods ***/
#define ID3D11VideoContext3_SubmitDecoderBuffers1(This,pDecoder,NumBuffers,pBufferDesc) (This)->lpVtbl->SubmitDecoderBuffers1(This,pDecoder,NumBuffers,pBufferDesc)
#define ID3D11VideoContext3_GetDataForNewHardwareKey(This,pCryptoSession,PrivateInputSize,pPrivatInputData,pPrivateOutputData) (This)->lpVtbl->GetDataForNewHardwareKey(This,pCryptoSession,PrivateInputSize,pPrivatInputData,pPrivateOutputData)
#define ID3D11VideoContext3_CheckCryptoSessionStatus(This,pCryptoSession,pStatus) (This)->lpVtbl->CheckCryptoSessionStatus(This,pCryptoSession,pStatus)
#define ID3D11VideoContext3_DecoderEnableDownsampling(This,pDecoder,InputColorSpace,pOutputDesc,ReferenceFrameCount) (This)->lpVtbl->DecoderEnableDownsampling(This,pDecoder,InputColorSpace,pOutputDesc,ReferenceFrameCount)
#define ID3D11VideoContext3_DecoderUpdateDownsampling(This,pDecoder,pOutputDesc) (This)->lpVtbl->DecoderUpdateDownsampling(This,pDecoder,pOutputDesc)
#define ID3D11VideoContext3_VideoProcessorSetOutputColorSpace1(This,pVideoProcessor,ColorSpace) (This)->lpVtbl->VideoProcessorSetOutputColorSpace1(This,pVideoProcessor,ColorSpace)
#define ID3D11VideoContext3_VideoProcessorSetOutputShaderUsage(This,pVideoProcessor,ShaderUsage) (This)->lpVtbl->VideoProcessorSetOutputShaderUsage(This,pVideoProcessor,ShaderUsage)
#define ID3D11VideoContext3_VideoProcessorGetOutputColorSpace1(This,pVideoProcessor,pColorSpace) (This)->lpVtbl->VideoProcessorGetOutputColorSpace1(This,pVideoProcessor,pColorSpace)
#define ID3D11VideoContext3_VideoProcessorGetOutputShaderUsage(This,pVideoProcessor,pShaderUsage) (This)->lpVtbl->VideoProcessorGetOutputShaderUsage(This,pVideoProcessor,pShaderUsage)
#define ID3D11VideoContext3_VideoProcessorSetStreamColorSpace1(This,pVideoProcessor,StreamIndex,ColorSpace) (This)->lpVtbl->VideoProcessorSetStreamColorSpace1(This,pVideoProcessor,StreamIndex,ColorSpace)
#define ID3D11VideoContext3_VideoProcessorSetStreamMirror(This,pVideoProcessor,StreamIndex,Enable,FlipHorizontal,FlipVertical) (This)->lpVtbl->VideoProcessorSetStreamMirror(This,pVideoProcessor,StreamIndex,Enable,FlipHorizontal,FlipVertical)
#define ID3D11VideoContext3_VideoProcessorGetStreamColorSpace1(This,pVideoProcessor,StreamIndex,pColorSpace) (This)->lpVtbl->VideoProcessorGetStreamColorSpace1(This,pVideoProcessor,StreamIndex,pColorSpace)
#define ID3D11VideoContext3_VideoProcessorGetStreamMirror(This,pVideoProcessor,StreamIndex,pEnable,pFlipHorizontal,pFlipVertical) (This)->lpVtbl->VideoProcessorGetStreamMirror(This,pVideoProcessor,StreamIndex,pEnable,pFlipHorizontal,pFlipVertical)
#define ID3D11VideoContext3_VideoProcessorGetBehaviorHints(This,pVideoProcessor,OutputWidth,OutputHeight,OutputFormat,StreamCount,pStreams,pBehaviorHints) (This)->lpVtbl->VideoProcessorGetBehaviorHints(This,pVideoProcessor,OutputWidth,OutputHeight,OutputFormat,StreamCount,pStreams,pBehaviorHints)
/*** ID3D11VideoContext2 methods ***/
#define ID3D11VideoContext3_VideoProcessorSetOutputHDRMetaData(This,pVideoProcessor,Type,Size,pHDRMetaData) (This)->lpVtbl->VideoProcessorSetOutputHDRMetaData(This,pVideoProcessor,Type,Size,pHDRMetaData)
#define ID3D11VideoContext3_VideoProcessorGetOutputHDRMetaData(This,pVideoProcessor,pType,Size,pMetaData) (This)->lpVtbl->VideoProcessorGetOutputHDRMetaData(This,pVideoProcessor,pType,Size,pMetaData)
#define ID3D11VideoContext3_VideoProcessorSetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,Type,Size,pHDRMetaData) (This)->lpVtbl->VideoProcessorSetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,Type,Size,pHDRMetaData)
#define ID3D11VideoContext3_VideoProcessorGetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,pType,Size,pMetaData) (This)->lpVtbl->VideoProcessorGetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,pType,Size,pMetaData)
/*** ID3D11VideoContext3 methods ***/
#define ID3D11VideoContext3_DecoderBeginFrame1(This,pDecoder,pView,ContentKeySize,pContentKey,NumComponentHistograms,pHistogramOffsets,ppHistogramBuffers) (This)->lpVtbl->DecoderBeginFrame1(This,pDecoder,pView,ContentKeySize,pContentKey,NumComponentHistograms,pHistogramOffsets,ppHistogramBuffers)
#define ID3D11VideoContext3_SubmitDecoderBuffers2(This,pDecoder,NumBuffers,pBufferDesc) (This)->lpVtbl->SubmitDecoderBuffers2(This,pDecoder,NumBuffers,pBufferDesc)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ID3D11VideoContext3_QueryInterface(ID3D11VideoContext3* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ID3D11VideoContext3_AddRef(ID3D11VideoContext3* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ID3D11VideoContext3_Release(ID3D11VideoContext3* This) {
    return This->lpVtbl->Release(This);
}
/*** ID3D11DeviceChild methods ***/
static FORCEINLINE void ID3D11VideoContext3_GetDevice(ID3D11VideoContext3* This,ID3D11Device **ppDevice) {
    This->lpVtbl->GetDevice(This,ppDevice);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_GetPrivateData(ID3D11VideoContext3* This,REFGUID guid,UINT *pDataSize,void *pData) {
    return This->lpVtbl->GetPrivateData(This,guid,pDataSize,pData);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_SetPrivateData(ID3D11VideoContext3* This,REFGUID guid,UINT DataSize,const void *pData) {
    return This->lpVtbl->SetPrivateData(This,guid,DataSize,pData);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_SetPrivateDataInterface(ID3D11VideoContext3* This,REFGUID guid,const IUnknown *pData) {
    return This->lpVtbl->SetPrivateDataInterface(This,guid,pData);
}
/*** ID3D11VideoContext methods ***/
static FORCEINLINE HRESULT ID3D11VideoContext3_GetDecoderBuffer(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,D3D11_VIDEO_DECODER_BUFFER_TYPE Type,UINT *pBufferSize,void **ppBuffer) {
    return This->lpVtbl->GetDecoderBuffer(This,pDecoder,Type,pBufferSize,ppBuffer);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_ReleaseDecoderBuffer(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,D3D11_VIDEO_DECODER_BUFFER_TYPE Type) {
    return This->lpVtbl->ReleaseDecoderBuffer(This,pDecoder,Type);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_DecoderBeginFrame(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,ID3D11VideoDecoderOutputView *pView,UINT ContentKeySize,const void *pContentKey) {
    return This->lpVtbl->DecoderBeginFrame(This,pDecoder,pView,ContentKeySize,pContentKey);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_DecoderEndFrame(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder) {
    return This->lpVtbl->DecoderEndFrame(This,pDecoder);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_SubmitDecoderBuffers(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,UINT NumBuffers,const D3D11_VIDEO_DECODER_BUFFER_DESC *pBufferDesc) {
    return This->lpVtbl->SubmitDecoderBuffers(This,pDecoder,NumBuffers,pBufferDesc);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext3_DecoderExtension(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,const D3D11_VIDEO_DECODER_EXTENSION *pExtensionData) {
    return This->lpVtbl->DecoderExtension(This,pDecoder,pExtensionData);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetOutputTargetRect(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL Enable,const RECT *pRect) {
    This->lpVtbl->VideoProcessorSetOutputTargetRect(This,pVideoProcessor,Enable,pRect);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetOutputBackgroundColor(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL YCbCr,const D3D11_VIDEO_COLOR *pColor) {
    This->lpVtbl->VideoProcessorSetOutputBackgroundColor(This,pVideoProcessor,YCbCr,pColor);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetOutputColorSpace(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace) {
    This->lpVtbl->VideoProcessorSetOutputColorSpace(This,pVideoProcessor,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetOutputAlphaFillMode(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE AlphaFillMode,UINT StreamIndex) {
    This->lpVtbl->VideoProcessorSetOutputAlphaFillMode(This,pVideoProcessor,AlphaFillMode,StreamIndex);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetOutputConstriction(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL Enable,SIZE Size) {
    This->lpVtbl->VideoProcessorSetOutputConstriction(This,pVideoProcessor,Enable,Size);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetOutputStereoMode(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL Enable) {
    This->lpVtbl->VideoProcessorSetOutputStereoMode(This,pVideoProcessor,Enable);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext3_VideoProcessorSetOutputExtension(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,const GUID *pExtensionGuid,UINT DataSize,void *pData) {
    return This->lpVtbl->VideoProcessorSetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetOutputTargetRect(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *Enabled,RECT *pRect) {
    This->lpVtbl->VideoProcessorGetOutputTargetRect(This,pVideoProcessor,Enabled,pRect);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetOutputBackgroundColor(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *pYCbCr,D3D11_VIDEO_COLOR *pColor) {
    This->lpVtbl->VideoProcessorGetOutputBackgroundColor(This,pVideoProcessor,pYCbCr,pColor);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetOutputColorSpace(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace) {
    This->lpVtbl->VideoProcessorGetOutputColorSpace(This,pVideoProcessor,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetOutputAlphaFillMode(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE *pAlphaFillMode,UINT *pStreamIndex) {
    This->lpVtbl->VideoProcessorGetOutputAlphaFillMode(This,pVideoProcessor,pAlphaFillMode,pStreamIndex);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetOutputConstriction(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *pEnabled,SIZE *pSize) {
    This->lpVtbl->VideoProcessorGetOutputConstriction(This,pVideoProcessor,pEnabled,pSize);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetOutputStereoMode(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *pEnabled) {
    This->lpVtbl->VideoProcessorGetOutputStereoMode(This,pVideoProcessor,pEnabled);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext3_VideoProcessorGetOutputExtension(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,const GUID *pExtensionGuid,UINT DataSize,void *pData) {
    return This->lpVtbl->VideoProcessorGetOutputExtension(This,pVideoProcessor,pExtensionGuid,DataSize,pData);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamFrameFormat(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_FRAME_FORMAT FrameFormat) {
    This->lpVtbl->VideoProcessorSetStreamFrameFormat(This,pVideoProcessor,StreamIndex,FrameFormat);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamColorSpace(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace) {
    This->lpVtbl->VideoProcessorSetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamOutputRate(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_OUTPUT_RATE OutputRate,BOOL RepeatFrame,const DXGI_RATIONAL *pCustomRate) {
    This->lpVtbl->VideoProcessorSetStreamOutputRate(This,pVideoProcessor,StreamIndex,OutputRate,RepeatFrame,pCustomRate);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamSourceRect(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,const RECT *pRect) {
    This->lpVtbl->VideoProcessorSetStreamSourceRect(This,pVideoProcessor,StreamIndex,Enable,pRect);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamDestRect(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,const RECT *pRect) {
    This->lpVtbl->VideoProcessorSetStreamDestRect(This,pVideoProcessor,StreamIndex,Enable,pRect);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamAlpha(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,FLOAT Alpha) {
    This->lpVtbl->VideoProcessorSetStreamAlpha(This,pVideoProcessor,StreamIndex,Enable,Alpha);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamPalette(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,UINT Count,const UINT *pEntries) {
    This->lpVtbl->VideoProcessorSetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamPixelAspectRatio(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,const DXGI_RATIONAL *pSourceAspectRatio,const DXGI_RATIONAL *pDestinationAspectRatio) {
    This->lpVtbl->VideoProcessorSetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,Enable,pSourceAspectRatio,pDestinationAspectRatio);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamLumaKey(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,FLOAT Lower,FLOAT Upper) {
    This->lpVtbl->VideoProcessorSetStreamLumaKey(This,pVideoProcessor,StreamIndex,Enable,Lower,Upper);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamStereoFormat(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,D3D11_VIDEO_PROCESSOR_STEREO_FORMAT Format,BOOL LeftViewFrame0,BOOL BaseViewFrame0,D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE FlipMode,int MonoOffset) {
    This->lpVtbl->VideoProcessorSetStreamStereoFormat(This,pVideoProcessor,StreamIndex,Enable,Format,LeftViewFrame0,BaseViewFrame0,FlipMode,MonoOffset);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamAutoProcessingMode(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable) {
    This->lpVtbl->VideoProcessorSetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,Enable);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamFilter(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_FILTER Filter,BOOL Enable,int Level) {
    This->lpVtbl->VideoProcessorSetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,Enable,Level);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext3_VideoProcessorSetStreamExtension(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,const GUID *pExtensionGuid,UINT DataSize,void *pData) {
    return This->lpVtbl->VideoProcessorSetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamFrameFormat(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_FRAME_FORMAT *pFrameFormat) {
    This->lpVtbl->VideoProcessorGetStreamFrameFormat(This,pVideoProcessor,StreamIndex,pFrameFormat);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamColorSpace(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_COLOR_SPACE *pColorSpace) {
    This->lpVtbl->VideoProcessorGetStreamColorSpace(This,pVideoProcessor,StreamIndex,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamOutputRate(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_OUTPUT_RATE *pOutputRate,BOOL *pRepeatFrame,DXGI_RATIONAL *pCustomRate) {
    This->lpVtbl->VideoProcessorGetStreamOutputRate(This,pVideoProcessor,StreamIndex,pOutputRate,pRepeatFrame,pCustomRate);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamSourceRect(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,RECT *pRect) {
    This->lpVtbl->VideoProcessorGetStreamSourceRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamDestRect(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,RECT *pRect) {
    This->lpVtbl->VideoProcessorGetStreamDestRect(This,pVideoProcessor,StreamIndex,pEnabled,pRect);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamAlpha(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,FLOAT *pAlpha) {
    This->lpVtbl->VideoProcessorGetStreamAlpha(This,pVideoProcessor,StreamIndex,pEnabled,pAlpha);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamPalette(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,UINT Count,UINT *pEntries) {
    This->lpVtbl->VideoProcessorGetStreamPalette(This,pVideoProcessor,StreamIndex,Count,pEntries);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,DXGI_RATIONAL *pSourceAspectRatio,DXGI_RATIONAL *pDestinationAspectRatio) {
    This->lpVtbl->VideoProcessorGetStreamPixelAspectRatio(This,pVideoProcessor,StreamIndex,pEnabled,pSourceAspectRatio,pDestinationAspectRatio);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamLumaKey(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled,FLOAT *pLower,FLOAT *pUpper) {
    This->lpVtbl->VideoProcessorGetStreamLumaKey(This,pVideoProcessor,StreamIndex,pEnabled,pLower,pUpper);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamStereoFormat(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnable,D3D11_VIDEO_PROCESSOR_STEREO_FORMAT *pFormat,BOOL *pLeftViewFrame0,BOOL *pBaseViewFrame0,D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE *pFlipMode,int *MonoOffset) {
    This->lpVtbl->VideoProcessorGetStreamStereoFormat(This,pVideoProcessor,StreamIndex,pEnable,pFormat,pLeftViewFrame0,pBaseViewFrame0,pFlipMode,MonoOffset);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamAutoProcessingMode(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnabled) {
    This->lpVtbl->VideoProcessorGetStreamAutoProcessingMode(This,pVideoProcessor,StreamIndex,pEnabled);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamFilter(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,D3D11_VIDEO_PROCESSOR_FILTER Filter,BOOL *pEnabled,int *pLevel) {
    This->lpVtbl->VideoProcessorGetStreamFilter(This,pVideoProcessor,StreamIndex,Filter,pEnabled,pLevel);
}
static FORCEINLINE APP_DEPRECATED_HRESULT ID3D11VideoContext3_VideoProcessorGetStreamExtension(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,const GUID *pExtensionGuid,UINT DataSize,void *pData) {
    return This->lpVtbl->VideoProcessorGetStreamExtension(This,pVideoProcessor,StreamIndex,pExtensionGuid,DataSize,pData);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_VideoProcessorBlt(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,ID3D11VideoProcessorOutputView *pView,UINT OutputFrame,UINT StreamCount,const D3D11_VIDEO_PROCESSOR_STREAM *pStreams) {
    return This->lpVtbl->VideoProcessorBlt(This,pVideoProcessor,pView,OutputFrame,StreamCount,pStreams);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_NegotiateCryptoSessionKeyExchange(ID3D11VideoContext3* This,ID3D11CryptoSession *pCryptoSession,UINT DataSize,void *pData) {
    return This->lpVtbl->NegotiateCryptoSessionKeyExchange(This,pCryptoSession,DataSize,pData);
}
static FORCEINLINE void ID3D11VideoContext3_EncryptionBlt(ID3D11VideoContext3* This,ID3D11CryptoSession *pCryptoSession,ID3D11Texture2D *pSrcSurface,ID3D11Texture2D *pDstSurface,UINT IVSize,void *pIV) {
    This->lpVtbl->EncryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,IVSize,pIV);
}
static FORCEINLINE void ID3D11VideoContext3_DecryptionBlt(ID3D11VideoContext3* This,ID3D11CryptoSession *pCryptoSession,ID3D11Texture2D *pSrcSurface,ID3D11Texture2D *pDstSurface,D3D11_ENCRYPTED_BLOCK_INFO *pEncryptedBlockInfo,UINT ContentKeySize,const void *pContentKey,UINT IVSize,void *pIV) {
    This->lpVtbl->DecryptionBlt(This,pCryptoSession,pSrcSurface,pDstSurface,pEncryptedBlockInfo,ContentKeySize,pContentKey,IVSize,pIV);
}
static FORCEINLINE void ID3D11VideoContext3_StartSessionKeyRefresh(ID3D11VideoContext3* This,ID3D11CryptoSession *pCryptoSession,UINT RandomNumberSize,void *pRandomNumber) {
    This->lpVtbl->StartSessionKeyRefresh(This,pCryptoSession,RandomNumberSize,pRandomNumber);
}
static FORCEINLINE void ID3D11VideoContext3_FinishSessionKeyRefresh(ID3D11VideoContext3* This,ID3D11CryptoSession *pCryptoSession) {
    This->lpVtbl->FinishSessionKeyRefresh(This,pCryptoSession);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_GetEncryptionBltKey(ID3D11VideoContext3* This,ID3D11CryptoSession *pCryptoSession,UINT KeySize,void *pReadbackKey) {
    return This->lpVtbl->GetEncryptionBltKey(This,pCryptoSession,KeySize,pReadbackKey);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_NegotiateAuthenticatedChannelKeyExchange(ID3D11VideoContext3* This,ID3D11AuthenticatedChannel *pChannel,UINT DataSize,void *pData) {
    return This->lpVtbl->NegotiateAuthenticatedChannelKeyExchange(This,pChannel,DataSize,pData);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_QueryAuthenticatedChannel(ID3D11VideoContext3* This,ID3D11AuthenticatedChannel *pChannel,UINT InputSize,const void *pInput,UINT OutputSize,void *pOutput) {
    return This->lpVtbl->QueryAuthenticatedChannel(This,pChannel,InputSize,pInput,OutputSize,pOutput);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_ConfigureAuthenticatedChannel(ID3D11VideoContext3* This,ID3D11AuthenticatedChannel *pChannel,UINT InputSize,const void *pInput,D3D11_AUTHENTICATED_CONFIGURE_OUTPUT *pOutput) {
    return This->lpVtbl->ConfigureAuthenticatedChannel(This,pChannel,InputSize,pInput,pOutput);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamRotation(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,D3D11_VIDEO_PROCESSOR_ROTATION Rotation) {
    This->lpVtbl->VideoProcessorSetStreamRotation(This,pVideoProcessor,StreamIndex,Enable,Rotation);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamRotation(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnable,D3D11_VIDEO_PROCESSOR_ROTATION *pRotation) {
    This->lpVtbl->VideoProcessorGetStreamRotation(This,pVideoProcessor,StreamIndex,pEnable,pRotation);
}
/*** ID3D11VideoContext1 methods ***/
static FORCEINLINE HRESULT ID3D11VideoContext3_SubmitDecoderBuffers1(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,UINT NumBuffers,const D3D11_VIDEO_DECODER_BUFFER_DESC1 *pBufferDesc) {
    return This->lpVtbl->SubmitDecoderBuffers1(This,pDecoder,NumBuffers,pBufferDesc);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_GetDataForNewHardwareKey(ID3D11VideoContext3* This,ID3D11CryptoSession *pCryptoSession,UINT PrivateInputSize,const void *pPrivatInputData,UINT64 *pPrivateOutputData) {
    return This->lpVtbl->GetDataForNewHardwareKey(This,pCryptoSession,PrivateInputSize,pPrivatInputData,pPrivateOutputData);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_CheckCryptoSessionStatus(ID3D11VideoContext3* This,ID3D11CryptoSession *pCryptoSession,D3D11_CRYPTO_SESSION_STATUS *pStatus) {
    return This->lpVtbl->CheckCryptoSessionStatus(This,pCryptoSession,pStatus);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_DecoderEnableDownsampling(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,DXGI_COLOR_SPACE_TYPE InputColorSpace,const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc,UINT ReferenceFrameCount) {
    return This->lpVtbl->DecoderEnableDownsampling(This,pDecoder,InputColorSpace,pOutputDesc,ReferenceFrameCount);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_DecoderUpdateDownsampling(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,const D3D11_VIDEO_SAMPLE_DESC *pOutputDesc) {
    return This->lpVtbl->DecoderUpdateDownsampling(This,pDecoder,pOutputDesc);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetOutputColorSpace1(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,DXGI_COLOR_SPACE_TYPE ColorSpace) {
    This->lpVtbl->VideoProcessorSetOutputColorSpace1(This,pVideoProcessor,ColorSpace);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetOutputShaderUsage(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL ShaderUsage) {
    This->lpVtbl->VideoProcessorSetOutputShaderUsage(This,pVideoProcessor,ShaderUsage);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetOutputColorSpace1(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,DXGI_COLOR_SPACE_TYPE *pColorSpace) {
    This->lpVtbl->VideoProcessorGetOutputColorSpace1(This,pVideoProcessor,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetOutputShaderUsage(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,BOOL *pShaderUsage) {
    This->lpVtbl->VideoProcessorGetOutputShaderUsage(This,pVideoProcessor,pShaderUsage);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamColorSpace1(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,DXGI_COLOR_SPACE_TYPE ColorSpace) {
    This->lpVtbl->VideoProcessorSetStreamColorSpace1(This,pVideoProcessor,StreamIndex,ColorSpace);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamMirror(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL Enable,BOOL FlipHorizontal,BOOL FlipVertical) {
    This->lpVtbl->VideoProcessorSetStreamMirror(This,pVideoProcessor,StreamIndex,Enable,FlipHorizontal,FlipVertical);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamColorSpace1(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,DXGI_COLOR_SPACE_TYPE *pColorSpace) {
    This->lpVtbl->VideoProcessorGetStreamColorSpace1(This,pVideoProcessor,StreamIndex,pColorSpace);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamMirror(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,BOOL *pEnable,BOOL *pFlipHorizontal,BOOL *pFlipVertical) {
    This->lpVtbl->VideoProcessorGetStreamMirror(This,pVideoProcessor,StreamIndex,pEnable,pFlipHorizontal,pFlipVertical);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_VideoProcessorGetBehaviorHints(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT OutputWidth,UINT OutputHeight,DXGI_FORMAT OutputFormat,UINT StreamCount,const D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT *pStreams,UINT *pBehaviorHints) {
    return This->lpVtbl->VideoProcessorGetBehaviorHints(This,pVideoProcessor,OutputWidth,OutputHeight,OutputFormat,StreamCount,pStreams,pBehaviorHints);
}
/*** ID3D11VideoContext2 methods ***/
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetOutputHDRMetaData(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,DXGI_HDR_METADATA_TYPE Type,UINT Size,const void *pHDRMetaData) {
    This->lpVtbl->VideoProcessorSetOutputHDRMetaData(This,pVideoProcessor,Type,Size,pHDRMetaData);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetOutputHDRMetaData(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,DXGI_HDR_METADATA_TYPE *pType,UINT Size,void *pMetaData) {
    This->lpVtbl->VideoProcessorGetOutputHDRMetaData(This,pVideoProcessor,pType,Size,pMetaData);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorSetStreamHDRMetaData(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,DXGI_HDR_METADATA_TYPE Type,UINT Size,const void *pHDRMetaData) {
    This->lpVtbl->VideoProcessorSetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,Type,Size,pHDRMetaData);
}
static FORCEINLINE void ID3D11VideoContext3_VideoProcessorGetStreamHDRMetaData(ID3D11VideoContext3* This,ID3D11VideoProcessor *pVideoProcessor,UINT StreamIndex,DXGI_HDR_METADATA_TYPE *pType,UINT Size,void *pMetaData) {
    This->lpVtbl->VideoProcessorGetStreamHDRMetaData(This,pVideoProcessor,StreamIndex,pType,Size,pMetaData);
}
/*** ID3D11VideoContext3 methods ***/
static FORCEINLINE HRESULT ID3D11VideoContext3_DecoderBeginFrame1(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,ID3D11VideoDecoderOutputView *pView,UINT ContentKeySize,const void *pContentKey,UINT NumComponentHistograms,const UINT *pHistogramOffsets,ID3D11Buffer *const *ppHistogramBuffers) {
    return This->lpVtbl->DecoderBeginFrame1(This,pDecoder,pView,ContentKeySize,pContentKey,NumComponentHistograms,pHistogramOffsets,ppHistogramBuffers);
}
static FORCEINLINE HRESULT ID3D11VideoContext3_SubmitDecoderBuffers2(ID3D11VideoContext3* This,ID3D11VideoDecoder *pDecoder,UINT NumBuffers,const D3D11_VIDEO_DECODER_BUFFER_DESC2 *pBufferDesc) {
    return This->lpVtbl->SubmitDecoderBuffers2(This,pDecoder,NumBuffers,pBufferDesc);
}
#endif
#endif

#endif


#endif  /* __ID3D11VideoContext3_INTERFACE_DEFINED__ */

typedef struct D3D11_FEATURE_DATA_D3D11_OPTIONS4 {
    BOOL ExtendedNV12SharedTextureSupported;
} D3D11_FEATURE_DATA_D3D11_OPTIONS4;
#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) */
DEFINE_GUID(IID_ID3D11Device4,0x8992ab71,0x02e6,0x4b8d,0xba,0x48,0xb0,0x56,0xdc,0xda,0x42,0xc4);
DEFINE_GUID(IID_ID3D11Device5,0x8ffde202,0xa0e7,0x45df,0x9e,0x01,0xe8,0x37,0x80,0x1b,0x5e,0xa0);
DEFINE_GUID(IID_ID3D11Multithread,0x9B7E4E00,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D11VideoContext2,0xC4E7374C,0x6243,0x4D1B,0xAE,0x87,0x52,0xB4,0xF7,0x40,0xE2,0x61);
DEFINE_GUID(IID_ID3D11VideoDevice2,0x59C0CB01,0x35F0,0x4A70,0x8F,0x67,0x87,0x90,0x5C,0x90,0x6A,0x53);
DEFINE_GUID(IID_ID3D11VideoContext3,0xA9E2FAA0,0xCB39,0x418F,0xA0,0xB7,0xD8,0xAA,0xD4,0xDE,0x67,0x2E);
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __d3d11_4_h__ */
